--
-- PostgreSQL database cluster dump
--

\restrict BBKwI5Tq8hrPsSu0woUIjN0slKOqUbW3nDIfSbFoBlo9VfDAXQikjO1wAD6D4c6

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE anon;
ALTER ROLE anon WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticated;
ALTER ROLE authenticated WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticator;
ALTER ROLE authenticator WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE dashboard_user;
ALTER ROLE dashboard_user WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB NOLOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE pgbouncer;
ALTER ROLE pgbouncer WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE postgres;
ALTER ROLE postgres WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE service_role;
ALTER ROLE service_role WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_admin;
ALTER ROLE supabase_admin WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE supabase_auth_admin;
ALTER ROLE supabase_auth_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_etl_admin;
ALTER ROLE supabase_etl_admin WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE supabase_read_only_user;
ALTER ROLE supabase_read_only_user WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_realtime_admin;
ALTER ROLE supabase_realtime_admin WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_replication_admin;
ALTER ROLE supabase_replication_admin WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE supabase_storage_admin;
ALTER ROLE supabase_storage_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;

--
-- User Configurations
--

--
-- User Config "anon"
--

ALTER ROLE anon SET statement_timeout TO '3s';

--
-- User Config "authenticated"
--

ALTER ROLE authenticated SET statement_timeout TO '8s';

--
-- User Config "authenticator"
--

ALTER ROLE authenticator SET session_preload_libraries TO 'safeupdate';
ALTER ROLE authenticator SET statement_timeout TO '8s';
ALTER ROLE authenticator SET lock_timeout TO '8s';

--
-- User Config "postgres"
--

ALTER ROLE postgres SET search_path TO E'\\$user', 'public', 'extensions';

--
-- User Config "supabase_admin"
--

ALTER ROLE supabase_admin SET search_path TO '$user', 'public', 'auth', 'extensions';
ALTER ROLE supabase_admin SET log_statement TO 'none';

--
-- User Config "supabase_auth_admin"
--

ALTER ROLE supabase_auth_admin SET search_path TO 'auth';
ALTER ROLE supabase_auth_admin SET idle_in_transaction_session_timeout TO '60000';
ALTER ROLE supabase_auth_admin SET log_statement TO 'none';

--
-- User Config "supabase_read_only_user"
--

ALTER ROLE supabase_read_only_user SET default_transaction_read_only TO 'on';

--
-- User Config "supabase_storage_admin"
--

ALTER ROLE supabase_storage_admin SET search_path TO 'storage';
ALTER ROLE supabase_storage_admin SET log_statement TO 'none';


--
-- Role memberships
--

GRANT anon TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT anon TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticated TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT authenticated TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO supabase_storage_admin WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT pg_create_subscription TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_monitor TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO supabase_etl_admin WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO supabase_read_only_user WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_signal_backend TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT service_role TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT service_role TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT supabase_realtime_admin TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;






\unrestrict BBKwI5Tq8hrPsSu0woUIjN0slKOqUbW3nDIfSbFoBlo9VfDAXQikjO1wAD6D4c6

--
-- Databases
--

--
-- Database "template1" dump
--

\connect template1

--
-- PostgreSQL database dump
--

\restrict XUlnCPobXTrFFReIXfCuEreNcGlpIMvP722DcXPG0hhDJWUPSuQp9fyDnwn3rc7

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-1.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- PostgreSQL database dump complete
--

\unrestrict XUlnCPobXTrFFReIXfCuEreNcGlpIMvP722DcXPG0hhDJWUPSuQp9fyDnwn3rc7

--
-- Database "postgres" dump
--

\connect postgres

--
-- PostgreSQL database dump
--

\restrict je1BWMIK3zEzxviXixXVgo0uS8iaGmGyXtaqnqPsmA1weB9KFSx2CVShQMczk53

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-1.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO supabase_admin;

--
-- Name: extensions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA extensions;


ALTER SCHEMA extensions OWNER TO postgres;

--
-- Name: graphql; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql;


ALTER SCHEMA graphql OWNER TO supabase_admin;

--
-- Name: graphql_public; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql_public;


ALTER SCHEMA graphql_public OWNER TO supabase_admin;

--
-- Name: pgbouncer; Type: SCHEMA; Schema: -; Owner: pgbouncer
--

CREATE SCHEMA pgbouncer;


ALTER SCHEMA pgbouncer OWNER TO pgbouncer;

--
-- Name: realtime; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA realtime;


ALTER SCHEMA realtime OWNER TO supabase_admin;

--
-- Name: storage; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA storage;


ALTER SCHEMA storage OWNER TO supabase_admin;

--
-- Name: supabase_migrations; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA supabase_migrations;


ALTER SCHEMA supabase_migrations OWNER TO postgres;

--
-- Name: vault; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA vault;


ALTER SCHEMA vault OWNER TO supabase_admin;

--
-- Name: pg_graphql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_graphql WITH SCHEMA graphql;


--
-- Name: EXTENSION pg_graphql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_graphql IS 'pg_graphql: GraphQL support';


--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA extensions;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track planning and execution statistics of all SQL statements executed';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA extensions;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: supabase_vault; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS supabase_vault WITH SCHEMA vault;


--
-- Name: EXTENSION supabase_vault; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION supabase_vault IS 'Supabase Vault Extension';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA extensions;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: aal_level; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.aal_level AS ENUM (
    'aal1',
    'aal2',
    'aal3'
);


ALTER TYPE auth.aal_level OWNER TO supabase_auth_admin;

--
-- Name: code_challenge_method; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.code_challenge_method AS ENUM (
    's256',
    'plain'
);


ALTER TYPE auth.code_challenge_method OWNER TO supabase_auth_admin;

--
-- Name: factor_status; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_status AS ENUM (
    'unverified',
    'verified'
);


ALTER TYPE auth.factor_status OWNER TO supabase_auth_admin;

--
-- Name: factor_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_type AS ENUM (
    'totp',
    'webauthn',
    'phone'
);


ALTER TYPE auth.factor_type OWNER TO supabase_auth_admin;

--
-- Name: oauth_registration_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.oauth_registration_type AS ENUM (
    'dynamic',
    'manual'
);


ALTER TYPE auth.oauth_registration_type OWNER TO supabase_auth_admin;

--
-- Name: one_time_token_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.one_time_token_type AS ENUM (
    'confirmation_token',
    'reauthentication_token',
    'recovery_token',
    'email_change_token_new',
    'email_change_token_current',
    'phone_change_token'
);


ALTER TYPE auth.one_time_token_type OWNER TO supabase_auth_admin;

--
-- Name: access_level; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.access_level AS ENUM (
    'read',
    'write'
);


ALTER TYPE public.access_level OWNER TO postgres;

--
-- Name: app_role; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.app_role AS ENUM (
    'admin',
    'project_coordinator'
);


ALTER TYPE public.app_role OWNER TO postgres;

--
-- Name: module_name; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.module_name AS ENUM (
    'overview',
    'tasks_milestones',
    'roadmap',
    'kanban',
    'stakeholders',
    'risk_register',
    'discussions',
    'task_backlog',
    'team_capacity',
    'retrospectives',
    'budget'
);


ALTER TYPE public.module_name OWNER TO postgres;

--
-- Name: action; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.action AS ENUM (
    'INSERT',
    'UPDATE',
    'DELETE',
    'TRUNCATE',
    'ERROR'
);


ALTER TYPE realtime.action OWNER TO supabase_admin;

--
-- Name: equality_op; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.equality_op AS ENUM (
    'eq',
    'neq',
    'lt',
    'lte',
    'gt',
    'gte',
    'in'
);


ALTER TYPE realtime.equality_op OWNER TO supabase_admin;

--
-- Name: user_defined_filter; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.user_defined_filter AS (
	column_name text,
	op realtime.equality_op,
	value text
);


ALTER TYPE realtime.user_defined_filter OWNER TO supabase_admin;

--
-- Name: wal_column; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_column AS (
	name text,
	type_name text,
	type_oid oid,
	value jsonb,
	is_pkey boolean,
	is_selectable boolean
);


ALTER TYPE realtime.wal_column OWNER TO supabase_admin;

--
-- Name: wal_rls; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_rls AS (
	wal jsonb,
	is_rls_enabled boolean,
	subscription_ids uuid[],
	errors text[]
);


ALTER TYPE realtime.wal_rls OWNER TO supabase_admin;

--
-- Name: buckettype; Type: TYPE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TYPE storage.buckettype AS ENUM (
    'STANDARD',
    'ANALYTICS'
);


ALTER TYPE storage.buckettype OWNER TO supabase_storage_admin;

--
-- Name: email(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.email() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.email', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')
  )::text
$$;


ALTER FUNCTION auth.email() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION email(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.email() IS 'Deprecated. Use auth.jwt() -> ''email'' instead.';


--
-- Name: jwt(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.jwt() RETURNS jsonb
    LANGUAGE sql STABLE
    AS $$
  select 
    coalesce(
        nullif(current_setting('request.jwt.claim', true), ''),
        nullif(current_setting('request.jwt.claims', true), '')
    )::jsonb
$$;


ALTER FUNCTION auth.jwt() OWNER TO supabase_auth_admin;

--
-- Name: role(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.role() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.role', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')
  )::text
$$;


ALTER FUNCTION auth.role() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION role(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.role() IS 'Deprecated. Use auth.jwt() -> ''role'' instead.';


--
-- Name: uid(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.uid() RETURNS uuid
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.sub', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')
  )::uuid
$$;


ALTER FUNCTION auth.uid() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION uid(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.uid() IS 'Deprecated. Use auth.jwt() -> ''sub'' instead.';


--
-- Name: grant_pg_cron_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_cron_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_cron'
  )
  THEN
    grant usage on schema cron to postgres with grant option;

    alter default privileges in schema cron grant all on tables to postgres with grant option;
    alter default privileges in schema cron grant all on functions to postgres with grant option;
    alter default privileges in schema cron grant all on sequences to postgres with grant option;

    alter default privileges for user supabase_admin in schema cron grant all
        on sequences to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on tables to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on functions to postgres with grant option;

    grant all privileges on all tables in schema cron to postgres with grant option;
    revoke all on table cron.job from postgres;
    grant select on table cron.job to postgres with grant option;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_cron_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_cron_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_cron_access() IS 'Grants access to pg_cron';


--
-- Name: grant_pg_graphql_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_graphql_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    func_is_graphql_resolve bool;
BEGIN
    func_is_graphql_resolve = (
        SELECT n.proname = 'resolve'
        FROM pg_event_trigger_ddl_commands() AS ev
        LEFT JOIN pg_catalog.pg_proc AS n
        ON ev.objid = n.oid
    );

    IF func_is_graphql_resolve
    THEN
        -- Update public wrapper to pass all arguments through to the pg_graphql resolve func
        DROP FUNCTION IF EXISTS graphql_public.graphql;
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language sql
        as $$
            select graphql.resolve(
                query := query,
                variables := coalesce(variables, '{}'),
                "operationName" := "operationName",
                extensions := extensions
            );
        $$;

        -- This hook executes when `graphql.resolve` is created. That is not necessarily the last
        -- function in the extension so we need to grant permissions on existing entities AND
        -- update default permissions to any others that are created after `graphql.resolve`
        grant usage on schema graphql to postgres, anon, authenticated, service_role;
        grant select on all tables in schema graphql to postgres, anon, authenticated, service_role;
        grant execute on all functions in schema graphql to postgres, anon, authenticated, service_role;
        grant all on all sequences in schema graphql to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on tables to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on functions to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on sequences to postgres, anon, authenticated, service_role;

        -- Allow postgres role to allow granting usage on graphql and graphql_public schemas to custom roles
        grant usage on schema graphql_public to postgres with grant option;
        grant usage on schema graphql to postgres with grant option;
    END IF;

END;
$_$;


ALTER FUNCTION extensions.grant_pg_graphql_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_graphql_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_graphql_access() IS 'Grants access to pg_graphql';


--
-- Name: grant_pg_net_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_net_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT 1
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_net'
  )
  THEN
    IF NOT EXISTS (
      SELECT 1
      FROM pg_roles
      WHERE rolname = 'supabase_functions_admin'
    )
    THEN
      CREATE USER supabase_functions_admin NOINHERIT CREATEROLE LOGIN NOREPLICATION;
    END IF;

    GRANT USAGE ON SCHEMA net TO supabase_functions_admin, postgres, anon, authenticated, service_role;

    IF EXISTS (
      SELECT FROM pg_extension
      WHERE extname = 'pg_net'
      -- all versions in use on existing projects as of 2025-02-20
      -- version 0.12.0 onwards don't need these applied
      AND extversion IN ('0.2', '0.6', '0.7', '0.7.1', '0.8', '0.10.0', '0.11.0')
    ) THEN
      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;

      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;

      REVOKE ALL ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;
      REVOKE ALL ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;

      GRANT EXECUTE ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
      GRANT EXECUTE ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
    END IF;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_net_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_net_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_net_access() IS 'Grants access to pg_net';


--
-- Name: pgrst_ddl_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_ddl_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  cmd record;
BEGIN
  FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()
  LOOP
    IF cmd.command_tag IN (
      'CREATE SCHEMA', 'ALTER SCHEMA'
    , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'
    , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'
    , 'CREATE VIEW', 'ALTER VIEW'
    , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'
    , 'CREATE FUNCTION', 'ALTER FUNCTION'
    , 'CREATE TRIGGER'
    , 'CREATE TYPE', 'ALTER TYPE'
    , 'CREATE RULE'
    , 'COMMENT'
    )
    -- don't notify in case of CREATE TEMP table or other objects created on pg_temp
    AND cmd.schema_name is distinct from 'pg_temp'
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_ddl_watch() OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_drop_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  obj record;
BEGIN
  FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
  LOOP
    IF obj.object_type IN (
      'schema'
    , 'table'
    , 'foreign table'
    , 'view'
    , 'materialized view'
    , 'function'
    , 'trigger'
    , 'type'
    , 'rule'
    )
    AND obj.is_temporary IS false -- no pg_temp objects
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_drop_watch() OWNER TO supabase_admin;

--
-- Name: set_graphql_placeholder(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.set_graphql_placeholder() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
    DECLARE
    graphql_is_dropped bool;
    BEGIN
    graphql_is_dropped = (
        SELECT ev.schema_name = 'graphql_public'
        FROM pg_event_trigger_dropped_objects() AS ev
        WHERE ev.schema_name = 'graphql_public'
    );

    IF graphql_is_dropped
    THEN
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language plpgsql
        as $$
            DECLARE
                server_version float;
            BEGIN
                server_version = (SELECT (SPLIT_PART((select version()), ' ', 2))::float);

                IF server_version >= 14 THEN
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql extension is not enabled.'
                            )
                        )
                    );
                ELSE
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql is only available on projects running Postgres 14 onwards.'
                            )
                        )
                    );
                END IF;
            END;
        $$;
    END IF;

    END;
$_$;


ALTER FUNCTION extensions.set_graphql_placeholder() OWNER TO supabase_admin;

--
-- Name: FUNCTION set_graphql_placeholder(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.set_graphql_placeholder() IS 'Reintroduces placeholder function for graphql_public.graphql';


--
-- Name: get_auth(text); Type: FUNCTION; Schema: pgbouncer; Owner: supabase_admin
--

CREATE FUNCTION pgbouncer.get_auth(p_usename text) RETURNS TABLE(username text, password text)
    LANGUAGE plpgsql SECURITY DEFINER
    AS $_$
begin
    raise debug 'PgBouncer auth request: %', p_usename;

    return query
    select 
        rolname::text, 
        case when rolvaliduntil < now() 
            then null 
            else rolpassword::text 
        end 
    from pg_authid 
    where rolname=$1 and rolcanlogin;
end;
$_$;


ALTER FUNCTION pgbouncer.get_auth(p_usename text) OWNER TO supabase_admin;

--
-- Name: calculate_effective_capacity(integer, integer, integer, text, numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric DEFAULT 1.0, wfh_weight numeric DEFAULT 0.9, hybrid_weight numeric DEFAULT 0.95) RETURNS numeric
    LANGUAGE plpgsql IMMUTABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  mode_weight NUMERIC;
BEGIN
  -- Get the weight based on work mode
  CASE work_mode
    WHEN 'office' THEN mode_weight := office_weight;
    WHEN 'wfh' THEN mode_weight := wfh_weight;
    WHEN 'hybrid' THEN mode_weight := hybrid_weight;
    ELSE mode_weight := 1.0;
  END CASE;
  
  -- Calculate effective capacity: (working_days - leaves) * (availability_percent/100) * mode_weight
  RETURN (working_days - leaves) * (availability_percent::NUMERIC / 100.0) * mode_weight;
END;
$$;


ALTER FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric, wfh_weight numeric, hybrid_weight numeric) OWNER TO postgres;

--
-- Name: calculate_weekly_effective_capacity(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calculate_weekly_effective_capacity() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  member_work_mode TEXT;
BEGIN
  -- Get the team member's work mode
  SELECT work_mode INTO member_work_mode
  FROM team_capacity_members
  WHERE id = NEW.team_member_id;
  
  -- Calculate effective capacity based on 5 working days per week
  NEW.effective_capacity := public.calculate_effective_capacity(
    5, -- 5 working days per week
    NEW.leaves,
    NEW.availability_percent,
    COALESCE(member_work_mode, 'office')
  );
  
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.calculate_weekly_effective_capacity() OWNER TO postgres;

--
-- Name: find_user_by_email(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.find_user_by_email(_email text) RETURNS uuid
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT id FROM public.profiles WHERE lower(email) = lower(_email) LIMIT 1;
$$;


ALTER FUNCTION public.find_user_by_email(_email text) OWNER TO postgres;

--
-- Name: get_user_department(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_department(_user_id uuid) RETURNS uuid
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT department_id FROM public.profiles WHERE id = _user_id;
$$;


ALTER FUNCTION public.get_user_department(_user_id uuid) OWNER TO postgres;

--
-- Name: get_user_email_by_id(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_email_by_id(_user_id uuid) RETURNS text
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT email FROM public.profiles WHERE id = _user_id LIMIT 1;
$$;


ALTER FUNCTION public.get_user_email_by_id(_user_id uuid) OWNER TO postgres;

--
-- Name: get_user_emails_by_ids(uuid[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_emails_by_ids(_user_ids uuid[]) RETURNS TABLE(id uuid, email text)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT profiles.id, profiles.email FROM public.profiles WHERE profiles.id = ANY(_user_ids);
$$;


ALTER FUNCTION public.get_user_emails_by_ids(_user_ids uuid[]) OWNER TO postgres;

--
-- Name: handle_new_user(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_new_user() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
    -- Insert into profiles
    INSERT INTO public.profiles (id, email, full_name)
    VALUES (
        NEW.id, 
        NEW.email,
        COALESCE(NEW.raw_user_meta_data ->> 'full_name', NEW.email)
    );
    
    -- Assign Project Coordinator role by default (unless it's the admin email)
    IF NEW.email = 'admin@admin.com' THEN
        INSERT INTO public.user_roles (user_id, role)
        VALUES (NEW.id, 'admin');
    ELSE
        INSERT INTO public.user_roles (user_id, role)
        VALUES (NEW.id, 'project_coordinator');
    END IF;
    
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.handle_new_user() OWNER TO postgres;

--
-- Name: has_module_permission(uuid, uuid, public.module_name, public.access_level); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  -- Project owner has full access
  SELECT EXISTS (
    SELECT 1 FROM public.projects p
    WHERE p.id = _project_id AND p.created_by = _user_id
  )
  OR
  -- Admin has full access
  has_role(_user_id, 'admin'::app_role)
  OR
  -- Check specific module permission
  EXISTS (
    SELECT 1 FROM public.module_permissions mp
    WHERE mp.project_id = _project_id 
    AND mp.user_id = _user_id 
    AND mp.module = _module
    AND (mp.access_level = 'write' OR (_required_access = 'read' AND mp.access_level = 'read'))
  );
$$;


ALTER FUNCTION public.has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) OWNER TO postgres;

--
-- Name: has_module_permission_with_admin(uuid, uuid, public.module_name, public.access_level); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  -- Project owner has full access
  SELECT EXISTS (
    SELECT 1 FROM public.projects p
    WHERE p.id = _project_id AND p.created_by = _user_id
  )
  OR
  -- Admin has full access  
  EXISTS (
    SELECT 1 FROM public.user_roles ur
    WHERE ur.user_id = _user_id AND ur.role = 'admin'
  )
  OR
  -- Check specific module permission
  EXISTS (
    SELECT 1 FROM public.module_permissions mp
    WHERE mp.project_id = _project_id 
    AND mp.user_id = _user_id 
    AND mp.module = _module
    AND (mp.access_level = 'write' OR (_required_access = 'read' AND mp.access_level = 'read'))
  );
$$;


ALTER FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) OWNER TO postgres;

--
-- Name: has_project_module_permission(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1 FROM public.module_permissions mp
    WHERE mp.project_id = _project_id AND mp.user_id = _user_id
  );
$$;


ALTER FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid) OWNER TO postgres;

--
-- Name: has_role(uuid, public.app_role); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_role(_user_id uuid, _role public.app_role) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
    SELECT EXISTS (
        SELECT 1
        FROM public.user_roles
        WHERE user_id = _user_id
        AND role = _role
    )
$$;


ALTER FUNCTION public.has_role(_user_id uuid, _role public.app_role) OWNER TO postgres;

--
-- Name: is_project_member(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_project_member(_user_id uuid, _project_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1 FROM public.project_members pm
    WHERE pm.project_id = _project_id AND pm.user_id = _user_id
  );
$$;


ALTER FUNCTION public.is_project_member(_user_id uuid, _project_id uuid) OWNER TO postgres;

--
-- Name: log_audit_changes(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_audit_changes() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  _project_id UUID;
  _module module_name;
  _entity_type TEXT;
  _action TEXT;
  _description TEXT;
BEGIN
  -- Determine project_id and module based on table
  CASE TG_TABLE_NAME
    WHEN 'tasks' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'tasks_milestones';
      _entity_type := 'task';
    WHEN 'milestones' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'tasks_milestones';
      _entity_type := 'milestone';
    WHEN 'stakeholders' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'stakeholders';
      _entity_type := 'stakeholder';
    WHEN 'risk_register' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'risk_register';
      _entity_type := 'risk';
    WHEN 'project_discussions' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'discussions';
      _entity_type := 'discussion';
    WHEN 'task_backlog' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'task_backlog';
      _entity_type := 'backlog_item';
    WHEN 'retrospectives' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'retrospectives';
      _entity_type := 'retrospective';
    WHEN 'team_capacity_iterations' THEN
      _project_id := COALESCE(NEW.project_id, OLD.project_id);
      _module := 'team_capacity';
      _entity_type := 'capacity_iteration';
    ELSE
      RETURN COALESCE(NEW, OLD);
  END CASE;

  -- Determine action
  IF TG_OP = 'INSERT' THEN
    _action := 'created';
    _description := _entity_type || ' created';
  ELSIF TG_OP = 'UPDATE' THEN
    _action := 'updated';
    _description := _entity_type || ' updated';
  ELSIF TG_OP = 'DELETE' THEN
    _action := 'deleted';
    _description := _entity_type || ' deleted';
  END IF;

  -- Insert audit log entry
  INSERT INTO public.audit_log (
    project_id,
    user_id,
    module,
    action,
    entity_type,
    entity_id,
    old_values,
    new_values,
    description
  ) VALUES (
    _project_id,
    auth.uid(),
    _module,
    _action,
    _entity_type,
    COALESCE(NEW.id, OLD.id),
    CASE WHEN TG_OP != 'INSERT' THEN row_to_json(OLD) ELSE NULL END,
    CASE WHEN TG_OP != 'DELETE' THEN row_to_json(NEW) ELSE NULL END,
    _description
  );

  RETURN COALESCE(NEW, OLD);
END;
$$;


ALTER FUNCTION public.log_audit_changes() OWNER TO postgres;

--
-- Name: log_discussion_changes(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_discussion_changes() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Skip logging if we don't have auth context (e.g., from edge functions)
  IF auth.uid() IS NULL THEN
    RETURN COALESCE(NEW, OLD);
  END IF;

  -- Log discussion changes
  IF TG_TABLE_NAME = 'project_discussions' THEN
    IF TG_OP = 'INSERT' THEN
      INSERT INTO public.discussion_change_log (
        discussion_id, change_type, field_name, new_value, changed_by
      ) VALUES (
        NEW.id, 'created', 'discussion', 'Discussion created', auth.uid()
      );
    ELSIF TG_OP = 'UPDATE' THEN
      IF OLD.meeting_title IS DISTINCT FROM NEW.meeting_title THEN
        INSERT INTO public.discussion_change_log (
          discussion_id, change_type, field_name, old_value, new_value, changed_by
        ) VALUES (
          NEW.id, 'updated', 'meeting_title', OLD.meeting_title, NEW.meeting_title, auth.uid()
        );
      END IF;
      IF OLD.summary_notes IS DISTINCT FROM NEW.summary_notes THEN
        INSERT INTO public.discussion_change_log (
          discussion_id, change_type, field_name, old_value, new_value, changed_by
        ) VALUES (
          NEW.id, 'updated', 'summary_notes', OLD.summary_notes, NEW.summary_notes, auth.uid()
        );
      END IF;
    END IF;
  -- Log action item changes
  ELSIF TG_TABLE_NAME = 'discussion_action_items' THEN
    IF TG_OP = 'INSERT' THEN
      INSERT INTO public.discussion_change_log (
        discussion_id, action_item_id, change_type, field_name, new_value, changed_by
      ) VALUES (
        NEW.discussion_id, NEW.id, 'created', 'action_item', 'Action item created', auth.uid()
      );
    ELSIF TG_OP = 'UPDATE' THEN
      IF OLD.status IS DISTINCT FROM NEW.status THEN
        INSERT INTO public.discussion_change_log (
          discussion_id, action_item_id, change_type, field_name, old_value, new_value, changed_by
        ) VALUES (
          NEW.discussion_id, NEW.id, 'updated', 'status', OLD.status, NEW.status, auth.uid()
        );
      END IF;
    ELSIF TG_OP = 'DELETE' THEN
      INSERT INTO public.discussion_change_log (
        discussion_id, action_item_id, change_type, field_name, old_value, changed_by
      ) VALUES (
        OLD.discussion_id, OLD.id, 'deleted', 'action_item', 'Action item deleted', auth.uid()
      );
    END IF;
  END IF;
  
  RETURN COALESCE(NEW, OLD);
END;
$$;


ALTER FUNCTION public.log_discussion_changes() OWNER TO postgres;

--
-- Name: log_module_access(uuid, uuid, public.module_name, text, public.access_level, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level DEFAULT NULL::public.access_level, _granted_by uuid DEFAULT NULL::uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  INSERT INTO public.module_access_audit (user_id, project_id, module, access_type, access_level, granted_by)
  VALUES (_user_id, _project_id, _module, _access_type, _access_level, _granted_by);
END;
$$;


ALTER FUNCTION public.log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level, _granted_by uuid) OWNER TO postgres;

--
-- Name: log_task_status_change(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_task_status_change() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF OLD.status IS DISTINCT FROM NEW.status THEN
    INSERT INTO public.task_status_history (
      task_id,
      old_status,
      new_status,
      changed_by
    ) VALUES (
      NEW.id,
      OLD.status,
      NEW.status,
      COALESCE(auth.uid(), NEW.created_by)
    );
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.log_task_status_change() OWNER TO postgres;

--
-- Name: set_current_user_id(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_current_user_id(_user_id uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
begin
  perform set_config('request.jwt.claim.sub', _user_id::text, true);
  perform set_config('request.jwt.claim.role', 'authenticated', true);
end;
$$;


ALTER FUNCTION public.set_current_user_id(_user_id uuid) OWNER TO postgres;

--
-- Name: trg_milestones_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_milestones_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_milestones_set_department() OWNER TO postgres;

--
-- Name: trg_project_members_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_project_members_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.user_id);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_project_members_set_department() OWNER TO postgres;

--
-- Name: trg_projects_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_projects_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_projects_set_department() OWNER TO postgres;

--
-- Name: trg_retrospectives_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_retrospectives_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_retrospectives_set_department() OWNER TO postgres;

--
-- Name: trg_risk_register_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_risk_register_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_risk_register_set_department() OWNER TO postgres;

--
-- Name: trg_task_backlog_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_task_backlog_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_task_backlog_set_department() OWNER TO postgres;

--
-- Name: trg_tasks_set_department(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trg_tasks_set_department() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF NEW.department_id IS NULL THEN
    NEW.department_id := public.get_user_department(NEW.created_by);
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.trg_tasks_set_department() OWNER TO postgres;

--
-- Name: trigger_log_module_permission_changes(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.trigger_log_module_permission_changes() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF TG_OP = 'INSERT' THEN
    PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'granted', NEW.access_level, NEW.granted_by);
    RETURN NEW;
  ELSIF TG_OP = 'UPDATE' THEN
    IF OLD.access_level IS DISTINCT FROM NEW.access_level THEN
      PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'updated', NEW.access_level, NEW.granted_by);
    END IF;
    RETURN NEW;
  ELSIF TG_OP = 'DELETE' THEN
    PERFORM public.log_module_access(OLD.user_id, OLD.project_id, OLD.module, 'revoked', OLD.access_level, OLD.granted_by);
    RETURN OLD;
  END IF;
  RETURN NULL;
END;
$$;


ALTER FUNCTION public.trigger_log_module_permission_changes() OWNER TO postgres;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_updated_at_column() OWNER TO postgres;

--
-- Name: apply_rls(jsonb, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer DEFAULT (1024 * 1024)) RETURNS SETOF realtime.wal_rls
    LANGUAGE plpgsql
    AS $$
declare
-- Regclass of the table e.g. public.notes
entity_ regclass = (quote_ident(wal ->> 'schema') || '.' || quote_ident(wal ->> 'table'))::regclass;

-- I, U, D, T: insert, update ...
action realtime.action = (
    case wal ->> 'action'
        when 'I' then 'INSERT'
        when 'U' then 'UPDATE'
        when 'D' then 'DELETE'
        else 'ERROR'
    end
);

-- Is row level security enabled for the table
is_rls_enabled bool = relrowsecurity from pg_class where oid = entity_;

subscriptions realtime.subscription[] = array_agg(subs)
    from
        realtime.subscription subs
    where
        subs.entity = entity_;

-- Subscription vars
roles regrole[] = array_agg(distinct us.claims_role::text)
    from
        unnest(subscriptions) us;

working_role regrole;
claimed_role regrole;
claims jsonb;

subscription_id uuid;
subscription_has_access bool;
visible_to_subscription_ids uuid[] = '{}';

-- structured info for wal's columns
columns realtime.wal_column[];
-- previous identity values for update/delete
old_columns realtime.wal_column[];

error_record_exceeds_max_size boolean = octet_length(wal::text) > max_record_bytes;

-- Primary jsonb output for record
output jsonb;

begin
perform set_config('role', null, true);

columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'columns') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

old_columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'identity') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

for working_role in select * from unnest(roles) loop

    -- Update `is_selectable` for columns and old_columns
    columns =
        array_agg(
            (
                c.name,
                c.type_name,
                c.type_oid,
                c.value,
                c.is_pkey,
                pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
            )::realtime.wal_column
        )
        from
            unnest(columns) c;

    old_columns =
            array_agg(
                (
                    c.name,
                    c.type_name,
                    c.type_oid,
                    c.value,
                    c.is_pkey,
                    pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
                )::realtime.wal_column
            )
            from
                unnest(old_columns) c;

    if action <> 'DELETE' and count(1) = 0 from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            -- subscriptions is already filtered by entity
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 400: Bad Request, no primary key']
        )::realtime.wal_rls;

    -- The claims role does not have SELECT permission to the primary key of entity
    elsif action <> 'DELETE' and sum(c.is_selectable::int) <> count(1) from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 401: Unauthorized']
        )::realtime.wal_rls;

    else
        output = jsonb_build_object(
            'schema', wal ->> 'schema',
            'table', wal ->> 'table',
            'type', action,
            'commit_timestamp', to_char(
                ((wal ->> 'timestamp')::timestamptz at time zone 'utc'),
                'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"'
            ),
            'columns', (
                select
                    jsonb_agg(
                        jsonb_build_object(
                            'name', pa.attname,
                            'type', pt.typname
                        )
                        order by pa.attnum asc
                    )
                from
                    pg_attribute pa
                    join pg_type pt
                        on pa.atttypid = pt.oid
                where
                    attrelid = entity_
                    and attnum > 0
                    and pg_catalog.has_column_privilege(working_role, entity_, pa.attname, 'SELECT')
            )
        )
        -- Add "record" key for insert and update
        || case
            when action in ('INSERT', 'UPDATE') then
                jsonb_build_object(
                    'record',
                    (
                        select
                            jsonb_object_agg(
                                -- if unchanged toast, get column name and value from old record
                                coalesce((c).name, (oc).name),
                                case
                                    when (c).name is null then (oc).value
                                    else (c).value
                                end
                            )
                        from
                            unnest(columns) c
                            full outer join unnest(old_columns) oc
                                on (c).name = (oc).name
                        where
                            coalesce((c).is_selectable, (oc).is_selectable)
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                    )
                )
            else '{}'::jsonb
        end
        -- Add "old_record" key for update and delete
        || case
            when action = 'UPDATE' then
                jsonb_build_object(
                        'old_record',
                        (
                            select jsonb_object_agg((c).name, (c).value)
                            from unnest(old_columns) c
                            where
                                (c).is_selectable
                                and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                        )
                    )
            when action = 'DELETE' then
                jsonb_build_object(
                    'old_record',
                    (
                        select jsonb_object_agg((c).name, (c).value)
                        from unnest(old_columns) c
                        where
                            (c).is_selectable
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                            and ( not is_rls_enabled or (c).is_pkey ) -- if RLS enabled, we can't secure deletes so filter to pkey
                    )
                )
            else '{}'::jsonb
        end;

        -- Create the prepared statement
        if is_rls_enabled and action <> 'DELETE' then
            if (select 1 from pg_prepared_statements where name = 'walrus_rls_stmt' limit 1) > 0 then
                deallocate walrus_rls_stmt;
            end if;
            execute realtime.build_prepared_statement_sql('walrus_rls_stmt', entity_, columns);
        end if;

        visible_to_subscription_ids = '{}';

        for subscription_id, claims in (
                select
                    subs.subscription_id,
                    subs.claims
                from
                    unnest(subscriptions) subs
                where
                    subs.entity = entity_
                    and subs.claims_role = working_role
                    and (
                        realtime.is_visible_through_filters(columns, subs.filters)
                        or (
                          action = 'DELETE'
                          and realtime.is_visible_through_filters(old_columns, subs.filters)
                        )
                    )
        ) loop

            if not is_rls_enabled or action = 'DELETE' then
                visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
            else
                -- Check if RLS allows the role to see the record
                perform
                    -- Trim leading and trailing quotes from working_role because set_config
                    -- doesn't recognize the role as valid if they are included
                    set_config('role', trim(both '"' from working_role::text), true),
                    set_config('request.jwt.claims', claims::text, true);

                execute 'execute walrus_rls_stmt' into subscription_has_access;

                if subscription_has_access then
                    visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
                end if;
            end if;
        end loop;

        perform set_config('role', null, true);

        return next (
            output,
            is_rls_enabled,
            visible_to_subscription_ids,
            case
                when error_record_exceeds_max_size then array['Error 413: Payload Too Large']
                else '{}'
            end
        )::realtime.wal_rls;

    end if;
end loop;

perform set_config('role', null, true);
end;
$$;


ALTER FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: broadcast_changes(text, text, text, text, text, record, record, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text DEFAULT 'ROW'::text) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    -- Declare a variable to hold the JSONB representation of the row
    row_data jsonb := '{}'::jsonb;
BEGIN
    IF level = 'STATEMENT' THEN
        RAISE EXCEPTION 'function can only be triggered for each row, not for each statement';
    END IF;
    -- Check the operation type and handle accordingly
    IF operation = 'INSERT' OR operation = 'UPDATE' OR operation = 'DELETE' THEN
        row_data := jsonb_build_object('old_record', OLD, 'record', NEW, 'operation', operation, 'table', table_name, 'schema', table_schema);
        PERFORM realtime.send (row_data, event_name, topic_name);
    ELSE
        RAISE EXCEPTION 'Unexpected operation type: %', operation;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Failed to process the row: %', SQLERRM;
END;

$$;


ALTER FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) OWNER TO supabase_admin;

--
-- Name: build_prepared_statement_sql(text, regclass, realtime.wal_column[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) RETURNS text
    LANGUAGE sql
    AS $$
      /*
      Builds a sql string that, if executed, creates a prepared statement to
      tests retrive a row from *entity* by its primary key columns.
      Example
          select realtime.build_prepared_statement_sql('public.notes', '{"id"}'::text[], '{"bigint"}'::text[])
      */
          select
      'prepare ' || prepared_statement_name || ' as
          select
              exists(
                  select
                      1
                  from
                      ' || entity || '
                  where
                      ' || string_agg(quote_ident(pkc.name) || '=' || quote_nullable(pkc.value #>> '{}') , ' and ') || '
              )'
          from
              unnest(columns) pkc
          where
              pkc.is_pkey
          group by
              entity
      $$;


ALTER FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) OWNER TO supabase_admin;

--
-- Name: cast(text, regtype); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime."cast"(val text, type_ regtype) RETURNS jsonb
    LANGUAGE plpgsql IMMUTABLE
    AS $$
    declare
      res jsonb;
    begin
      execute format('select to_jsonb(%L::'|| type_::text || ')', val)  into res;
      return res;
    end
    $$;


ALTER FUNCTION realtime."cast"(val text, type_ regtype) OWNER TO supabase_admin;

--
-- Name: check_equality_op(realtime.equality_op, regtype, text, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
      /*
      Casts *val_1* and *val_2* as type *type_* and check the *op* condition for truthiness
      */
      declare
          op_symbol text = (
              case
                  when op = 'eq' then '='
                  when op = 'neq' then '!='
                  when op = 'lt' then '<'
                  when op = 'lte' then '<='
                  when op = 'gt' then '>'
                  when op = 'gte' then '>='
                  when op = 'in' then '= any'
                  else 'UNKNOWN OP'
              end
          );
          res boolean;
      begin
          execute format(
              'select %L::'|| type_::text || ' ' || op_symbol
              || ' ( %L::'
              || (
                  case
                      when op = 'in' then type_::text || '[]'
                      else type_::text end
              )
              || ')', val_1, val_2) into res;
          return res;
      end;
      $$;


ALTER FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) OWNER TO supabase_admin;

--
-- Name: is_visible_through_filters(realtime.wal_column[], realtime.user_defined_filter[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$
    /*
    Should the record be visible (true) or filtered out (false) after *filters* are applied
    */
        select
            -- Default to allowed when no filters present
            $2 is null -- no filters. this should not happen because subscriptions has a default
            or array_length($2, 1) is null -- array length of an empty array is null
            or bool_and(
                coalesce(
                    realtime.check_equality_op(
                        op:=f.op,
                        type_:=coalesce(
                            col.type_oid::regtype, -- null when wal2json version <= 2.4
                            col.type_name::regtype
                        ),
                        -- cast jsonb to text
                        val_1:=col.value #>> '{}',
                        val_2:=f.value
                    ),
                    false -- if null, filter does not match
                )
            )
        from
            unnest(filters) f
            join unnest(columns) col
                on f.column_name = col.name;
    $_$;


ALTER FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) OWNER TO supabase_admin;

--
-- Name: list_changes(name, name, integer, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) RETURNS SETOF realtime.wal_rls
    LANGUAGE sql
    SET log_min_messages TO 'fatal'
    AS $$
      with pub as (
        select
          concat_ws(
            ',',
            case when bool_or(pubinsert) then 'insert' else null end,
            case when bool_or(pubupdate) then 'update' else null end,
            case when bool_or(pubdelete) then 'delete' else null end
          ) as w2j_actions,
          coalesce(
            string_agg(
              realtime.quote_wal2json(format('%I.%I', schemaname, tablename)::regclass),
              ','
            ) filter (where ppt.tablename is not null and ppt.tablename not like '% %'),
            ''
          ) w2j_add_tables
        from
          pg_publication pp
          left join pg_publication_tables ppt
            on pp.pubname = ppt.pubname
        where
          pp.pubname = publication
        group by
          pp.pubname
        limit 1
      ),
      w2j as (
        select
          x.*, pub.w2j_add_tables
        from
          pub,
          pg_logical_slot_get_changes(
            slot_name, null, max_changes,
            'include-pk', 'true',
            'include-transaction', 'false',
            'include-timestamp', 'true',
            'include-type-oids', 'true',
            'format-version', '2',
            'actions', pub.w2j_actions,
            'add-tables', pub.w2j_add_tables
          ) x
      )
      select
        xyz.wal,
        xyz.is_rls_enabled,
        xyz.subscription_ids,
        xyz.errors
      from
        w2j,
        realtime.apply_rls(
          wal := w2j.data::jsonb,
          max_record_bytes := max_record_bytes
        ) xyz(wal, is_rls_enabled, subscription_ids, errors)
      where
        w2j.w2j_add_tables <> ''
        and xyz.subscription_ids[1] is not null
    $$;


ALTER FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: quote_wal2json(regclass); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.quote_wal2json(entity regclass) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
      select
        (
          select string_agg('' || ch,'')
          from unnest(string_to_array(nsp.nspname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
        )
        || '.'
        || (
          select string_agg('' || ch,'')
          from unnest(string_to_array(pc.relname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
          )
      from
        pg_class pc
        join pg_namespace nsp
          on pc.relnamespace = nsp.oid
      where
        pc.oid = entity
    $$;


ALTER FUNCTION realtime.quote_wal2json(entity regclass) OWNER TO supabase_admin;

--
-- Name: send(jsonb, text, text, boolean); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean DEFAULT true) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  BEGIN
    -- Set the topic configuration
    EXECUTE format('SET LOCAL realtime.topic TO %L', topic);

    -- Attempt to insert the message
    INSERT INTO realtime.messages (payload, event, topic, private, extension)
    VALUES (payload, event, topic, private, 'broadcast');
  EXCEPTION
    WHEN OTHERS THEN
      -- Capture and notify the error
      RAISE WARNING 'ErrorSendingBroadcastMessage: %', SQLERRM;
  END;
END;
$$;


ALTER FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) OWNER TO supabase_admin;

--
-- Name: subscription_check_filters(); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.subscription_check_filters() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    /*
    Validates that the user defined filters for a subscription:
    - refer to valid columns that the claimed role may access
    - values are coercable to the correct column type
    */
    declare
        col_names text[] = coalesce(
                array_agg(c.column_name order by c.ordinal_position),
                '{}'::text[]
            )
            from
                information_schema.columns c
            where
                format('%I.%I', c.table_schema, c.table_name)::regclass = new.entity
                and pg_catalog.has_column_privilege(
                    (new.claims ->> 'role'),
                    format('%I.%I', c.table_schema, c.table_name)::regclass,
                    c.column_name,
                    'SELECT'
                );
        filter realtime.user_defined_filter;
        col_type regtype;

        in_val jsonb;
    begin
        for filter in select * from unnest(new.filters) loop
            -- Filtered column is valid
            if not filter.column_name = any(col_names) then
                raise exception 'invalid column for filter %', filter.column_name;
            end if;

            -- Type is sanitized and safe for string interpolation
            col_type = (
                select atttypid::regtype
                from pg_catalog.pg_attribute
                where attrelid = new.entity
                      and attname = filter.column_name
            );
            if col_type is null then
                raise exception 'failed to lookup type for column %', filter.column_name;
            end if;

            -- Set maximum number of entries for in filter
            if filter.op = 'in'::realtime.equality_op then
                in_val = realtime.cast(filter.value, (col_type::text || '[]')::regtype);
                if coalesce(jsonb_array_length(in_val), 0) > 100 then
                    raise exception 'too many values for `in` filter. Maximum 100';
                end if;
            else
                -- raises an exception if value is not coercable to type
                perform realtime.cast(filter.value, col_type);
            end if;

        end loop;

        -- Apply consistent order to filters so the unique constraint on
        -- (subscription_id, entity, filters) can't be tricked by a different filter order
        new.filters = coalesce(
            array_agg(f order by f.column_name, f.op, f.value),
            '{}'
        ) from unnest(new.filters) f;

        return new;
    end;
    $$;


ALTER FUNCTION realtime.subscription_check_filters() OWNER TO supabase_admin;

--
-- Name: to_regrole(text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.to_regrole(role_name text) RETURNS regrole
    LANGUAGE sql IMMUTABLE
    AS $$ select role_name::regrole $$;


ALTER FUNCTION realtime.to_regrole(role_name text) OWNER TO supabase_admin;

--
-- Name: topic(); Type: FUNCTION; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE FUNCTION realtime.topic() RETURNS text
    LANGUAGE sql STABLE
    AS $$
select nullif(current_setting('realtime.topic', true), '')::text;
$$;


ALTER FUNCTION realtime.topic() OWNER TO supabase_realtime_admin;

--
-- Name: add_prefixes(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.add_prefixes(_bucket_id text, _name text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    prefixes text[];
BEGIN
    prefixes := "storage"."get_prefixes"("_name");

    IF array_length(prefixes, 1) > 0 THEN
        INSERT INTO storage.prefixes (name, bucket_id)
        SELECT UNNEST(prefixes) as name, "_bucket_id" ON CONFLICT DO NOTHING;
    END IF;
END;
$$;


ALTER FUNCTION storage.add_prefixes(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: can_insert_object(text, text, uuid, jsonb); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  INSERT INTO "storage"."objects" ("bucket_id", "name", "owner", "metadata") VALUES (bucketid, name, owner, metadata);
  -- hack to rollback the successful insert
  RAISE sqlstate 'PT200' using
  message = 'ROLLBACK',
  detail = 'rollback successful insert';
END
$$;


ALTER FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix(_bucket_id text, _name text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
    -- Check if we can delete the prefix
    IF EXISTS(
        SELECT FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name") + 1
          AND "prefixes"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    )
    OR EXISTS(
        SELECT FROM "storage"."objects"
        WHERE "objects"."bucket_id" = "_bucket_id"
          AND "storage"."get_level"("objects"."name") = "storage"."get_level"("_name") + 1
          AND "objects"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    ) THEN
    -- There are sub-objects, skip deletion
    RETURN false;
    ELSE
        DELETE FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name")
          AND "prefixes"."name" = "_name";
        RETURN true;
    END IF;
END;
$$;


ALTER FUNCTION storage.delete_prefix(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix_hierarchy_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix_hierarchy_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    prefix text;
BEGIN
    prefix := "storage"."get_prefix"(OLD."name");

    IF coalesce(prefix, '') != '' THEN
        PERFORM "storage"."delete_prefix"(OLD."bucket_id", prefix);
    END IF;

    RETURN OLD;
END;
$$;


ALTER FUNCTION storage.delete_prefix_hierarchy_trigger() OWNER TO supabase_storage_admin;

--
-- Name: enforce_bucket_name_length(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.enforce_bucket_name_length() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if length(new.name) > 100 then
        raise exception 'bucket name "%" is too long (% characters). Max is 100.', new.name, length(new.name);
    end if;
    return new;
end;
$$;


ALTER FUNCTION storage.enforce_bucket_name_length() OWNER TO supabase_storage_admin;

--
-- Name: extension(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.extension(name text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
    _filename text;
BEGIN
    SELECT string_to_array(name, '/') INTO _parts;
    SELECT _parts[array_length(_parts,1)] INTO _filename;
    RETURN reverse(split_part(reverse(_filename), '.', 1));
END
$$;


ALTER FUNCTION storage.extension(name text) OWNER TO supabase_storage_admin;

--
-- Name: filename(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.filename(name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
_parts text[];
BEGIN
	select string_to_array(name, '/') into _parts;
	return _parts[array_length(_parts,1)];
END
$$;


ALTER FUNCTION storage.filename(name text) OWNER TO supabase_storage_admin;

--
-- Name: foldername(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.foldername(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
BEGIN
    -- Split on "/" to get path segments
    SELECT string_to_array(name, '/') INTO _parts;
    -- Return everything except the last segment
    RETURN _parts[1 : array_length(_parts,1) - 1];
END
$$;


ALTER FUNCTION storage.foldername(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_level(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_level(name text) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
SELECT array_length(string_to_array("name", '/'), 1);
$$;


ALTER FUNCTION storage.get_level(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefix(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefix(name text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT
    CASE WHEN strpos("name", '/') > 0 THEN
             regexp_replace("name", '[\/]{1}[^\/]+\/?$', '')
         ELSE
             ''
        END;
$_$;


ALTER FUNCTION storage.get_prefix(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefixes(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefixes(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    parts text[];
    prefixes text[];
    prefix text;
BEGIN
    -- Split the name into parts by '/'
    parts := string_to_array("name", '/');
    prefixes := '{}';

    -- Construct the prefixes, stopping one level below the last part
    FOR i IN 1..array_length(parts, 1) - 1 LOOP
            prefix := array_to_string(parts[1:i], '/');
            prefixes := array_append(prefixes, prefix);
    END LOOP;

    RETURN prefixes;
END;
$$;


ALTER FUNCTION storage.get_prefixes(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_size_by_bucket(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_size_by_bucket() RETURNS TABLE(size bigint, bucket_id text)
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    return query
        select sum((metadata->>'size')::bigint) as size, obj.bucket_id
        from "storage".objects as obj
        group by obj.bucket_id;
END
$$;


ALTER FUNCTION storage.get_size_by_bucket() OWNER TO supabase_storage_admin;

--
-- Name: list_multipart_uploads_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text) RETURNS TABLE(key text, id text, created_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(key COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))
                    ELSE
                        key
                END AS key, id, created_at
            FROM
                storage.s3_multipart_uploads
            WHERE
                bucket_id = $5 AND
                key ILIKE $1 || ''%'' AND
                CASE
                    WHEN $4 != '''' AND $6 = '''' THEN
                        CASE
                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                key COLLATE "C" > $4
                            END
                    ELSE
                        true
                END AND
                CASE
                    WHEN $6 != '''' THEN
                        id COLLATE "C" > $6
                    ELSE
                        true
                    END
            ORDER BY
                key COLLATE "C" ASC, created_at ASC) as e order by key COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;
END;
$_$;


ALTER FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, next_key_token text, next_upload_token text) OWNER TO supabase_storage_admin;

--
-- Name: list_objects_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text) RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(name COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))
                    ELSE
                        name
                END AS name, id, metadata, updated_at
            FROM
                storage.objects
            WHERE
                bucket_id = $5 AND
                name ILIKE $1 || ''%'' AND
                CASE
                    WHEN $6 != '''' THEN
                    name COLLATE "C" > $6
                ELSE true END
                AND CASE
                    WHEN $4 != '''' THEN
                        CASE
                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                name COLLATE "C" > $4
                            END
                    ELSE
                        true
                END
            ORDER BY
                name COLLATE "C" ASC) as e order by name COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;
END;
$_$;


ALTER FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, start_after text, next_token text) OWNER TO supabase_storage_admin;

--
-- Name: objects_insert_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_insert_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    NEW.level := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_insert_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    old_prefixes TEXT[];
BEGIN
    -- Ensure this is an update operation and the name has changed
    IF TG_OP = 'UPDATE' AND (NEW."name" <> OLD."name" OR NEW."bucket_id" <> OLD."bucket_id") THEN
        -- Retrieve old prefixes
        old_prefixes := "storage"."get_prefixes"(OLD."name");

        -- Remove old prefixes that are only used by this object
        WITH all_prefixes as (
            SELECT unnest(old_prefixes) as prefix
        ),
        can_delete_prefixes as (
             SELECT prefix
             FROM all_prefixes
             WHERE NOT EXISTS (
                 SELECT 1 FROM "storage"."objects"
                 WHERE "bucket_id" = OLD."bucket_id"
                   AND "name" <> OLD."name"
                   AND "name" LIKE (prefix || '%')
             )
         )
        DELETE FROM "storage"."prefixes" WHERE name IN (SELECT prefix FROM can_delete_prefixes);

        -- Add new prefixes
        PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    END IF;
    -- Set the new level
    NEW."level" := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_update_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: operation(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.operation() RETURNS text
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    RETURN current_setting('storage.operation', true);
END;
$$;


ALTER FUNCTION storage.operation() OWNER TO supabase_storage_admin;

--
-- Name: prefixes_insert_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.prefixes_insert_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.prefixes_insert_trigger() OWNER TO supabase_storage_admin;

--
-- Name: search(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql
    AS $$
declare
    can_bypass_rls BOOLEAN;
begin
    SELECT rolbypassrls
    INTO can_bypass_rls
    FROM pg_roles
    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);

    IF can_bypass_rls THEN
        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    ELSE
        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    END IF;
end;
$$;


ALTER FUNCTION storage.search(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_legacy_v1(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select path_tokens[$1] as folder
           from storage.objects
             where objects.name ilike $2 || $3 || ''%''
               and bucket_id = $4
               and array_length(objects.path_tokens, 1) <> $1
           group by folder
           order by folder ' || v_sort_order || '
     )
     (select folder as "name",
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[$1] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where objects.name ilike $2 || $3 || ''%''
       and bucket_id = $4
       and array_length(objects.path_tokens, 1) = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v1_optimised(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select (string_to_array(name, ''/''))[level] as name
           from storage.prefixes
             where lower(prefixes.name) like lower($2 || $3) || ''%''
               and bucket_id = $4
               and level = $1
           order by name ' || v_sort_order || '
     )
     (select name,
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[level] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where lower(objects.name) like lower($2 || $3) || ''%''
       and bucket_id = $4
       and level = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v2(text, text, integer, integer, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text) RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
BEGIN
    RETURN query EXECUTE
        $sql$
        SELECT * FROM (
            (
                SELECT
                    split_part(name, '/', $4) AS key,
                    name || '/' AS name,
                    NULL::uuid AS id,
                    NULL::timestamptz AS updated_at,
                    NULL::timestamptz AS created_at,
                    NULL::jsonb AS metadata
                FROM storage.prefixes
                WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
                ORDER BY prefixes.name COLLATE "C" LIMIT $3
            )
            UNION ALL
            (SELECT split_part(name, '/', $4) AS key,
                name,
                id,
                updated_at,
                created_at,
                metadata
            FROM storage.objects
            WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
            ORDER BY name COLLATE "C" LIMIT $3)
        ) obj
        ORDER BY name COLLATE "C" LIMIT $3;
        $sql$
        USING prefix, bucket_name, limits, levels, start_after;
END;
$_$;


ALTER FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer, levels integer, start_after text) OWNER TO supabase_storage_admin;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW; 
END;
$$;


ALTER FUNCTION storage.update_updated_at_column() OWNER TO supabase_storage_admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: audit_log_entries; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.audit_log_entries (
    instance_id uuid,
    id uuid NOT NULL,
    payload json,
    created_at timestamp with time zone,
    ip_address character varying(64) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE auth.audit_log_entries OWNER TO supabase_auth_admin;

--
-- Name: TABLE audit_log_entries; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.audit_log_entries IS 'Auth: Audit trail for user actions.';


--
-- Name: flow_state; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.flow_state (
    id uuid NOT NULL,
    user_id uuid,
    auth_code text NOT NULL,
    code_challenge_method auth.code_challenge_method NOT NULL,
    code_challenge text NOT NULL,
    provider_type text NOT NULL,
    provider_access_token text,
    provider_refresh_token text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    authentication_method text NOT NULL,
    auth_code_issued_at timestamp with time zone
);


ALTER TABLE auth.flow_state OWNER TO supabase_auth_admin;

--
-- Name: TABLE flow_state; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.flow_state IS 'stores metadata for pkce logins';


--
-- Name: identities; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.identities (
    provider_id text NOT NULL,
    user_id uuid NOT NULL,
    identity_data jsonb NOT NULL,
    provider text NOT NULL,
    last_sign_in_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    email text GENERATED ALWAYS AS (lower((identity_data ->> 'email'::text))) STORED,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE auth.identities OWNER TO supabase_auth_admin;

--
-- Name: TABLE identities; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.identities IS 'Auth: Stores identities associated to a user.';


--
-- Name: COLUMN identities.email; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.identities.email IS 'Auth: Email is a generated column that references the optional email property in the identity_data';


--
-- Name: instances; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.instances (
    id uuid NOT NULL,
    uuid uuid,
    raw_base_config text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE auth.instances OWNER TO supabase_auth_admin;

--
-- Name: TABLE instances; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.instances IS 'Auth: Manages users across multiple sites.';


--
-- Name: mfa_amr_claims; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_amr_claims (
    session_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    authentication_method text NOT NULL,
    id uuid NOT NULL
);


ALTER TABLE auth.mfa_amr_claims OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_amr_claims; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_amr_claims IS 'auth: stores authenticator method reference claims for multi factor authentication';


--
-- Name: mfa_challenges; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_challenges (
    id uuid NOT NULL,
    factor_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    verified_at timestamp with time zone,
    ip_address inet NOT NULL,
    otp_code text,
    web_authn_session_data jsonb
);


ALTER TABLE auth.mfa_challenges OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_challenges; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_challenges IS 'auth: stores metadata about challenge requests made';


--
-- Name: mfa_factors; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_factors (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    friendly_name text,
    factor_type auth.factor_type NOT NULL,
    status auth.factor_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    secret text,
    phone text,
    last_challenged_at timestamp with time zone,
    web_authn_credential jsonb,
    web_authn_aaguid uuid
);


ALTER TABLE auth.mfa_factors OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_factors; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_factors IS 'auth: stores metadata about factors';


--
-- Name: oauth_clients; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.oauth_clients (
    id uuid NOT NULL,
    client_id text NOT NULL,
    client_secret_hash text NOT NULL,
    registration_type auth.oauth_registration_type NOT NULL,
    redirect_uris text NOT NULL,
    grant_types text NOT NULL,
    client_name text,
    client_uri text,
    logo_uri text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    CONSTRAINT oauth_clients_client_name_length CHECK ((char_length(client_name) <= 1024)),
    CONSTRAINT oauth_clients_client_uri_length CHECK ((char_length(client_uri) <= 2048)),
    CONSTRAINT oauth_clients_logo_uri_length CHECK ((char_length(logo_uri) <= 2048))
);


ALTER TABLE auth.oauth_clients OWNER TO supabase_auth_admin;

--
-- Name: one_time_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.one_time_tokens (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    token_type auth.one_time_token_type NOT NULL,
    token_hash text NOT NULL,
    relates_to text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT one_time_tokens_token_hash_check CHECK ((char_length(token_hash) > 0))
);


ALTER TABLE auth.one_time_tokens OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.refresh_tokens (
    instance_id uuid,
    id bigint NOT NULL,
    token character varying(255),
    user_id character varying(255),
    revoked boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    parent character varying(255),
    session_id uuid
);


ALTER TABLE auth.refresh_tokens OWNER TO supabase_auth_admin;

--
-- Name: TABLE refresh_tokens; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.refresh_tokens IS 'Auth: Store of tokens used to refresh JWT tokens once they expire.';


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE; Schema: auth; Owner: supabase_auth_admin
--

CREATE SEQUENCE auth.refresh_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE auth.refresh_tokens_id_seq OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: auth; Owner: supabase_auth_admin
--

ALTER SEQUENCE auth.refresh_tokens_id_seq OWNED BY auth.refresh_tokens.id;


--
-- Name: saml_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_providers (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    entity_id text NOT NULL,
    metadata_xml text NOT NULL,
    metadata_url text,
    attribute_mapping jsonb,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name_id_format text,
    CONSTRAINT "entity_id not empty" CHECK ((char_length(entity_id) > 0)),
    CONSTRAINT "metadata_url not empty" CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0))),
    CONSTRAINT "metadata_xml not empty" CHECK ((char_length(metadata_xml) > 0))
);


ALTER TABLE auth.saml_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_providers IS 'Auth: Manages SAML Identity Provider connections.';


--
-- Name: saml_relay_states; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_relay_states (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    request_id text NOT NULL,
    for_email text,
    redirect_to text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    flow_state_id uuid,
    CONSTRAINT "request_id not empty" CHECK ((char_length(request_id) > 0))
);


ALTER TABLE auth.saml_relay_states OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_relay_states; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_relay_states IS 'Auth: Contains SAML Relay State information for each Service Provider initiated login.';


--
-- Name: schema_migrations; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE auth.schema_migrations OWNER TO supabase_auth_admin;

--
-- Name: TABLE schema_migrations; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.schema_migrations IS 'Auth: Manages updates to the auth system.';


--
-- Name: sessions; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sessions (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    factor_id uuid,
    aal auth.aal_level,
    not_after timestamp with time zone,
    refreshed_at timestamp without time zone,
    user_agent text,
    ip inet,
    tag text
);


ALTER TABLE auth.sessions OWNER TO supabase_auth_admin;

--
-- Name: TABLE sessions; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sessions IS 'Auth: Stores session data associated to a user.';


--
-- Name: COLUMN sessions.not_after; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sessions.not_after IS 'Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.';


--
-- Name: sso_domains; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_domains (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    domain text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT "domain not empty" CHECK ((char_length(domain) > 0))
);


ALTER TABLE auth.sso_domains OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_domains; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_domains IS 'Auth: Manages SSO email address domain mapping to an SSO Identity Provider.';


--
-- Name: sso_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_providers (
    id uuid NOT NULL,
    resource_id text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    disabled boolean,
    CONSTRAINT "resource_id not empty" CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))
);


ALTER TABLE auth.sso_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_providers IS 'Auth: Manages SSO identity provider information; see saml_providers for SAML.';


--
-- Name: COLUMN sso_providers.resource_id; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sso_providers.resource_id IS 'Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.';


--
-- Name: users; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.users (
    instance_id uuid,
    id uuid NOT NULL,
    aud character varying(255),
    role character varying(255),
    email character varying(255),
    encrypted_password character varying(255),
    email_confirmed_at timestamp with time zone,
    invited_at timestamp with time zone,
    confirmation_token character varying(255),
    confirmation_sent_at timestamp with time zone,
    recovery_token character varying(255),
    recovery_sent_at timestamp with time zone,
    email_change_token_new character varying(255),
    email_change character varying(255),
    email_change_sent_at timestamp with time zone,
    last_sign_in_at timestamp with time zone,
    raw_app_meta_data jsonb,
    raw_user_meta_data jsonb,
    is_super_admin boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    phone text DEFAULT NULL::character varying,
    phone_confirmed_at timestamp with time zone,
    phone_change text DEFAULT ''::character varying,
    phone_change_token character varying(255) DEFAULT ''::character varying,
    phone_change_sent_at timestamp with time zone,
    confirmed_at timestamp with time zone GENERATED ALWAYS AS (LEAST(email_confirmed_at, phone_confirmed_at)) STORED,
    email_change_token_current character varying(255) DEFAULT ''::character varying,
    email_change_confirm_status smallint DEFAULT 0,
    banned_until timestamp with time zone,
    reauthentication_token character varying(255) DEFAULT ''::character varying,
    reauthentication_sent_at timestamp with time zone,
    is_sso_user boolean DEFAULT false NOT NULL,
    deleted_at timestamp with time zone,
    is_anonymous boolean DEFAULT false NOT NULL,
    CONSTRAINT users_email_change_confirm_status_check CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))
);


ALTER TABLE auth.users OWNER TO supabase_auth_admin;

--
-- Name: TABLE users; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.users IS 'Auth: Stores user login data within a secure schema.';


--
-- Name: COLUMN users.is_sso_user; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.users.is_sso_user IS 'Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.';


--
-- Name: audit_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.audit_log (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    user_id uuid NOT NULL,
    module public.module_name NOT NULL,
    action text NOT NULL,
    entity_type text NOT NULL,
    entity_id uuid,
    old_values jsonb,
    new_values jsonb,
    description text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.audit_log OWNER TO postgres;

--
-- Name: budget_alert_rules; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_alert_rules (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_budget_id uuid NOT NULL,
    condition_type text NOT NULL,
    threshold_value numeric(10,2),
    severity text DEFAULT 'medium'::text NOT NULL,
    message text NOT NULL,
    is_active boolean DEFAULT true,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_alert_rules OWNER TO postgres;

--
-- Name: budget_categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_categories (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_budget_id uuid NOT NULL,
    budget_type_code text NOT NULL,
    name text NOT NULL,
    budget_allocated numeric(15,2) DEFAULT 0 NOT NULL,
    budget_received numeric(15,2) DEFAULT 0 NOT NULL,
    amount_spent numeric(15,2) DEFAULT 0 NOT NULL,
    comments text,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_categories OWNER TO postgres;

--
-- Name: budget_comments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_comments (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_budget_id uuid NOT NULL,
    author uuid NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_comments OWNER TO postgres;

--
-- Name: budget_receipts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_receipts (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_budget_id uuid NOT NULL,
    date date NOT NULL,
    source text NOT NULL,
    amount numeric(15,2) NOT NULL,
    received_by uuid,
    notes text,
    is_restricted boolean DEFAULT false,
    restricted_to_category uuid,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_receipts OWNER TO postgres;

--
-- Name: budget_spending; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_spending (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    budget_category_id uuid NOT NULL,
    date date NOT NULL,
    vendor text,
    description text NOT NULL,
    invoice_id text,
    amount numeric(15,2) NOT NULL,
    payment_method text,
    approved_by uuid,
    status text DEFAULT 'pending'::text NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_spending OWNER TO postgres;

--
-- Name: budget_type_config; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.budget_type_config (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    code text NOT NULL,
    label text NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    default_allocation_percent numeric(5,2) DEFAULT 0 NOT NULL,
    dropdown_display_order integer DEFAULT 0 NOT NULL,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.budget_type_config OWNER TO postgres;

--
-- Name: departments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.departments (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    name text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.departments OWNER TO postgres;

--
-- Name: discussion_action_items; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.discussion_action_items (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    discussion_id uuid NOT NULL,
    task_description text NOT NULL,
    owner_id uuid,
    target_date date,
    status text DEFAULT 'open'::text NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.discussion_action_items OWNER TO postgres;

--
-- Name: discussion_change_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.discussion_change_log (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    discussion_id uuid,
    action_item_id uuid,
    change_type text NOT NULL,
    field_name text,
    old_value text,
    new_value text,
    changed_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.discussion_change_log OWNER TO postgres;

--
-- Name: iteration_weeks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.iteration_weeks (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_id uuid NOT NULL,
    week_index integer NOT NULL,
    week_start date NOT NULL,
    week_end date NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.iteration_weeks OWNER TO postgres;

--
-- Name: iterations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.iterations (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    team_id uuid NOT NULL,
    name text NOT NULL,
    type text NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    weeks_count integer NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.iterations OWNER TO postgres;

--
-- Name: member_weekly_availability; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.member_weekly_availability (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_week_id uuid NOT NULL,
    team_member_id uuid NOT NULL,
    leaves integer DEFAULT 0,
    availability_percent integer DEFAULT 100,
    effective_capacity numeric DEFAULT 0,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    calculated_days_present integer DEFAULT 5,
    calculated_days_total integer DEFAULT 5,
    notes text
);


ALTER TABLE public.member_weekly_availability OWNER TO postgres;

--
-- Name: milestones; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.milestones (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    name text NOT NULL,
    description text,
    due_date date NOT NULL,
    status text DEFAULT 'planning'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_by uuid NOT NULL,
    department_id uuid
);


ALTER TABLE public.milestones OWNER TO postgres;

--
-- Name: module_access_audit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.module_access_audit (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    user_id uuid NOT NULL,
    project_id uuid NOT NULL,
    module public.module_name NOT NULL,
    access_type text NOT NULL,
    access_level public.access_level,
    granted_by uuid,
    "timestamp" timestamp with time zone DEFAULT now(),
    metadata jsonb DEFAULT '{}'::jsonb
);


ALTER TABLE public.module_access_audit OWNER TO postgres;

--
-- Name: module_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.module_permissions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    user_id uuid NOT NULL,
    module public.module_name NOT NULL,
    access_level public.access_level DEFAULT 'read'::public.access_level NOT NULL,
    granted_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.module_permissions OWNER TO postgres;

--
-- Name: profiles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.profiles (
    id uuid NOT NULL,
    email text NOT NULL,
    full_name text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    department_id uuid
);


ALTER TABLE public.profiles OWNER TO postgres;

--
-- Name: project_budgets; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project_budgets (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    currency text DEFAULT 'INR'::text NOT NULL,
    total_budget_allocated numeric(15,2) DEFAULT 0 NOT NULL,
    total_budget_received numeric(15,2) DEFAULT 0 NOT NULL,
    start_date date,
    end_date date,
    created_by uuid NOT NULL,
    department_id uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.project_budgets OWNER TO postgres;

--
-- Name: project_discussions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project_discussions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    meeting_title text NOT NULL,
    meeting_date date NOT NULL,
    summary_notes text,
    attendees jsonb DEFAULT '[]'::jsonb,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.project_discussions OWNER TO postgres;

--
-- Name: project_members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.project_members (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role text DEFAULT 'member'::text,
    joined_at timestamp with time zone DEFAULT now(),
    department_id uuid,
    CONSTRAINT project_members_role_check CHECK ((role = ANY (ARRAY['lead'::text, 'member'::text])))
);


ALTER TABLE public.project_members OWNER TO postgres;

--
-- Name: projects; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.projects (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    name text NOT NULL,
    description text,
    status text DEFAULT 'planning'::text,
    priority text DEFAULT 'medium'::text,
    start_date date,
    end_date date,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    department_id uuid,
    CONSTRAINT projects_priority_check CHECK ((priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text]))),
    CONSTRAINT projects_status_check CHECK ((status = ANY (ARRAY['planning'::text, 'active'::text, 'on_hold'::text, 'completed'::text, 'cancelled'::text])))
);


ALTER TABLE public.projects OWNER TO postgres;

--
-- Name: retrospective_action_items; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.retrospective_action_items (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    retrospective_id uuid NOT NULL,
    from_card_id uuid,
    what_task text NOT NULL,
    when_sprint text,
    who_responsible text,
    how_approach text,
    backlog_ref_id text,
    backlog_status text DEFAULT 'Open'::text,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    converted_to_task boolean DEFAULT false,
    task_id uuid,
    backlog_task_id uuid
);


ALTER TABLE public.retrospective_action_items OWNER TO postgres;

--
-- Name: retrospective_card_votes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.retrospective_card_votes (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    card_id uuid NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    metadata jsonb DEFAULT '{}'::jsonb
);


ALTER TABLE public.retrospective_card_votes OWNER TO postgres;

--
-- Name: retrospective_cards; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.retrospective_cards (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    column_id uuid NOT NULL,
    text text NOT NULL,
    votes integer DEFAULT 0 NOT NULL,
    card_order integer DEFAULT 0 NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retrospective_cards OWNER TO postgres;

--
-- Name: retrospective_columns; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.retrospective_columns (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    retrospective_id uuid NOT NULL,
    title text NOT NULL,
    subtitle text,
    column_order integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.retrospective_columns OWNER TO postgres;

--
-- Name: retrospectives; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.retrospectives (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_id text,
    framework text DEFAULT 'Classic'::text NOT NULL,
    project_id uuid NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    department_id uuid,
    status text DEFAULT 'active'::text NOT NULL
);


ALTER TABLE public.retrospectives OWNER TO postgres;

--
-- Name: retrospective_analytics; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.retrospective_analytics AS
 SELECT r.id AS retrospective_id,
    r.project_id,
    r.framework,
    r.status,
    r.created_at,
    r.created_by,
    count(DISTINCT rc.id) AS total_cards,
    sum(rc.votes) AS total_votes,
    count(DISTINCT rai.id) AS total_action_items,
    count(DISTINCT rai.id) FILTER (WHERE (rai.backlog_task_id IS NOT NULL)) AS converted_to_tasks,
    count(DISTINCT rcv.id) AS total_card_votes,
    count(DISTINCT rcv.user_id) AS unique_voters
   FROM ((((public.retrospectives r
     LEFT JOIN public.retrospective_columns rcol ON ((r.id = rcol.retrospective_id)))
     LEFT JOIN public.retrospective_cards rc ON ((rcol.id = rc.column_id)))
     LEFT JOIN public.retrospective_action_items rai ON ((r.id = rai.retrospective_id)))
     LEFT JOIN public.retrospective_card_votes rcv ON ((rc.id = rcv.card_id)))
  GROUP BY r.id, r.project_id, r.framework, r.status, r.created_at, r.created_by;


ALTER VIEW public.retrospective_analytics OWNER TO postgres;

--
-- Name: risk_register; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.risk_register (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    created_by uuid NOT NULL,
    department_id uuid,
    risk_code text NOT NULL,
    title text NOT NULL,
    description text,
    category text,
    cause text,
    consequence text,
    likelihood integer,
    impact integer,
    risk_score integer GENERATED ALWAYS AS ((likelihood * impact)) STORED,
    owner text,
    response_strategy text,
    mitigation_plan text[],
    contingency_plan text,
    status text DEFAULT 'open'::text,
    identified_date date,
    last_updated date,
    next_review_date date,
    residual_likelihood integer,
    residual_impact integer,
    residual_risk_score integer GENERATED ALWAYS AS ((residual_likelihood * residual_impact)) STORED,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT risk_register_impact_check CHECK (((impact >= 1) AND (impact <= 5))),
    CONSTRAINT risk_register_likelihood_check CHECK (((likelihood >= 1) AND (likelihood <= 5))),
    CONSTRAINT risk_register_residual_impact_check CHECK (((residual_impact >= 1) AND (residual_impact <= 5))),
    CONSTRAINT risk_register_residual_likelihood_check CHECK (((residual_likelihood >= 1) AND (residual_likelihood <= 5)))
);


ALTER TABLE public.risk_register OWNER TO postgres;

--
-- Name: stakeholders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.stakeholders (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    name text NOT NULL,
    email text,
    department text,
    raci text,
    influence_level text,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_by uuid NOT NULL,
    CONSTRAINT stakeholders_influence_level_check CHECK ((influence_level = ANY (ARRAY['Low'::text, 'Medium'::text, 'High'::text, 'Critical'::text]))),
    CONSTRAINT stakeholders_raci_check CHECK ((raci = ANY (ARRAY['Responsible'::text, 'Accountable'::text, 'Consulted'::text, 'Informed'::text])))
);


ALTER TABLE public.stakeholders OWNER TO postgres;

--
-- Name: task_backlog; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_backlog (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    title text NOT NULL,
    description text,
    project_id uuid NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    priority text DEFAULT 'medium'::text,
    status text DEFAULT 'backlog'::text NOT NULL,
    owner_id uuid,
    target_date date,
    source_type text DEFAULT 'manual'::text,
    source_id uuid,
    department_id uuid
);


ALTER TABLE public.task_backlog OWNER TO postgres;

--
-- Name: task_status_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_status_history (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    task_id uuid NOT NULL,
    old_status text,
    new_status text NOT NULL,
    changed_by uuid NOT NULL,
    changed_at timestamp with time zone DEFAULT now() NOT NULL,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.task_status_history OWNER TO postgres;

--
-- Name: tasks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tasks (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    milestone_id uuid,
    title text NOT NULL,
    description text,
    status text DEFAULT 'todo'::text NOT NULL,
    priority text DEFAULT 'medium'::text,
    owner_id uuid,
    due_date date,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_by uuid NOT NULL,
    department_id uuid
);


ALTER TABLE public.tasks OWNER TO postgres;

--
-- Name: team_capacity_iterations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_capacity_iterations (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    iteration_name text NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    working_days integer NOT NULL,
    committed_story_points integer DEFAULT 0 NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    department_id uuid,
    team_id uuid
);


ALTER TABLE public.team_capacity_iterations OWNER TO postgres;

--
-- Name: team_capacity_members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_capacity_members (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_id uuid NOT NULL,
    member_name text NOT NULL,
    role text NOT NULL,
    work_mode text NOT NULL,
    leaves integer DEFAULT 0 NOT NULL,
    availability_percent integer DEFAULT 100 NOT NULL,
    effective_capacity_days numeric DEFAULT 0 NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    department_id uuid,
    stakeholder_id uuid,
    team_id uuid,
    team_member_id uuid,
    CONSTRAINT team_capacity_members_availability_percent_check CHECK (((availability_percent >= 0) AND (availability_percent <= 100))),
    CONSTRAINT team_capacity_members_work_mode_check CHECK ((work_mode = ANY (ARRAY['office'::text, 'wfh'::text, 'hybrid'::text])))
);


ALTER TABLE public.team_capacity_members OWNER TO postgres;

--
-- Name: team_capacity_settings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_capacity_settings (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    iteration_basis text DEFAULT 'days'::text NOT NULL,
    work_week integer DEFAULT 5 NOT NULL,
    office_weight numeric DEFAULT 1.0 NOT NULL,
    wfh_weight numeric DEFAULT 0.9 NOT NULL,
    hybrid_weight numeric DEFAULT 0.95 NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.team_capacity_settings OWNER TO postgres;

--
-- Name: team_definitions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_definitions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    team_id uuid NOT NULL,
    stakeholder_id uuid NOT NULL,
    default_availability_percent integer DEFAULT 100 NOT NULL,
    default_leaves integer DEFAULT 0 NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.team_definitions OWNER TO postgres;

--
-- Name: team_members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_members (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    team_id uuid NOT NULL,
    display_name text NOT NULL,
    role text,
    email text,
    work_mode text DEFAULT 'office'::text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.team_members OWNER TO postgres;

--
-- Name: teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teams (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    project_id uuid NOT NULL,
    name text NOT NULL,
    description text,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.teams OWNER TO postgres;

--
-- Name: user_roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_roles (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    user_id uuid NOT NULL,
    role public.app_role NOT NULL,
    assigned_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.user_roles OWNER TO postgres;

--
-- Name: weekly_availability; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.weekly_availability (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_week_id uuid NOT NULL,
    team_member_id uuid NOT NULL,
    availability_percent integer DEFAULT 100 NOT NULL,
    calculated_days_present numeric DEFAULT 0 NOT NULL,
    calculated_days_total numeric DEFAULT 5 NOT NULL,
    notes text,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT weekly_availability_availability_percent_check CHECK (((availability_percent >= 0) AND (availability_percent <= 100)))
);


ALTER TABLE public.weekly_availability OWNER TO postgres;

--
-- Name: weekly_member_availability; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.weekly_member_availability (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    iteration_week_id uuid NOT NULL,
    team_member_id uuid NOT NULL,
    availability_percent integer DEFAULT 100 NOT NULL,
    leaves integer DEFAULT 0 NOT NULL,
    effective_capacity numeric,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.weekly_member_availability OWNER TO postgres;

--
-- Name: messages; Type: TABLE; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE TABLE realtime.messages (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
)
PARTITION BY RANGE (inserted_at);


ALTER TABLE realtime.messages OWNER TO supabase_realtime_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.schema_migrations (
    version bigint NOT NULL,
    inserted_at timestamp(0) without time zone
);


ALTER TABLE realtime.schema_migrations OWNER TO supabase_admin;

--
-- Name: subscription; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.subscription (
    id bigint NOT NULL,
    subscription_id uuid NOT NULL,
    entity regclass NOT NULL,
    filters realtime.user_defined_filter[] DEFAULT '{}'::realtime.user_defined_filter[] NOT NULL,
    claims jsonb NOT NULL,
    claims_role regrole GENERATED ALWAYS AS (realtime.to_regrole((claims ->> 'role'::text))) STORED NOT NULL,
    created_at timestamp without time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


ALTER TABLE realtime.subscription OWNER TO supabase_admin;

--
-- Name: subscription_id_seq; Type: SEQUENCE; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE realtime.subscription ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME realtime.subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: buckets; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets (
    id text NOT NULL,
    name text NOT NULL,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    public boolean DEFAULT false,
    avif_autodetection boolean DEFAULT false,
    file_size_limit bigint,
    allowed_mime_types text[],
    owner_id text,
    type storage.buckettype DEFAULT 'STANDARD'::storage.buckettype NOT NULL
);


ALTER TABLE storage.buckets OWNER TO supabase_storage_admin;

--
-- Name: COLUMN buckets.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.buckets.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: buckets_analytics; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets_analytics (
    id text NOT NULL,
    type storage.buckettype DEFAULT 'ANALYTICS'::storage.buckettype NOT NULL,
    format text DEFAULT 'ICEBERG'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.buckets_analytics OWNER TO supabase_storage_admin;

--
-- Name: migrations; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.migrations (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    hash character varying(40) NOT NULL,
    executed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE storage.migrations OWNER TO supabase_storage_admin;

--
-- Name: objects; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.objects (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    bucket_id text,
    name text,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    last_accessed_at timestamp with time zone DEFAULT now(),
    metadata jsonb,
    path_tokens text[] GENERATED ALWAYS AS (string_to_array(name, '/'::text)) STORED,
    version text,
    owner_id text,
    user_metadata jsonb,
    level integer
);


ALTER TABLE storage.objects OWNER TO supabase_storage_admin;

--
-- Name: COLUMN objects.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.objects.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: prefixes; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.prefixes (
    bucket_id text NOT NULL,
    name text NOT NULL COLLATE pg_catalog."C",
    level integer GENERATED ALWAYS AS (storage.get_level(name)) STORED NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);


ALTER TABLE storage.prefixes OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads (
    id text NOT NULL,
    in_progress_size bigint DEFAULT 0 NOT NULL,
    upload_signature text NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    version text NOT NULL,
    owner_id text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    user_metadata jsonb
);


ALTER TABLE storage.s3_multipart_uploads OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads_parts; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads_parts (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    upload_id text NOT NULL,
    size bigint DEFAULT 0 NOT NULL,
    part_number integer NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    etag text NOT NULL,
    owner_id text,
    version text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.s3_multipart_uploads_parts OWNER TO supabase_storage_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: supabase_migrations; Owner: postgres
--

CREATE TABLE supabase_migrations.schema_migrations (
    version text NOT NULL,
    statements text[],
    name text,
    created_by text,
    idempotency_key text
);


ALTER TABLE supabase_migrations.schema_migrations OWNER TO postgres;

--
-- Name: refresh_tokens id; Type: DEFAULT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens ALTER COLUMN id SET DEFAULT nextval('auth.refresh_tokens_id_seq'::regclass);


--
-- Data for Name: audit_log_entries; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.audit_log_entries (instance_id, id, payload, created_at, ip_address) FROM stdin;
00000000-0000-0000-0000-000000000000	db5ec011-ab33-4c60-a44e-3abf6d1076ae	{"action":"user_confirmation_requested","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-08-26 17:31:16.046365+00	
00000000-0000-0000-0000-000000000000	75758258-b315-477a-ac22-645ed372dafe	{"action":"user_signedup","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-08-26 17:31:48.971208+00	
00000000-0000-0000-0000-000000000000	c6adcff8-afd3-4564-83c6-6e08367900ca	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"ms86100@gmail.com","user_id":"aa3ceb36-97df-4b82-856c-a74d2b233de3","user_phone":""}}	2025-08-26 17:41:13.690602+00	
00000000-0000-0000-0000-000000000000	f46eb209-c122-46a8-9866-f47aae373596	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"admin@admin.com","user_id":"48667d27-66e4-41e1-ad80-08005288ea08","user_phone":""}}	2025-08-26 17:43:22.19116+00	
00000000-0000-0000-0000-000000000000	cd4a2c71-412b-466d-871c-62a4f512ef35	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 17:44:04.757736+00	
00000000-0000-0000-0000-000000000000	9e33f812-a2c1-4f82-b93c-1eaaded9d640	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 23:45:56.029383+00	
00000000-0000-0000-0000-000000000000	27eb3204-bb27-4cc2-b53e-59fe70599dac	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 23:48:57.275887+00	
00000000-0000-0000-0000-000000000000	b6f2c6b7-4a08-490f-9aac-fb8c1d0a1472	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 23:51:08.065673+00	
00000000-0000-0000-0000-000000000000	a797649f-d616-42aa-a8c2-a23abc5701a4	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 23:51:52.91547+00	
00000000-0000-0000-0000-000000000000	3dfe9b5b-4e18-48e5-8bc1-34436c77c72c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 05:09:46.610089+00	
00000000-0000-0000-0000-000000000000	b0210a0f-3235-474f-b4b6-2e21a2caeaaa	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 05:09:46.611137+00	
00000000-0000-0000-0000-000000000000	86d27782-b648-47db-b7e3-a656b5bea5e6	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 06:15:52.431444+00	
00000000-0000-0000-0000-000000000000	365db75e-8f21-46ce-b843-fa6b412dd629	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 06:15:52.432757+00	
00000000-0000-0000-0000-000000000000	e926b6c6-dd18-42ee-bb02-f680951a93d9	{"action":"token_refreshed","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 06:19:25.693307+00	
00000000-0000-0000-0000-000000000000	050ae10b-cd3e-42ea-98e3-a28d20920757	{"action":"token_revoked","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 06:19:25.694328+00	
00000000-0000-0000-0000-000000000000	eb96e1e4-16f0-47c1-b09b-c080842bf820	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-27 06:19:51.811765+00	
00000000-0000-0000-0000-000000000000	f6c191f9-88a8-4df2-b57e-e481583a0d0f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 07:22:11.179479+00	
00000000-0000-0000-0000-000000000000	4dc8521a-9911-4f8d-9efc-6abcf8f4e348	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 07:22:11.180629+00	
00000000-0000-0000-0000-000000000000	df7a7e65-827b-4263-85f4-bf9d206014ae	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 07:22:28.9799+00	
00000000-0000-0000-0000-000000000000	a29b34b8-d593-498b-b169-b53d1496d0dc	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 07:22:28.981143+00	
00000000-0000-0000-0000-000000000000	fa5c34ed-9587-44d5-bb05-06c2ad82beac	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-27 07:46:17.794039+00	
00000000-0000-0000-0000-000000000000	4ec577de-8d4e-46a0-8bc7-c4dc38a13fc0	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 08:21:16.956442+00	
00000000-0000-0000-0000-000000000000	79a3c760-6678-4cd6-b3d6-9d5749b799d8	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 08:21:16.957907+00	
00000000-0000-0000-0000-000000000000	7bd98488-237f-47fd-acee-ea3947386985	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 08:44:40.067266+00	
00000000-0000-0000-0000-000000000000	9612406f-deee-44bc-b2c0-46d8c07b1062	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 08:44:40.068865+00	
00000000-0000-0000-0000-000000000000	1810155b-9113-4e51-9ccd-6a898da94793	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-27 08:52:56.404266+00	
00000000-0000-0000-0000-000000000000	34bf802a-cd56-4042-8751-0804ecd562ac	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 09:19:33.586515+00	
00000000-0000-0000-0000-000000000000	47138609-da84-4fac-ba14-020a61b2251a	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 09:19:33.587596+00	
00000000-0000-0000-0000-000000000000	32588826-f141-493c-aa0a-26c620b4350f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 09:43:08.781748+00	
00000000-0000-0000-0000-000000000000	a1949494-5a60-48ec-a531-6fe09f5fcab1	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 09:43:08.782845+00	
00000000-0000-0000-0000-000000000000	f2f83194-2dbf-46cb-bcd8-0c201cd4fc16	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:17:58.820926+00	
00000000-0000-0000-0000-000000000000	de2dcbf9-721e-4a64-a648-6740f090fdf4	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:17:58.822959+00	
00000000-0000-0000-0000-000000000000	160e1eca-ba69-4349-abb8-1b35598f1a2a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:18:52.980868+00	
00000000-0000-0000-0000-000000000000	98e45e79-c25d-4586-ad6a-991afb507a23	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:18:52.98228+00	
00000000-0000-0000-0000-000000000000	fb6d9d0a-462b-4007-9d11-3400d0d1b7bb	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:41:52.333822+00	
00000000-0000-0000-0000-000000000000	ea2840ee-00f0-4c02-86e1-8e54fd9611d9	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 10:41:52.334943+00	
00000000-0000-0000-0000-000000000000	d70d5151-c5b6-4867-b1c1-be71b0784c4e	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:22:29.972714+00	
00000000-0000-0000-0000-000000000000	bf2650ff-a845-459c-84ad-fb33b98c0540	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:22:29.973744+00	
00000000-0000-0000-0000-000000000000	262fa7e9-b7f0-48bd-90e5-d99369ae68a5	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:22:35.738223+00	
00000000-0000-0000-0000-000000000000	485fbf2a-39a8-450d-b260-11f3a8610a58	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:22:35.738904+00	
00000000-0000-0000-0000-000000000000	3cdbde15-3c37-44e6-be9b-1167c95b6607	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:40:20.767708+00	
00000000-0000-0000-0000-000000000000	fdaa29b9-0d96-4575-b750-daa61dc6206e	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 11:40:20.768921+00	
00000000-0000-0000-0000-000000000000	81bda880-ac1d-41dc-801c-2ef8efc43a44	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:20:41.857812+00	
00000000-0000-0000-0000-000000000000	bd654b08-ffcb-4036-8eee-23f6cc9dce06	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:20:41.859549+00	
00000000-0000-0000-0000-000000000000	ad3d70e7-5e8a-4870-b7af-ecfc22c1a069	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:21:46.12721+00	
00000000-0000-0000-0000-000000000000	27a87c09-d62c-4d11-971c-c753e8c953d5	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:21:46.128228+00	
00000000-0000-0000-0000-000000000000	37efd1b3-9f47-45f7-aec2-1807c0bc5472	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:40:31.402194+00	
00000000-0000-0000-0000-000000000000	1eb894fe-0f1c-4023-b12e-614a82fbdc47	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 12:40:31.40354+00	
00000000-0000-0000-0000-000000000000	87040a33-c887-4ce6-bdf3-75a37aab5310	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:03.882927+00	
00000000-0000-0000-0000-000000000000	5c1c63cf-367f-4b0d-aec3-1939d98d12ea	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:03.887902+00	
00000000-0000-0000-0000-000000000000	38e2925d-1e69-40db-a556-5627d9066e12	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:03.973352+00	
00000000-0000-0000-0000-000000000000	9c51661e-5762-4d2b-be2d-7e5757899b1d	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:03.974211+00	
00000000-0000-0000-0000-000000000000	a6984cc3-1705-4b9e-84bf-9f07889a1d8d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:06.967975+00	
00000000-0000-0000-0000-000000000000	ccc6dfe4-b37d-4b76-b0ec-70601f1a48b1	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 14:03:06.968712+00	
00000000-0000-0000-0000-000000000000	fcaa8505-5c86-4d95-9f4e-8065828a10b3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:01:25.803578+00	
00000000-0000-0000-0000-000000000000	253dae72-0195-4630-8708-d0c228468db7	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:01:25.805737+00	
00000000-0000-0000-0000-000000000000	d16e9968-70e9-42d3-bdfc-78d3752505c3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:01:49.219994+00	
00000000-0000-0000-0000-000000000000	5db22b56-ef25-49e7-b2ce-57f08ec72520	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:01:49.22122+00	
00000000-0000-0000-0000-000000000000	2d9663f4-07fb-4613-b41d-239d38ce3a27	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:07:07.670485+00	
00000000-0000-0000-0000-000000000000	75a1dac0-444e-4857-9fbe-80035203bce9	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 15:07:07.67357+00	
00000000-0000-0000-0000-000000000000	59ea1bf9-367b-40fb-a0c8-58aa188b27eb	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:10:00.787301+00	
00000000-0000-0000-0000-000000000000	634ca315-373e-4179-a6cc-b05d4279454f	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:10:00.789753+00	
00000000-0000-0000-0000-000000000000	be9dd824-982f-4805-bdaf-7cca8e78a84c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:10:15.917386+00	
00000000-0000-0000-0000-000000000000	941ed09e-9f52-464f-98de-8d1064e5d427	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:10:15.918251+00	
00000000-0000-0000-0000-000000000000	136338ad-8cd8-4150-868d-4fb59db274e3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:17:52.836119+00	
00000000-0000-0000-0000-000000000000	0ea3a4ac-a474-481c-8885-732992aaa74d	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 03:17:52.837236+00	
00000000-0000-0000-0000-000000000000	7e911f3a-7bcc-4740-98a0-9cf46cba6ecb	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 03:39:26.896576+00	
00000000-0000-0000-0000-000000000000	a4e9c121-eefe-466b-bf94-99674405691c	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 03:40:03.86354+00	
00000000-0000-0000-0000-000000000000	cf4a2fc8-f792-40a4-a394-e7a74b849126	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:08:43.056365+00	
00000000-0000-0000-0000-000000000000	fcab34a1-8813-430f-9833-98aab547eda0	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:08:43.057821+00	
00000000-0000-0000-0000-000000000000	b24f463c-00cb-461a-9de7-daaea7ec8396	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:16:41.260648+00	
00000000-0000-0000-0000-000000000000	303614ce-2b11-4ef2-bb04-cab95d3d7574	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:16:41.261727+00	
00000000-0000-0000-0000-000000000000	b6d7f9af-613d-4831-938f-f38bb976088a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:42:42.754261+00	
00000000-0000-0000-0000-000000000000	7ffeac38-277c-485e-aed8-cc3ca57dfeec	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 04:42:42.755352+00	
00000000-0000-0000-0000-000000000000	81a94e70-916f-49e0-b394-49ea7bc1e196	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:08:50.610671+00	
00000000-0000-0000-0000-000000000000	feb43e51-725a-4795-b9b8-58142fb6ca48	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:08:50.611733+00	
00000000-0000-0000-0000-000000000000	faa70186-914d-4940-9156-1f8d1f4a4c8b	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:15:22.575881+00	
00000000-0000-0000-0000-000000000000	e5768c65-c11b-4049-9b8c-a0625dade762	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:15:22.576931+00	
00000000-0000-0000-0000-000000000000	7e281d0d-b438-4f59-b1e2-39f97b2dc1b7	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:40:48.780818+00	
00000000-0000-0000-0000-000000000000	deb41c65-acde-4393-8f33-0475fc685dc6	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 05:40:48.781883+00	
00000000-0000-0000-0000-000000000000	d3ec87f9-aff9-478b-b5b3-80997ade4c5e	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:07:18.273718+00	
00000000-0000-0000-0000-000000000000	3b3b457e-144f-4947-883a-cce2ace067b6	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:07:18.274745+00	
00000000-0000-0000-0000-000000000000	06e8eb12-e313-4c70-9c7b-51cf0c8b65b3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:14:01.888188+00	
00000000-0000-0000-0000-000000000000	4815696f-c24a-4b24-b8c2-09ec2a98d0dc	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:14:01.889332+00	
00000000-0000-0000-0000-000000000000	4a7f2966-5dc6-4fe9-ab8f-4d44f527dfa9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:39:22.047401+00	
00000000-0000-0000-0000-000000000000	3f279bf4-df15-4a22-9de1-46b1adda418f	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 06:39:22.048804+00	
00000000-0000-0000-0000-000000000000	47969d47-e66f-452c-9b4c-1d8943e0fe81	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:06:08.907484+00	
00000000-0000-0000-0000-000000000000	6a92db57-6ab9-44dd-a1c7-67143ba88e81	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:06:08.908769+00	
00000000-0000-0000-0000-000000000000	77738c44-8fad-4e26-abc3-d33b2284f208	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:12:30.232344+00	
00000000-0000-0000-0000-000000000000	40e6fcc1-9324-40c3-a602-d31ecd6717d3	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:12:30.233778+00	
00000000-0000-0000-0000-000000000000	8a68c4f3-dfbd-42fb-985f-2838d979d7fb	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:38:54.217209+00	
00000000-0000-0000-0000-000000000000	b256fc04-619d-4b6f-970e-583bf5f84f49	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 07:38:54.218804+00	
00000000-0000-0000-0000-000000000000	3784dc5c-0440-4d8a-a2b8-429f8f8b42da	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 08:04:33.386452+00	
00000000-0000-0000-0000-000000000000	dbb71aac-b03e-4e46-83d1-cc592fa0999a	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 08:04:33.387613+00	
00000000-0000-0000-0000-000000000000	60de895b-d561-442f-8fff-8ea5bf1efae8	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 08:14:05.908591+00	
00000000-0000-0000-0000-000000000000	37ff5afa-4815-4966-a5a6-9ce2f2ec25ad	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 08:14:05.910201+00	
00000000-0000-0000-0000-000000000000	3f0ba92f-5b78-4621-8f5a-6ed16e83e1a2	{"action":"user_confirmation_requested","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-08-30 08:37:25.777455+00	
00000000-0000-0000-0000-000000000000	fc8e100e-fe6a-493c-ad2f-c0e73c204389	{"action":"user_signedup","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-08-30 08:38:13.660763+00	
00000000-0000-0000-0000-000000000000	5326cc40-6bd4-4942-b909-a019c3b48151	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:41:48.036968+00	
00000000-0000-0000-0000-000000000000	bbdb7923-8a6a-40f5-8ae2-6cace60b8de2	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:43:56.58272+00	
00000000-0000-0000-0000-000000000000	a280a310-e2f3-4024-be1d-7bba5e474df4	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:44:23.860399+00	
00000000-0000-0000-0000-000000000000	a1ccd8d0-3264-4d85-b0af-3551d47a47da	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:44:35.124862+00	
00000000-0000-0000-0000-000000000000	829c2ac2-5ba1-4f45-a99d-b7e0ae3a3f85	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:48:34.758137+00	
00000000-0000-0000-0000-000000000000	362c9380-e6c9-45ce-a2ba-6436dd78aa2b	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 08:57:22.150092+00	
00000000-0000-0000-0000-000000000000	55443496-3194-4eeb-886e-68ea8ffffe1f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 09:03:01.252205+00	
00000000-0000-0000-0000-000000000000	19c08b72-5993-4866-b641-cba9d42a0935	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 09:03:01.254576+00	
00000000-0000-0000-0000-000000000000	658803fc-eead-4ca9-80b4-115f858fd037	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 09:06:18.724355+00	
00000000-0000-0000-0000-000000000000	ddeda36b-542e-4ba1-b693-a6892886b64f	{"action":"token_refreshed","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 09:54:51.182928+00	
00000000-0000-0000-0000-000000000000	c406254a-ac3d-41f6-9dd7-af67b30786b9	{"action":"token_revoked","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 09:54:51.184339+00	
00000000-0000-0000-0000-000000000000	e90c2900-2cb1-47ae-93f5-249757298250	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:01:04.139166+00	
00000000-0000-0000-0000-000000000000	76c83f29-ab1e-4d4a-9ba3-8b295bac966a	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:01:04.140227+00	
00000000-0000-0000-0000-000000000000	e08da4e0-080e-4e4e-9de9-de23b3264d93	{"action":"token_refreshed","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:04:49.911003+00	
00000000-0000-0000-0000-000000000000	1670fb13-97c9-4cb2-87f5-5c4a71b90482	{"action":"token_revoked","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:04:49.912529+00	
00000000-0000-0000-0000-000000000000	1e65c956-e026-4c70-8ec7-64a3e424a18c	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:29:31.104644+00	
00000000-0000-0000-0000-000000000000	7b98ab74-7ab4-4b53-84b5-8e009b2c9fe2	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:31:29.524663+00	
00000000-0000-0000-0000-000000000000	6cb2b95a-7657-41db-a0b2-9b3426079aa0	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:36:55.030767+00	
00000000-0000-0000-0000-000000000000	70870227-2b77-4717-ac39-03522a4e4f56	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:41:10.865749+00	
00000000-0000-0000-0000-000000000000	37edd411-9a72-42a7-8e58-85bcdc0988c6	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:41:10.866892+00	
00000000-0000-0000-0000-000000000000	30656cd9-8e55-49ec-a1a6-d6baebfc810c	{"action":"logout","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-30 10:41:36.065465+00	
00000000-0000-0000-0000-000000000000	8138a833-21da-48bb-bf10-5d666d625d0a	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:42:24.979449+00	
00000000-0000-0000-0000-000000000000	ab35e263-bf89-4115-8e62-3f32a7f308c1	{"action":"logout","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account"}	2025-08-30 10:44:14.828189+00	
00000000-0000-0000-0000-000000000000	991ecbb6-c224-4175-9b6c-1671ea652932	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:44:19.127854+00	
00000000-0000-0000-0000-000000000000	eec46dcd-3ef2-4d14-9ff6-b120e4f5f6bf	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:44:42.226873+00	
00000000-0000-0000-0000-000000000000	c04cfd50-baae-4adb-a71a-00e6a675c088	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:47:31.388101+00	
00000000-0000-0000-0000-000000000000	2bfb1611-38ba-4694-8a13-45449d616f7a	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:47:35.809659+00	
00000000-0000-0000-0000-000000000000	2d659367-a5af-4ae0-be9d-a6a0329fc35b	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:47:37.864098+00	
00000000-0000-0000-0000-000000000000	2847ac25-61f3-4a3e-91a8-81b2255bc0a5	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:48:20.189318+00	
00000000-0000-0000-0000-000000000000	dcc7aa0d-b062-47f6-93f8-f0a860e9f80a	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:48:37.54777+00	
00000000-0000-0000-0000-000000000000	b36bc1fe-07fe-4236-9bd5-0243901b2a35	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:49:08.640207+00	
00000000-0000-0000-0000-000000000000	1268bc46-35e5-44f8-bb91-7fd9d2934cc3	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:49:17.958666+00	
00000000-0000-0000-0000-000000000000	b32ae185-e50c-4ac1-a2a8-cc9cd43a8aaa	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:55:53.448516+00	
00000000-0000-0000-0000-000000000000	c7d27f76-0801-469e-b2d0-b8faafeaed52	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:56:40.22066+00	
00000000-0000-0000-0000-000000000000	d2c31d8b-489c-407e-acba-88dd51dac94f	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 10:56:55.088829+00	
00000000-0000-0000-0000-000000000000	0d55e7ba-6881-4a99-b3f7-260a460cbc36	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:59:43.045006+00	
00000000-0000-0000-0000-000000000000	7d50fe44-c3c6-4824-ad81-f45c72bebd3d	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 10:59:43.04653+00	
00000000-0000-0000-0000-000000000000	26ec6b71-82d5-4454-8623-a80b32901383	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:03:50.220287+00	
00000000-0000-0000-0000-000000000000	2ce8b4a5-a71a-4a25-a47c-76a78bb7ab76	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:06:25.204056+00	
00000000-0000-0000-0000-000000000000	99641baa-b742-41db-9499-b6f84b140525	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:06:38.380996+00	
00000000-0000-0000-0000-000000000000	c186a679-3d4b-47fe-82c4-04b5a8c95836	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:08:01.185657+00	
00000000-0000-0000-0000-000000000000	d3d35347-c385-44db-9a93-226f63e05ff7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:09:04.240109+00	
00000000-0000-0000-0000-000000000000	7d8a33d8-f010-4f87-bcdc-096b38a6fb44	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:09:19.427764+00	
00000000-0000-0000-0000-000000000000	9629159e-215b-4a95-91fd-1f4f384853ab	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:10:52.394962+00	
00000000-0000-0000-0000-000000000000	60af59f4-009f-4265-a520-f573ac5159ed	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:11:28.142162+00	
00000000-0000-0000-0000-000000000000	ad937eca-95d4-4e87-a7f7-64cadb228ab9	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:18:29.505059+00	
00000000-0000-0000-0000-000000000000	38c397a0-bcd4-4df1-a816-9e682609aee7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:18:39.996103+00	
00000000-0000-0000-0000-000000000000	507850bb-aefe-479b-a82f-b0ac28684137	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:19:03.637333+00	
00000000-0000-0000-0000-000000000000	ba7464f7-07a5-46f8-a103-16f95c7f99ba	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:19:58.802851+00	
00000000-0000-0000-0000-000000000000	00291fe5-619d-4c11-9a1b-dfd3f89eeae4	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:20:00.951231+00	
00000000-0000-0000-0000-000000000000	25bc89d7-f090-441c-8ea4-5f333ecec8ac	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:20:06.620289+00	
00000000-0000-0000-0000-000000000000	e04cc4b7-20da-4af8-9073-e806e4aa1ff0	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 04:13:34.492436+00	
00000000-0000-0000-0000-000000000000	cac54ca1-9ae0-4a0a-8d33-0d93f50963f1	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 11:20:13.985532+00	
00000000-0000-0000-0000-000000000000	7d2bf6a5-4ea8-47d1-afc2-53f211e646af	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 12:26:19.075686+00	
00000000-0000-0000-0000-000000000000	3f9cc359-6f2a-433f-9d5b-55e4c6b018e2	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 12:26:19.077726+00	
00000000-0000-0000-0000-000000000000	f695535d-0dba-4727-9a88-6d0d415bb2b3	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 12:28:24.784834+00	
00000000-0000-0000-0000-000000000000	7ede59bf-ade5-4fda-87fa-730cef8deca3	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 12:28:26.778448+00	
00000000-0000-0000-0000-000000000000	1b9e8421-43bd-4d86-8553-f221c0114555	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 12:29:48.761599+00	
00000000-0000-0000-0000-000000000000	6b0a930e-1006-47c8-bae0-77909832deff	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 12:29:48.76228+00	
00000000-0000-0000-0000-000000000000	f8ca401c-3980-4a23-8883-c4835cd0f928	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-30 12:34:51.339329+00	
00000000-0000-0000-0000-000000000000	5948f183-76ac-4ecc-a103-bbd4377e76b7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 12:34:57.586076+00	
00000000-0000-0000-0000-000000000000	13c7f4b2-4832-41b0-9a0c-a93d59e85030	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 12:38:45.335146+00	
00000000-0000-0000-0000-000000000000	d7e6a97a-a8bc-485c-a061-0b3b0c4dc691	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 13:36:57.294575+00	
00000000-0000-0000-0000-000000000000	d3a36dd3-40de-4863-91de-5164485f1b76	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 13:36:57.296321+00	
00000000-0000-0000-0000-000000000000	df7c6884-4458-4d2f-9c4e-fbfb8098ee19	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 13:39:32.8194+00	
00000000-0000-0000-0000-000000000000	9d9d7e77-16cb-4dfe-b093-af96c7dc1157	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 13:39:32.821425+00	
00000000-0000-0000-0000-000000000000	b82ba76d-9a9d-4d3a-89c3-ffbb186c496d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 13:39:32.839831+00	
00000000-0000-0000-0000-000000000000	2d2f5dee-6f4c-4962-b5d0-1462adce1e6e	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 14:01:51.454298+00	
00000000-0000-0000-0000-000000000000	53da71b0-6da7-42d8-99c5-03cb1e4f92fd	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 14:03:08.540588+00	
00000000-0000-0000-0000-000000000000	9a7355a5-8f60-4630-ba5b-be4d32b9d03f	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-30 14:03:21.085497+00	
00000000-0000-0000-0000-000000000000	31059b58-f885-4ae6-a9a2-36311a5b89c3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 14:41:03.912938+00	
00000000-0000-0000-0000-000000000000	7f134e71-92f7-40e8-8664-03d196716ef8	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 14:41:03.91407+00	
00000000-0000-0000-0000-000000000000	f39131a9-e00a-4519-ba7b-d7e6f3f9782d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 14:41:04.467702+00	
00000000-0000-0000-0000-000000000000	b307fbf0-b656-41a6-a87a-dae967067006	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:06:00.495519+00	
00000000-0000-0000-0000-000000000000	9ebfd681-9ab2-40eb-92ce-ee671e407a21	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:06:00.498137+00	
00000000-0000-0000-0000-000000000000	c1783910-f4dc-4b87-bbae-cfad20351bf3	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:06:00.775646+00	
00000000-0000-0000-0000-000000000000	e7b59171-8900-4d3c-bfd1-0dc65f2580bd	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:16:45.648053+00	
00000000-0000-0000-0000-000000000000	8a3a0094-6640-460f-b315-178cb8680917	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:16:45.649422+00	
00000000-0000-0000-0000-000000000000	18c62c60-eb0d-4499-86a6-1a40a13d67a5	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-30 15:16:45.981791+00	
00000000-0000-0000-0000-000000000000	a95930ad-af9a-4877-93f3-25c492189ade	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 02:51:45.620666+00	
00000000-0000-0000-0000-000000000000	9c4ec06a-9a61-479d-a0df-633a476af1ae	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 02:51:45.622364+00	
00000000-0000-0000-0000-000000000000	cabe1371-ad4b-4b5a-b423-e18e71cbf3d9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 04:13:34.491054+00	
00000000-0000-0000-0000-000000000000	9e82c56a-2bec-4f37-b7ec-31a5056ccbbe	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 04:14:57.864395+00	
00000000-0000-0000-0000-000000000000	364cdd2e-502b-45d4-9321-38b5db7d1773	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 04:14:57.865566+00	
00000000-0000-0000-0000-000000000000	e5712ee9-2029-49e7-b1b0-7b5a19ea7d9a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 05:24:42.074221+00	
00000000-0000-0000-0000-000000000000	e7515164-efce-41a5-b855-d46e5257b16e	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 05:24:42.075659+00	
00000000-0000-0000-0000-000000000000	2a45cf38-0430-4cf1-b602-01763f4a17c2	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 05:44:45.859155+00	
00000000-0000-0000-0000-000000000000	91b46ef3-a5ad-4804-88b7-c0e1e46fbb0b	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 05:44:45.860397+00	
00000000-0000-0000-0000-000000000000	fa895b62-23d0-41df-a441-91cb52acd6bf	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 06:25:49.172911+00	
00000000-0000-0000-0000-000000000000	0d30542a-c867-41db-908f-fa7de6351925	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 06:25:49.174361+00	
00000000-0000-0000-0000-000000000000	64ddca75-fc87-49f9-a466-7607a3b0892f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 07:29:54.338719+00	
00000000-0000-0000-0000-000000000000	8ed18092-afb3-474b-ae20-f6f728206df8	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 07:29:54.340361+00	
00000000-0000-0000-0000-000000000000	08b441b8-e912-4f83-814b-e57266287804	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 07:33:49.080844+00	
00000000-0000-0000-0000-000000000000	8f4e1879-72f4-4397-90f7-67b2e803beeb	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 07:33:49.082794+00	
00000000-0000-0000-0000-000000000000	37f9fad5-f5ce-4086-964d-b4fab68ee2fc	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-31 07:33:50.906417+00	
00000000-0000-0000-0000-000000000000	fdedb017-1d99-4bf2-a997-80cb9db48f47	{"action":"login","actor_id":"48667d27-66e4-41e1-ad80-08005288ea08","actor_username":"admin@admin.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-31 07:39:32.492187+00	
00000000-0000-0000-0000-000000000000	864d0751-a7e7-4859-a383-9b39b4c7a42d	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-31 07:40:05.019414+00	
00000000-0000-0000-0000-000000000000	d4258f3a-02fe-4a8a-aa76-3c3fa53b9c25	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-31 08:36:12.358805+00	
00000000-0000-0000-0000-000000000000	ddc5cadb-3492-48c5-a451-29c298dcc217	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-31 15:28:49.531755+00	
00000000-0000-0000-0000-000000000000	a2ba5880-59d5-421b-b4ba-7fe2f9bffcc8	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 17:00:22.153779+00	
00000000-0000-0000-0000-000000000000	024dd976-4b06-421f-9d3d-043e8462b4c3	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 17:00:22.154765+00	
00000000-0000-0000-0000-000000000000	4f787050-2f98-4aec-bdfc-a7a805120ed2	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 12:31:37.185466+00	
00000000-0000-0000-0000-000000000000	d5bbd963-7002-4d17-aef9-d3e6e63b9586	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 12:31:37.186556+00	
00000000-0000-0000-0000-000000000000	40127d39-d7b2-42da-ac8f-d07a255f4021	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-02 12:54:41.213176+00	
00000000-0000-0000-0000-000000000000	2b074481-c238-4ff2-9744-51126e3043f8	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 13:40:05.397234+00	
00000000-0000-0000-0000-000000000000	6aee35e8-ef0f-4411-8bca-cb549bad83f6	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 13:40:05.398891+00	
00000000-0000-0000-0000-000000000000	a5cf4c9c-bb36-4a8a-ab64-406b72797563	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 14:06:31.334908+00	
00000000-0000-0000-0000-000000000000	6b8db0ad-d7ce-4886-8954-0dbe54b02f4c	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 14:06:31.336358+00	
00000000-0000-0000-0000-000000000000	6fd8e070-9fe1-468d-8ae2-6398b4721d80	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 14:06:31.536567+00	
00000000-0000-0000-0000-000000000000	80133d2b-b7dc-4ebf-916a-f4e5386891ca	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-02 14:12:35.82962+00	
00000000-0000-0000-0000-000000000000	4ffc317d-692d-46d2-ac79-c0c34c33cd52	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 14:52:37.453154+00	
00000000-0000-0000-0000-000000000000	256d9cb0-ac74-41b1-845e-a92b62ee296b	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 14:52:37.454235+00	
00000000-0000-0000-0000-000000000000	91645867-aacf-440f-b6d4-3bd83a3182d2	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 15:14:46.096156+00	
00000000-0000-0000-0000-000000000000	f71f2273-2ba2-4658-a9f7-1e32d415b534	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 15:14:46.097928+00	
00000000-0000-0000-0000-000000000000	3355f043-d775-4096-bbbc-423c435f6637	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 15:14:46.283263+00	
00000000-0000-0000-0000-000000000000	e67eff7a-4c98-4a8b-ac98-9a9232a2d278	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 16:09:01.947292+00	
00000000-0000-0000-0000-000000000000	ffa30d57-e41f-43c1-9956-0cb95a557e74	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 16:09:01.94832+00	
00000000-0000-0000-0000-000000000000	a042b4f5-d88a-4a8f-b2bc-c3e12b0b3593	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 16:17:56.119771+00	
00000000-0000-0000-0000-000000000000	fe7e4e98-d27d-4130-a7c9-6357261bf2ec	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 16:17:56.120846+00	
00000000-0000-0000-0000-000000000000	a9bb9357-a7e9-4aef-bb6c-4aa98a86a8c5	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-02 16:17:56.152463+00	
00000000-0000-0000-0000-000000000000	bd42698e-df6e-4eaa-ad28-6663a05469a3	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-02 16:26:01.488589+00	
00000000-0000-0000-0000-000000000000	4e2dc59b-ed6d-475c-8b63-94e944cb273d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 03:54:04.482587+00	
00000000-0000-0000-0000-000000000000	c24a1b6e-4988-46e3-80fa-57ab463e78ec	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 03:54:04.485094+00	
00000000-0000-0000-0000-000000000000	ceb25b7d-0c68-468f-8f65-ac451fd2decc	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 04:39:52.758748+00	
00000000-0000-0000-0000-000000000000	d0bb826b-1be9-43b2-b7a4-dc865fc1985b	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 04:39:52.759807+00	
00000000-0000-0000-0000-000000000000	f786a71f-7e3e-4b9b-ba45-71bff9952dcc	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 05:03:00.949496+00	
00000000-0000-0000-0000-000000000000	33ef3e68-383e-48d2-9c8d-ff27e260d52a	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 05:03:00.951085+00	
00000000-0000-0000-0000-000000000000	5cb71152-e2e6-4f71-a6b2-c1e31e3c4251	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 05:16:32.36595+00	
00000000-0000-0000-0000-000000000000	10e381e5-b16a-478a-bc7c-1a267b5b7757	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 05:16:32.367079+00	
00000000-0000-0000-0000-000000000000	5a2cc77c-e48f-4276-9883-73e89b2ef870	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-05 05:16:34.829248+00	
00000000-0000-0000-0000-000000000000	fd0a1a7f-3afb-401f-b2a5-6df52c4f4ebf	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-05 05:25:48.415968+00	
00000000-0000-0000-0000-000000000000	fb1f16b5-5316-4236-b3ee-1a1eaa93ae79	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-05 06:18:06.246394+00	
00000000-0000-0000-0000-000000000000	0f8da3f2-3be3-47fc-8fa3-dd1366c27082	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-05 06:27:54.64929+00	
00000000-0000-0000-0000-000000000000	9eee9930-e875-4757-a482-feec1406bb3f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 06:40:06.192701+00	
00000000-0000-0000-0000-000000000000	2d86c164-73d2-4bb4-b349-7f75da63ced9	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 06:40:06.193751+00	
00000000-0000-0000-0000-000000000000	1d39c74b-76dc-494d-82ad-d37f0dea9c4c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 06:40:06.216111+00	
00000000-0000-0000-0000-000000000000	013f6072-ca1b-4b94-b805-0e948f4ab35c	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-05 07:16:28.736344+00	
00000000-0000-0000-0000-000000000000	3e504e94-c9f5-40fd-a32f-d14e98915b2e	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-05 07:16:55.623263+00	
00000000-0000-0000-0000-000000000000	681713f4-bb12-4e63-8c8a-9db232c2237c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 08:19:53.84782+00	
00000000-0000-0000-0000-000000000000	09a9449d-2d2b-4705-9598-b7aa38c2da18	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 08:19:53.849329+00	
00000000-0000-0000-0000-000000000000	e028cd34-2e0e-4efa-a75f-bc73718e0050	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 08:19:53.917646+00	
00000000-0000-0000-0000-000000000000	0e625de9-583c-4cd7-9da2-7f3f5f7942bb	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-05 08:22:14.319428+00	
00000000-0000-0000-0000-000000000000	417fbe7d-85b9-4afa-bd03-cde7c80d9684	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:29:51.824907+00	
00000000-0000-0000-0000-000000000000	69f52989-1b64-4804-9feb-4c6bc5adc92b	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:29:51.826597+00	
00000000-0000-0000-0000-000000000000	53785fc6-1952-4b2a-b5cf-e5a60ae6db8a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:29:52.336787+00	
00000000-0000-0000-0000-000000000000	db97b591-f75e-4d4a-8555-ddbb7ba635b9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:58:24.848927+00	
00000000-0000-0000-0000-000000000000	e377fd1c-3065-411a-81f2-6db03ab3d5fb	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:58:24.850421+00	
00000000-0000-0000-0000-000000000000	c9c7cee0-43ee-4aaf-8322-fbd94ff2a903	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:58:25.236446+00	
00000000-0000-0000-0000-000000000000	a37aa7a0-9293-4422-b68a-0c96482f1864	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 10:31:37.855086+00	
00000000-0000-0000-0000-000000000000	4a2905e8-a8ec-41d8-bd0f-57796e253397	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 10:31:37.856201+00	
00000000-0000-0000-0000-000000000000	9b563c83-6dd9-4685-ad7d-e53a8d9624f4	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 10:31:38.074601+00	
00000000-0000-0000-0000-000000000000	4d80a469-5700-486d-b763-508526447e52	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 11:04:21.394563+00	
00000000-0000-0000-0000-000000000000	ce0785ad-a6c1-4835-9807-d2e293b72630	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 11:04:21.39591+00	
00000000-0000-0000-0000-000000000000	c3ea58eb-ab37-453c-914b-820fa2dfda94	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 11:04:21.559604+00	
00000000-0000-0000-0000-000000000000	a73a4f58-d0b6-4022-82c5-834ff73aa9d6	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 11:32:42.897235+00	
00000000-0000-0000-0000-000000000000	7a7309b8-9a0f-4784-9de9-ca440d630bbb	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 11:32:42.898281+00	
00000000-0000-0000-0000-000000000000	4ac9f34f-2f6d-4bfc-85b1-f5d3dec270b7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 12:07:03.00713+00	
00000000-0000-0000-0000-000000000000	cf2054e9-2c75-4121-8e8f-8509188518e6	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:28:09.143728+00	
00000000-0000-0000-0000-000000000000	9a82c218-7985-426c-abe2-cf2349a94b4d	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:28:09.144823+00	
00000000-0000-0000-0000-000000000000	c5e38e7e-1f03-49e9-b0ae-7166ceee7206	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:55:19.098894+00	
00000000-0000-0000-0000-000000000000	df7dcc5e-2238-4dac-8e54-586bd76db905	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:55:19.100467+00	
00000000-0000-0000-0000-000000000000	550201e0-893b-418d-850a-6a2309b46e18	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:55:19.132982+00	
00000000-0000-0000-0000-000000000000	f093c2aa-ca9e-47d9-99b9-bc165d9e36f8	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:55:19.199325+00	
00000000-0000-0000-0000-000000000000	f17ba1d2-7654-45bd-ba8c-32f45eb80614	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 13:56:59.648411+00	
00000000-0000-0000-0000-000000000000	5c0df70c-fba1-4dbe-b042-31863a71e43d	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-07 14:29:31.566919+00	
00000000-0000-0000-0000-000000000000	9c953e4e-a443-414f-bb67-50f7bea62d6b	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 14:29:33.275307+00	
00000000-0000-0000-0000-000000000000	ecbe120c-8f7c-45d2-851a-ae5c85712cc5	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 14:37:30.43562+00	
00000000-0000-0000-0000-000000000000	6a7839e4-1324-4674-b9c6-831c6fa3568b	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 14:38:51.05853+00	
00000000-0000-0000-0000-000000000000	9f5fc2ce-6621-4864-bb26-5ae092772f2c	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 15:19:20.363245+00	
00000000-0000-0000-0000-000000000000	5fd1605d-beef-45ae-ac70-c76d0fae2c61	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 15:23:22.000321+00	
00000000-0000-0000-0000-000000000000	243feb01-c740-4fb9-9a28-9bc0a3ca2532	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 15:33:46.857827+00	
00000000-0000-0000-0000-000000000000	6ca6e53f-8476-4403-adf2-89dd1de428c5	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 15:33:46.859027+00	
00000000-0000-0000-0000-000000000000	67083cf3-6e7e-4132-9aa9-4b692ab089e0	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 15:33:50.185769+00	
00000000-0000-0000-0000-000000000000	c3f0b024-2ce3-4f51-8ec8-a9effa8f8b4c	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 15:33:50.186594+00	
00000000-0000-0000-0000-000000000000	eeb0980c-2b3c-4b92-8c78-ce4d36ac4210	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:09:54.405596+00	
00000000-0000-0000-0000-000000000000	66f65557-3b39-478f-bf96-5c7b35e28edd	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:21:13.05322+00	
00000000-0000-0000-0000-000000000000	ea9eb323-dbf0-4ba3-af7d-48e532e14bbc	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:21:16.751672+00	
00000000-0000-0000-0000-000000000000	6ac046f7-2cf6-4b5b-bbcd-f9addf1c8bde	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:21:19.667208+00	
00000000-0000-0000-0000-000000000000	1dccc046-d5a6-420e-b717-cf4e2a74f322	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:21:22.697097+00	
00000000-0000-0000-0000-000000000000	6cc996e8-76a2-4607-89cf-17a08c2fbf08	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:21:25.479012+00	
00000000-0000-0000-0000-000000000000	0c263bab-22cb-4ab0-816c-112aba4fbc32	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 16:23:21.518353+00	
00000000-0000-0000-0000-000000000000	61dfb9e5-b261-4f10-ae1b-84852f4eaacc	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 16:33:08.235534+00	
00000000-0000-0000-0000-000000000000	8f69a8e9-759d-4fa1-9c2a-c9c36a20f610	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 16:33:08.236687+00	
00000000-0000-0000-0000-000000000000	b2649880-7d9b-49cc-bcdd-1df166c31785	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 16:57:12.718661+00	
00000000-0000-0000-0000-000000000000	7847d64f-2967-419c-bb75-25d63ce42bba	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 17:02:11.826718+00	
00000000-0000-0000-0000-000000000000	88a0306a-4c10-4148-a85c-cb2222dbe38c	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 17:02:16.017797+00	
00000000-0000-0000-0000-000000000000	c8291605-8352-4e89-bcc8-ef971cd0eba2	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:07:58.805905+00	
00000000-0000-0000-0000-000000000000	fae80b8e-4729-49f0-bc9e-b7c4421b87d4	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:07:58.807406+00	
00000000-0000-0000-0000-000000000000	3fc96e23-c91d-45c3-a17f-bcdc7a3bed95	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:15:02.729934+00	
00000000-0000-0000-0000-000000000000	93cef644-b7af-4221-bbab-7e0ad4792b11	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:15:52.903718+00	
00000000-0000-0000-0000-000000000000	738bffe8-650a-4a02-9a38-31f6cc99e249	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:17:14.044147+00	
00000000-0000-0000-0000-000000000000	ddbc69d6-4ed2-4dfe-b948-6037eec6a5ad	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:17:14.246511+00	
00000000-0000-0000-0000-000000000000	62858602-3006-4fb9-b9d0-df6f82a23c5f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:20:18.242287+00	
00000000-0000-0000-0000-000000000000	e4bec4df-2846-4b10-bd16-c7b6ef7d1654	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:22:24.537008+00	
00000000-0000-0000-0000-000000000000	38afc09a-15fa-4a42-8384-6ff5a758bfc7	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:22:24.538745+00	
00000000-0000-0000-0000-000000000000	6ff9de6b-2ad6-4931-a48f-e40d46f1158a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:22:43.379874+00	
00000000-0000-0000-0000-000000000000	3740db1f-074a-4d03-a09a-c1509028af4a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:24:25.10561+00	
00000000-0000-0000-0000-000000000000	2c7657da-9153-4025-8ad4-5fea14d8aa0a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:25:24.270268+00	
00000000-0000-0000-0000-000000000000	65776002-e85f-43e0-ac58-00d1d06306d0	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:25:24.587481+00	
00000000-0000-0000-0000-000000000000	f1852df4-927a-4581-8690-d9968642d014	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:25:31.574345+00	
00000000-0000-0000-0000-000000000000	a3bde62e-d7d4-46b1-a03c-a9b07a4fe236	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:30:44.327603+00	
00000000-0000-0000-0000-000000000000	cd686990-776b-48b2-999f-2b4d09a07f61	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:33:37.283715+00	
00000000-0000-0000-0000-000000000000	e16ae0fb-4f32-48a9-9f69-36e7a70c9e2a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:33:37.704947+00	
00000000-0000-0000-0000-000000000000	57f4a234-7bd2-4bca-be16-f804c2976a87	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:33:46.245421+00	
00000000-0000-0000-0000-000000000000	9d452206-de03-4a48-8a50-c0c209da417e	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:37:56.447794+00	
00000000-0000-0000-0000-000000000000	1f0586ac-9181-4aa2-9e9a-0be557235f4a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:37:56.550895+00	
00000000-0000-0000-0000-000000000000	1b7c9b51-8c9c-46b2-adde-6b250ae503d4	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 17:49:15.401354+00	
00000000-0000-0000-0000-000000000000	be5b9712-ea66-4b7e-b7ad-a6adce6d6cf1	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 18:33:48.917359+00	
00000000-0000-0000-0000-000000000000	436db5cf-da84-48c9-92ef-dd2e2b943f0d	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-07 18:33:48.918433+00	
00000000-0000-0000-0000-000000000000	66a185fe-acfc-4b89-ace9-1678707a70c7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 18:34:09.383217+00	
00000000-0000-0000-0000-000000000000	3c208e77-c876-4590-a806-908fbe82cbab	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-07 18:34:42.776459+00	
00000000-0000-0000-0000-000000000000	4f324e9c-b11b-4d93-b07a-d51f0329c0f0	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 10:26:43.871904+00	
00000000-0000-0000-0000-000000000000	6c04faf4-6577-43d8-b21e-1d4d33f2523c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:06:03.738056+00	
00000000-0000-0000-0000-000000000000	12b638fd-71df-4944-977e-f5039e44d647	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:06:03.739523+00	
00000000-0000-0000-0000-000000000000	e5b57f83-84de-433b-bfdf-19c9a586b0ed	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:06:08.098913+00	
00000000-0000-0000-0000-000000000000	b018370b-7091-47c3-91e8-5d47744f64da	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:06:08.099817+00	
00000000-0000-0000-0000-000000000000	36dc50a3-2e80-4c90-a28b-74f346616066	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:06:08.280049+00	
00000000-0000-0000-0000-000000000000	56526795-edfe-419f-962e-8e620d3ff27c	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-08 15:06:17.871362+00	
00000000-0000-0000-0000-000000000000	bc40989a-20b1-45b2-84a2-bc59c7969ea8	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:06:24.674623+00	
00000000-0000-0000-0000-000000000000	4831ecdb-cd78-4b1d-afe0-89b1099a196b	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:06:52.408088+00	
00000000-0000-0000-0000-000000000000	5eb18e7d-752c-42bb-bc6b-43da86bbc5b0	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:08:52.112648+00	
00000000-0000-0000-0000-000000000000	cfd43b5d-301d-492b-b29c-717c49a3a02f	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:13:10.253884+00	
00000000-0000-0000-0000-000000000000	f57f3498-944e-424a-86a4-b38117bb1de0	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:15:28.52357+00	
00000000-0000-0000-0000-000000000000	4e618cfd-6179-43fa-8b4b-59e0b549b6cc	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-08 15:35:01.98116+00	
00000000-0000-0000-0000-000000000000	a1d90c29-705f-47b8-ac75-1960e0ae9432	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:35:18.085595+00	
00000000-0000-0000-0000-000000000000	8f0d65b1-bf20-4d70-84d0-3e2205ff9d2a	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:42:48.271841+00	
00000000-0000-0000-0000-000000000000	72ac36b1-f6d1-40b8-b09b-462317ad29a7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:48:47.475882+00	
00000000-0000-0000-0000-000000000000	403efc56-6212-44a8-b1dc-964c1c710fd7	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 15:56:43.754591+00	
00000000-0000-0000-0000-000000000000	7025eb08-89ad-4d83-9ef7-769d95e87d8a	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 16:07:22.79098+00	
00000000-0000-0000-0000-000000000000	0043b10c-f9cf-408e-b066-18a2e632aaf2	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 16:36:55.025008+00	
00000000-0000-0000-0000-000000000000	eda5b41c-1c5c-4606-8113-6bc7da1499dd	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-08 17:06:59.125712+00	
00000000-0000-0000-0000-000000000000	2463c70b-6c8b-4ff4-a960-a65da6d312e1	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:36:38.453286+00	
00000000-0000-0000-0000-000000000000	96555f63-f5ae-46af-92c9-5a916b66358b	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:36:38.454374+00	
00000000-0000-0000-0000-000000000000	aad9f3b6-94d1-4767-9a74-c6350fbfd5db	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:36:38.655925+00	
00000000-0000-0000-0000-000000000000	8473892e-19c4-49d7-a989-6258d210ce4f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:39:17.272797+00	
00000000-0000-0000-0000-000000000000	ea0ea056-82d3-47bd-82c0-e313f51f1b25	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:39:17.273942+00	
00000000-0000-0000-0000-000000000000	a90c06de-3088-430c-b479-50ff7ec3a0bf	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:39:17.441018+00	
00000000-0000-0000-0000-000000000000	781d3d77-da40-4564-b848-fd88ba177be7	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:43:17.089427+00	
00000000-0000-0000-0000-000000000000	59b74219-2f80-4efb-b2fb-7cba637fd518	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:43:17.090657+00	
00000000-0000-0000-0000-000000000000	e33b79d6-de60-468e-877a-57c72ea89453	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:43:17.186244+00	
00000000-0000-0000-0000-000000000000	fbf53670-90eb-42aa-b0b0-f89d91d83f6d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:46:18.517502+00	
00000000-0000-0000-0000-000000000000	6d41a1b3-db01-4728-9536-812a16c5d3c9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:48:52.596122+00	
00000000-0000-0000-0000-000000000000	8a47e53c-853a-4839-b446-2c1ba6ae2954	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 03:49:11.036981+00	
00000000-0000-0000-0000-000000000000	2ade72a9-b42e-4026-bbdd-eb61d6496d18	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:26:42.481292+00	
00000000-0000-0000-0000-000000000000	810f0594-9d77-4396-82ce-30f2901d7c1a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:28:14.798675+00	
00000000-0000-0000-0000-000000000000	ddc1460c-a7e5-4043-bfd1-671b859b413f	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:30:31.603455+00	
00000000-0000-0000-0000-000000000000	4252a37b-87c9-4890-905e-395414344a4a	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:03.446882+00	
00000000-0000-0000-0000-000000000000	01fee2c4-5766-4621-a5a3-82269ce8e149	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:08.807943+00	
00000000-0000-0000-0000-000000000000	b38b2ee9-f884-46ba-a34c-ffa668f7df8c	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:09.466517+00	
00000000-0000-0000-0000-000000000000	5fb3d0bb-9931-4921-b78e-002a6ae9c484	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:23.510248+00	
00000000-0000-0000-0000-000000000000	57c74398-ddf3-4469-b1d7-bacbb5efda9e	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:23.510978+00	
00000000-0000-0000-0000-000000000000	dd84ea82-096f-49d7-8fc9-bd69d0cb23c7	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:33:23.707656+00	
00000000-0000-0000-0000-000000000000	88af3b83-9512-4cb3-af15-89d3a70d2158	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:34:14.643561+00	
00000000-0000-0000-0000-000000000000	bfe4f404-06bd-46b2-84d8-4d01a3b9a397	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 04:34:57.469144+00	
00000000-0000-0000-0000-000000000000	72d6da74-c1e9-491b-8b1d-3e38eea7a344	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-09 06:20:03.17112+00	
00000000-0000-0000-0000-000000000000	8eb4e7a8-5983-406a-bb2b-3230773e2470	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 08:27:46.602809+00	
00000000-0000-0000-0000-000000000000	7e9d7979-ad1c-44cd-9717-fe6b78c2dd74	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 08:27:46.60391+00	
00000000-0000-0000-0000-000000000000	777b8253-d365-4dde-9a94-d585a2d09379	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 11:32:21.965598+00	
00000000-0000-0000-0000-000000000000	42babc75-2f2f-431e-9cdd-3cfdcbc4f887	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-09 11:32:21.966656+00	
00000000-0000-0000-0000-000000000000	e8d8ec4b-7274-4987-9211-c374b82380f9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 04:22:56.006228+00	
00000000-0000-0000-0000-000000000000	33333498-ca2a-4a2d-b7cf-0341c2c084da	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 04:22:56.007323+00	
00000000-0000-0000-0000-000000000000	badda601-5a5d-4b2b-ba82-915aa8e56bea	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:39:48.599668+00	
00000000-0000-0000-0000-000000000000	adc9152b-fb31-4d23-b96b-4d0abffb6dd9	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:39:48.601216+00	
00000000-0000-0000-0000-000000000000	9b583745-70c4-4edf-9251-4041113e0f0f	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-10 12:39:55.49062+00	
00000000-0000-0000-0000-000000000000	2fd2c79b-8f19-479a-8581-e6fcebb2477d	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:41:04.606863+00	
00000000-0000-0000-0000-000000000000	7a520a0d-6e22-4f59-87ef-653f2cd379dc	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:41:04.607569+00	
00000000-0000-0000-0000-000000000000	9ba2e93c-138c-4350-bc65-30693e04b673	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-10 12:41:50.432753+00	
00000000-0000-0000-0000-000000000000	3e6a88ee-f583-46a7-a278-0148ceba1a57	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:50:02.894206+00	
00000000-0000-0000-0000-000000000000	dfa95276-e5d4-44a0-8f69-c761da7b4fad	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:50:02.895737+00	
00000000-0000-0000-0000-000000000000	2c7e0d31-1dc3-4fc1-b5ce-07a879f1da77	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-10 12:57:10.154357+00	
00000000-0000-0000-0000-000000000000	9195036f-469e-4e88-88cd-2598840cf7c2	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-10 12:59:25.545294+00	
00000000-0000-0000-0000-000000000000	88cb6201-b07b-4df6-ba82-2a3df04b3c93	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 13:56:12.454536+00	
00000000-0000-0000-0000-000000000000	58ed453f-cec7-4162-97fb-35709c3002a4	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-10 13:56:12.455804+00	
00000000-0000-0000-0000-000000000000	42e764fc-cfde-49b0-b50a-20614bac64d7	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-10 13:56:15.898911+00	
00000000-0000-0000-0000-000000000000	bbfbfb72-79d6-4eb4-9fd6-d13c1111d1df	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-10 13:56:30.38007+00	
00000000-0000-0000-0000-000000000000	94b9f001-2e4f-46f9-abad-e60282cd6012	{"action":"logout","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-10 13:56:40.638621+00	
00000000-0000-0000-0000-000000000000	4e9dfc61-5336-400a-a7ed-3eaf79dc2430	{"action":"login","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-11 03:47:22.148815+00	
00000000-0000-0000-0000-000000000000	7013cafe-b2d5-4810-8cbc-ca9919699bcd	{"action":"logout","actor_id":"57e5b843-afee-400d-8cd5-6a0b362c6d93","actor_name":"Sagar Sharma","actor_username":"sagarsharma.pm@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-11 03:47:25.845788+00	
00000000-0000-0000-0000-000000000000	5ed2b9bd-adf0-47a2-bfa6-3e4c35e16d23	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-11 03:47:31.350026+00	
00000000-0000-0000-0000-000000000000	b9804c9d-7089-4ece-bb9a-cd361cb56edf	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-11 03:55:22.275865+00	
00000000-0000-0000-0000-000000000000	82723034-ce8e-482b-b168-21695500c2f9	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-11 06:21:41.790022+00	
00000000-0000-0000-0000-000000000000	7a6a1184-bdc8-4fa4-ba47-163669d768c1	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 03:49:05.159159+00	
00000000-0000-0000-0000-000000000000	8490618c-5417-4ae5-98a0-a741b5312ad6	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 03:49:05.162746+00	
00000000-0000-0000-0000-000000000000	89b13b30-6699-4aa2-b02c-6d9092ed6313	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 03:49:09.876891+00	
00000000-0000-0000-0000-000000000000	bd7400b0-b14d-45e3-ad86-df9879b018cd	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 03:49:09.877722+00	
00000000-0000-0000-0000-000000000000	ac669bca-c901-4100-b99e-06c322aea977	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-12 03:49:46.935005+00	
00000000-0000-0000-0000-000000000000	b6b2eb7c-4244-4de9-91b7-3ed8353352f1	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 04:05:01.100148+00	
00000000-0000-0000-0000-000000000000	172a1577-f4df-4b47-8dd4-3a325384d246	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-12 04:10:38.233166+00	
00000000-0000-0000-0000-000000000000	31f36c86-fb48-4e31-8cd6-ce0018781415	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 05:17:23.442936+00	
00000000-0000-0000-0000-000000000000	713c1c5e-5127-4576-8e9e-5eb83b26788a	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 05:17:23.444355+00	
00000000-0000-0000-0000-000000000000	66babfca-3a1c-4f10-b89d-d09141e3dc74	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 05:17:23.659309+00	
00000000-0000-0000-0000-000000000000	71c2ac98-0112-4e76-bf55-a6a4da4c8061	{"action":"logout","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-09-12 06:13:52.076431+00	
00000000-0000-0000-0000-000000000000	6d6c3320-b0d8-46f0-8889-6ac67bbe8edd	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-12 06:16:03.534536+00	
00000000-0000-0000-0000-000000000000	3f3eed36-53c4-4c6a-83e3-a87c8aeef4d9	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 09:42:28.373125+00	
00000000-0000-0000-0000-000000000000	1ccd59ee-77ab-4bb3-acb5-ba867d216980	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-12 09:42:28.374484+00	
00000000-0000-0000-0000-000000000000	7eea3ee3-ba68-41a8-9ad4-93380a3eaa7d	{"action":"login","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-12 12:11:43.227228+00	
00000000-0000-0000-0000-000000000000	e6ca974d-f13d-4fb6-8945-2dbf8ca90b61	{"action":"token_refreshed","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-13 12:47:06.090781+00	
00000000-0000-0000-0000-000000000000	e43647c8-2650-4085-980c-de0c23c71372	{"action":"token_revoked","actor_id":"6dc39f1e-2af3-4b78-8488-317d90f4f538","actor_name":"Sag","actor_username":"ms861000@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-13 12:47:06.09243+00	
\.


--
-- Data for Name: flow_state; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.flow_state (id, user_id, auth_code, code_challenge_method, code_challenge, provider_type, provider_access_token, provider_refresh_token, created_at, updated_at, authentication_method, auth_code_issued_at) FROM stdin;
\.


--
-- Data for Name: identities; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.identities (provider_id, user_id, identity_data, provider, last_sign_in_at, created_at, updated_at, id) FROM stdin;
6dc39f1e-2af3-4b78-8488-317d90f4f538	6dc39f1e-2af3-4b78-8488-317d90f4f538	{"sub": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "email": "ms861000@gmail.com", "full_name": "Sag", "email_verified": true, "phone_verified": false}	email	2025-08-26 17:31:16.043033+00	2025-08-26 17:31:16.0431+00	2025-08-26 17:31:16.0431+00	916814ef-3345-46d9-95e8-420b5cce81f5
aa3ceb36-97df-4b82-856c-a74d2b233de3	aa3ceb36-97df-4b82-856c-a74d2b233de3	{"sub": "aa3ceb36-97df-4b82-856c-a74d2b233de3", "email": "ms86100@gmail.com", "email_verified": false, "phone_verified": false}	email	2025-08-26 17:41:13.689562+00	2025-08-26 17:41:13.689623+00	2025-08-26 17:41:13.689623+00	9357fffd-c0c4-4053-970c-e704308adeac
48667d27-66e4-41e1-ad80-08005288ea08	48667d27-66e4-41e1-ad80-08005288ea08	{"sub": "48667d27-66e4-41e1-ad80-08005288ea08", "email": "admin@admin.com", "email_verified": false, "phone_verified": false}	email	2025-08-26 17:43:22.189977+00	2025-08-26 17:43:22.190039+00	2025-08-26 17:43:22.190039+00	4b3cd823-c7b9-432d-830d-707cfe3afd90
57e5b843-afee-400d-8cd5-6a0b362c6d93	57e5b843-afee-400d-8cd5-6a0b362c6d93	{"sub": "57e5b843-afee-400d-8cd5-6a0b362c6d93", "email": "sagarsharma.pm@gmail.com", "full_name": "Sagar Sharma", "email_verified": true, "phone_verified": false}	email	2025-08-30 08:37:25.773581+00	2025-08-30 08:37:25.77365+00	2025-08-30 08:37:25.77365+00	16fb64c9-a7f3-4214-84cd-5448e21635d4
\.


--
-- Data for Name: instances; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.instances (id, uuid, raw_base_config, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: mfa_amr_claims; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_amr_claims (session_id, created_at, updated_at, authentication_method, id) FROM stdin;
e713909c-2ddd-4f53-a017-a0b8587b7ba6	2025-08-31 07:39:32.496782+00	2025-08-31 07:39:32.496782+00	password	060fdd37-a648-4dd3-bb5f-7459acfcf678
4ab22f6a-0c37-4a77-8931-676dfe9e3d12	2025-09-12 06:16:03.539352+00	2025-09-12 06:16:03.539352+00	password	7d2fa29a-9111-4b30-b388-10381eb2d2ff
fef7070b-50ed-4fa9-a59b-ad6b027df517	2025-09-12 12:11:43.2321+00	2025-09-12 12:11:43.2321+00	password	64907e2e-7676-4c3e-8c65-6ffdb8a43974
42653a1a-e3a1-4f24-9a1c-a73bb127cb8f	2025-08-30 10:49:17.961806+00	2025-08-30 10:49:17.961806+00	password	36cfdfd9-9185-41e8-a6ff-ff3a526721cb
\.


--
-- Data for Name: mfa_challenges; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_challenges (id, factor_id, created_at, verified_at, ip_address, otp_code, web_authn_session_data) FROM stdin;
\.


--
-- Data for Name: mfa_factors; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_factors (id, user_id, friendly_name, factor_type, status, created_at, updated_at, secret, phone, last_challenged_at, web_authn_credential, web_authn_aaguid) FROM stdin;
\.


--
-- Data for Name: oauth_clients; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.oauth_clients (id, client_id, client_secret_hash, registration_type, redirect_uris, grant_types, client_name, client_uri, logo_uri, created_at, updated_at, deleted_at) FROM stdin;
\.


--
-- Data for Name: one_time_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.one_time_tokens (id, user_id, token_type, token_hash, relates_to, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: refresh_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.refresh_tokens (instance_id, id, token, user_id, revoked, created_at, updated_at, parent, session_id) FROM stdin;
00000000-0000-0000-0000-000000000000	218	dfx3pntut6ge	6dc39f1e-2af3-4b78-8488-317d90f4f538	t	2025-09-12 06:16:03.537037+00	2025-09-12 09:42:28.375194+00	\N	4ab22f6a-0c37-4a77-8931-676dfe9e3d12
00000000-0000-0000-0000-000000000000	220	dllyimztelon	6dc39f1e-2af3-4b78-8488-317d90f4f538	t	2025-09-12 12:11:43.229811+00	2025-09-13 12:47:06.093163+00	\N	fef7070b-50ed-4fa9-a59b-ad6b027df517
00000000-0000-0000-0000-000000000000	219	v5qjkwmlxjce	6dc39f1e-2af3-4b78-8488-317d90f4f538	f	2025-09-12 09:42:28.376013+00	2025-09-12 09:42:28.376013+00	dfx3pntut6ge	4ab22f6a-0c37-4a77-8931-676dfe9e3d12
00000000-0000-0000-0000-000000000000	221	irckpzfa2xnd	6dc39f1e-2af3-4b78-8488-317d90f4f538	f	2025-09-13 12:47:06.093972+00	2025-09-13 12:47:06.093972+00	dllyimztelon	fef7070b-50ed-4fa9-a59b-ad6b027df517
00000000-0000-0000-0000-000000000000	120	lgdyp4dldljc	48667d27-66e4-41e1-ad80-08005288ea08	f	2025-08-31 07:39:32.494866+00	2025-08-31 07:39:32.494866+00	\N	e713909c-2ddd-4f53-a017-a0b8587b7ba6
00000000-0000-0000-0000-000000000000	78	m2dud3x6gj4s	48667d27-66e4-41e1-ad80-08005288ea08	f	2025-08-30 10:49:17.960525+00	2025-08-30 10:49:17.960525+00	\N	42653a1a-e3a1-4f24-9a1c-a73bb127cb8f
\.


--
-- Data for Name: saml_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_providers (id, sso_provider_id, entity_id, metadata_xml, metadata_url, attribute_mapping, created_at, updated_at, name_id_format) FROM stdin;
\.


--
-- Data for Name: saml_relay_states; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_relay_states (id, sso_provider_id, request_id, for_email, redirect_to, created_at, updated_at, flow_state_id) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.schema_migrations (version) FROM stdin;
20171026211738
20171026211808
20171026211834
20180103212743
20180108183307
20180119214651
20180125194653
00
20210710035447
20210722035447
20210730183235
20210909172000
20210927181326
20211122151130
20211124214934
20211202183645
20220114185221
20220114185340
20220224000811
20220323170000
20220429102000
20220531120530
20220614074223
20220811173540
20221003041349
20221003041400
20221011041400
20221020193600
20221021073300
20221021082433
20221027105023
20221114143122
20221114143410
20221125140132
20221208132122
20221215195500
20221215195800
20221215195900
20230116124310
20230116124412
20230131181311
20230322519590
20230402418590
20230411005111
20230508135423
20230523124323
20230818113222
20230914180801
20231027141322
20231114161723
20231117164230
20240115144230
20240214120130
20240306115329
20240314092811
20240427152123
20240612123726
20240729123726
20240802193726
20240806073726
20241009103726
20250717082212
20250731150234
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sessions (id, user_id, created_at, updated_at, factor_id, aal, not_after, refreshed_at, user_agent, ip, tag) FROM stdin;
e713909c-2ddd-4f53-a017-a0b8587b7ba6	48667d27-66e4-41e1-ad80-08005288ea08	2025-08-31 07:39:32.493509+00	2025-08-31 07:39:32.493509+00	\N	aal1	\N	\N	Deno/2.1.4 (variant; SupabaseEdgeRuntime/1.69.4)	13.233.174.94	\N
4ab22f6a-0c37-4a77-8931-676dfe9e3d12	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:16:03.535731+00	2025-09-12 09:42:28.378967+00	\N	aal1	\N	2025-09-12 09:42:28.378896	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	193.56.35.38	\N
fef7070b-50ed-4fa9-a59b-ad6b027df517	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:11:43.228492+00	2025-09-13 12:47:06.097226+00	\N	aal1	\N	2025-09-13 12:47:06.097153	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	49.207.194.129	\N
42653a1a-e3a1-4f24-9a1c-a73bb127cb8f	48667d27-66e4-41e1-ad80-08005288ea08	2025-08-30 10:49:17.959832+00	2025-08-30 10:49:17.959832+00	\N	aal1	\N	\N	Deno/2.1.4 (variant; SupabaseEdgeRuntime/1.69.4)	3.110.25.67	\N
\.


--
-- Data for Name: sso_domains; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_domains (id, sso_provider_id, domain, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: sso_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_providers (id, resource_id, created_at, updated_at, disabled) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.users (instance_id, id, aud, role, email, encrypted_password, email_confirmed_at, invited_at, confirmation_token, confirmation_sent_at, recovery_token, recovery_sent_at, email_change_token_new, email_change, email_change_sent_at, last_sign_in_at, raw_app_meta_data, raw_user_meta_data, is_super_admin, created_at, updated_at, phone, phone_confirmed_at, phone_change, phone_change_token, phone_change_sent_at, email_change_token_current, email_change_confirm_status, banned_until, reauthentication_token, reauthentication_sent_at, is_sso_user, deleted_at, is_anonymous) FROM stdin;
00000000-0000-0000-0000-000000000000	48667d27-66e4-41e1-ad80-08005288ea08	authenticated	authenticated	admin@admin.com	$2a$10$M.BK2mzJdsRVnJdSm.69ReZ6ZxA5iSRyNw0z1/NNIIIwo0lS5NeW.	2025-08-26 17:43:22.192783+00	\N		\N		\N			\N	2025-08-31 07:39:32.493429+00	{"provider": "email", "providers": ["email"]}	{"email_verified": true}	\N	2025-08-26 17:43:22.18662+00	2025-08-31 07:39:32.496068+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	aa3ceb36-97df-4b82-856c-a74d2b233de3	authenticated	authenticated	ms86100@gmail.com	$2a$10$g4inAv3I2z.xzR9s1j9XBefbbNJQGY4Tqt5xBq/60WT8fx.MBFN/6	2025-08-26 17:41:13.692496+00	\N		\N		\N			\N	\N	{"provider": "email", "providers": ["email"]}	{"email_verified": true}	\N	2025-08-26 17:41:13.686497+00	2025-08-26 17:41:13.693478+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	57e5b843-afee-400d-8cd5-6a0b362c6d93	authenticated	authenticated	sagarsharma.pm@gmail.com	$2a$10$/gBnctCJJRWWWUPFPgw/MOQCIIiywUPWsMbTb/CEhb4ES2txibz1u	2025-08-30 08:38:13.661539+00	\N		2025-08-30 08:37:25.778297+00		\N			\N	2025-09-11 03:47:22.151135+00	{"provider": "email", "providers": ["email"]}	{"sub": "57e5b843-afee-400d-8cd5-6a0b362c6d93", "email": "sagarsharma.pm@gmail.com", "full_name": "Sagar Sharma", "email_verified": true, "phone_verified": false}	\N	2025-08-30 08:37:25.763536+00	2025-09-11 03:47:22.154706+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	6dc39f1e-2af3-4b78-8488-317d90f4f538	authenticated	authenticated	ms861000@gmail.com	$2a$10$/oux28Me8RE4bo8sJ/76O.3b1N0ZQNc4hNkEOz/OVVFNye20L8BzO	2025-08-26 17:31:48.972088+00	\N		2025-08-26 17:31:16.048966+00		\N			\N	2025-09-12 12:11:43.228405+00	{"provider": "email", "providers": ["email"]}	{"sub": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "email": "ms861000@gmail.com", "full_name": "Sag", "email_verified": true, "phone_verified": false}	\N	2025-08-26 17:31:16.027022+00	2025-09-13 12:47:06.095626+00	\N	\N			\N		0	\N		\N	f	\N	f
\.


--
-- Data for Name: audit_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.audit_log (id, project_id, user_id, module, action, entity_type, entity_id, old_values, new_values, description, created_at) FROM stdin;
9be73521-df5b-40d4-99f8-cf87d9ca3896	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	23637ae1-94be-4671-bb77-c6363351156e	\N	{"id": "23637ae1-94be-4671-bb77-c6363351156e", "name": "Cockpit Modernization Design & Prototype Completion", "status": "planning", "due_date": "2025-12-06", "created_at": "2025-09-07T18:12:35.695385+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.695385+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-07 18:12:35.695385+00
51a7e6c5-6e71-4d79-90ea-c4baa3e6afaf	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	029c0318-0ae0-4092-a988-44cbdfed136f	\N	{"id": "029c0318-0ae0-4092-a988-44cbdfed136f", "name": "System Integration & Certification Readiness", "status": "planning", "due_date": "2025-12-06", "created_at": "2025-09-07T18:12:35.695385+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.695385+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-07 18:12:35.695385+00
138acbbd-c9e4-4793-983e-dc9fcb19a99c	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	\N	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
0ba4cec0-4474-4535-a8ae-49f19fd2c92b	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	1d9069ae-408e-4171-a9ec-b1b493b5137f	\N	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
190f8421-e01f-46ba-b26e-c752f072e02a	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	0ffce15d-1782-482f-8a7b-e6487554f80f	\N	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
42097e26-2646-4178-964b-5238924a45e8	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	adf0d942-488a-4c35-8d64-08eaa79e8803	\N	{"id": "adf0d942-488a-4c35-8d64-08eaa79e8803", "title": "Certification Compliance Review", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
399444fe-8349-42f1-9d43-f24cc4d28657	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	92ae8c7f-7d96-4641-a68f-5cf13ad6984a	\N	{"id": "92ae8c7f-7d96-4641-a68f-5cf13ad6984a", "title": "Final Integration & Flight Testing", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
41827b80-90fd-4efa-9b12-658bd0614523	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	2d7f8ba7-bdeb-4786-b761-83ab624983a3	\N	{"id": "2d7f8ba7-bdeb-4786-b761-83ab624983a3", "title": "Requirements Gathering & Stakeholder Interviews", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "029c0318-0ae0-4092-a988-44cbdfed136f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
ea4e1d20-f8f2-41d0-8606-f3a1d33b5889	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	d25c78bd-ab83-47dd-816f-5869317afd8f	\N	{"id": "d25c78bd-ab83-47dd-816f-5869317afd8f", "title": "Baseline System Assessment", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "029c0318-0ae0-4092-a988-44cbdfed136f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
4d29a7da-291d-41d0-b23d-69bd4d20986c	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	d8755055-8bd1-41d5-91f0-b73164958be1	\N	{"id": "d8755055-8bd1-41d5-91f0-b73164958be1", "title": "Avionics Upgrade Architecture Design", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "029c0318-0ae0-4092-a988-44cbdfed136f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
5bf19bfc-aae2-4276-b92f-ead3859ad22e	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	8c628328-fb3a-468c-b3ea-be5a076918a8	\N	{"id": "8c628328-fb3a-468c-b3ea-be5a076918a8", "title": "Digital Display Prototype Development", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "029c0318-0ae0-4092-a988-44cbdfed136f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
bd50a166-c4ee-4201-b38d-eb1397321960	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	10a907f2-51de-4eb5-8f04-8a9ec686e70e	\N	{"id": "10a907f2-51de-4eb5-8f04-8a9ec686e70e", "title": "Human-Machine Interface (HMI) Redesign", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "029c0318-0ae0-4092-a988-44cbdfed136f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-07 18:12:35.800041+00
e39e35c0-dccf-4f19-85d2-694384126b1e	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	2a48457f-4228-4a33-9b45-446f935e0476	\N	{"id": "2a48457f-4228-4a33-9b45-446f935e0476", "name": "Chief Project Manager", "raci": "Accountable", "email": null, "notes": "Oversees overall modernization project, budget, and deadlines.", "created_at": "2025-09-07T18:18:29.24515+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "Program Management", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:18:29.24515+00:00", "influence_level": "High"}	stakeholder created	2025-09-07 18:18:29.24515+00
8cb94fb0-d069-4ce8-865a-91c58f36a763	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	67e2e881-ab7b-4840-a40d-f1349dabb340	\N	{"id": "67e2e881-ab7b-4840-a40d-f1349dabb340", "name": "Lead Avionics Engineer", "raci": "Responsible", "email": null, "notes": null, "created_at": "2025-09-07T18:18:49.916205+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "Avionics & Electrical Systems", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:18:49.916205+00:00", "influence_level": "High"}	stakeholder created	2025-09-07 18:18:49.916205+00
951f8bc5-fae4-4986-8ddf-562cc5b1e710	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	3136e9de-f135-4682-a2db-8632e619e0f6	\N	{"id": "3136e9de-f135-4682-a2db-8632e619e0f6", "name": "Certification & Compliance Officer", "raci": "Consulted", "email": null, "notes": "Ensures compliance with EASA/FAA standards for cockpit modernization.", "created_at": "2025-09-07T18:19:17.529909+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": ": Airworthiness & Certification", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:19:17.529909+00:00", "influence_level": "High"}	stakeholder created	2025-09-07 18:19:17.529909+00
bf2bbdcb-4f57-447f-9030-5437aa133598	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	26294eb1-5f9d-47af-b884-19c35a291c55	\N	{"id": "26294eb1-5f9d-47af-b884-19c35a291c55", "name": "Test Pilot", "raci": "Consulted", "email": null, "notes": "Provides operational feedback during mock-up and test flights.", "created_at": "2025-09-07T18:19:50.384924+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "Flight Operations", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:19:50.384924+00:00", "influence_level": "Medium"}	stakeholder created	2025-09-07 18:19:50.384924+00
45d8d390-c21f-4034-927d-7a51098b9f09	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	f1318628-b66d-4bfc-9dfe-46a3374cef86	\N	{"id": "f1318628-b66d-4bfc-9dfe-46a3374cef86", "name": "Quality Assurance Manager", "raci": null, "email": null, "notes": "Oversees testing protocols, risk assessments, and QA documentation.", "created_at": "2025-09-07T18:20:20.593917+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "Quality & Testing", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:20:20.593917+00:00", "influence_level": "Medium"}	stakeholder created	2025-09-07 18:20:20.593917+00
ca2fb1ad-7a0c-4f9d-936b-f74be9b1d5c6	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	0f91894a-93a2-4c10-b2fb-7f52e1161103	\N	{"id": "0f91894a-93a2-4c10-b2fb-7f52e1161103", "cause": "Limited supplier base and global semiconductor shortage.", "notes": null, "owner": "Procurement Manager", "title": "Avionics Hardware Delivery Delays", "impact": 4, "status": "Open", "category": null, "risk_code": "R-001", "created_at": "2025-09-07T18:23:09.278515+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 3, "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "risk_score": 12, "updated_at": "2025-09-07T18:23:09.278515+00:00", "consequence": "Project schedule slippage by 4–6 weeks.", "description": "Supplier lead-time issues may delay delivery of critical cockpit display units.", "last_updated": "2025-09-07", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-07", "mitigation_plan": ["Identify alternate vendors, expedite shipping, buffer stock."], "residual_impact": null, "contingency_plan": "Reschedule integration activities, allocate temporary test units.", "next_review_date": "2025-09-30", "response_strategy": "Mitigate", "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-07 18:23:09.278515+00
b7399704-6498-4a0a-a413-5ba918ca485f	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	b6f1c1fb-137b-4c82-875a-fc2a83815aaa	\N	{"id": "b6f1c1fb-137b-4c82-875a-fc2a83815aaa", "cause": "Design deviations from certified standards.", "notes": "Regulatory", "owner": "Certification & Compliance Officer", "title": "Certification Non-Compliance", "impact": 4, "status": "Open", "category": null, "risk_code": "R-002", "created_at": "2025-09-07T18:24:49.08579+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 4, "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "risk_score": 16, "updated_at": "2025-09-07T18:24:49.08579+00:00", "consequence": "Rework effort, certification delays, cost increase.", "description": "New cockpit systems may fail to meet EASA/FAA certification standards.", "last_updated": "2025-09-07", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-07", "mitigation_plan": ["Early compliance checks, certification workshops, frequent audits."], "residual_impact": null, "contingency_plan": "Allocate budget for redesign & documentation updates.", "next_review_date": "2025-10-01", "response_strategy": "Avoid", "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-07 18:24:49.08579+00
9db5623e-ed6a-4beb-b148-e199e6637b03	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	02d851c7-4d14-409a-8694-e52ac0386e35	\N	{"id": "02d851c7-4d14-409a-8694-e52ac0386e35", "attendees": ["26294eb1-5f9d-47af-b884-19c35a291c55", "67e2e881-ab7b-4840-a40d-f1349dabb340", "2a48457f-4228-4a33-9b45-446f935e0476"], "created_at": "2025-09-07T18:26:06.260949+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:26:06.260949+00:00", "meeting_date": "2025-09-01", "meeting_title": "Pilot Feedback on Cockpit Prototype", "summary_notes": "Test pilots provided initial feedback on the digital display mock-up. Key issues include brightness levels under sunlight, button placement ergonomics, and workload during emergency scenarios. Next steps: incorporate adjustments into prototype v2 and schedule another pilot session"}	discussion created	2025-09-07 18:26:06.260949+00
21ae9d8e-f2c2-4891-aa58-184bffa4f7b6	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	392789fc-8c5c-4af3-8c82-6f14e040f2f0	\N	{"id": "392789fc-8c5c-4af3-8c82-6f14e040f2f0", "attendees": ["f1318628-b66d-4bfc-9dfe-46a3374cef86", "2a48457f-4228-4a33-9b45-446f935e0476", "67e2e881-ab7b-4840-a40d-f1349dabb340", "3136e9de-f135-4682-a2db-8632e619e0f6", "26294eb1-5f9d-47af-b884-19c35a291c55"], "created_at": "2025-09-07T18:26:33.454991+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:26:33.454991+00:00", "meeting_date": "2025-07-30", "meeting_title": "Certification Strategy Alignment", "summary_notes": "Discussion on aligning modernization efforts with EASA and FAA requirements. The team debated certification pathways, documentation needs, and early engagement with regulators. Agreed action: organize a compliance workshop with Certification & Compliance Officer and external consultants"}	discussion created	2025-09-07 18:26:33.454991+00
3102fe6c-7ed6-4937-a6c6-e09c5954f351	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	462eecb1-fe01-4978-b98d-7279c9fac1f0	\N	{"id": "462eecb1-fe01-4978-b98d-7279c9fac1f0", "title": "Allocate budget/time buffer for re-work if compliance gaps are identified.", "status": "backlog", "owner_id": null, "priority": "high", "source_id": null, "created_at": "2025-09-07T18:29:21.416606+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:29:21.416606+00:00", "description": "compliance gaps are identified.", "source_type": "manual", "target_date": "2025-10-24", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-07 18:29:21.416606+00
0f1f57d9-209e-4224-912d-6aa0b4a69319	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:35:57.789508+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-07 18:35:57.789508+00
15468f35-b524-48fe-80d0-7351f6979886	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:35:57.789508+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:36:12.336507+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-07 18:36:12.336507+00
5a78b712-0820-4d2b-ac9c-ade58eaea5c7	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:36:12.336507+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:36:35.976604+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-07 18:36:35.976604+00
7b2c6692-3fce-4453-aba2-7e3ac573f03d	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:36:35.976604+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:21:14.46288+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:21:14.46288+00
d838c63b-4aaf-4e3f-847a-5c74a3c25f23	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:21:14.46288+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": "26294eb1-5f9d-47af-b884-19c35a291c55", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:38.554815+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:43:38.554815+00
83a8e38a-c217-4739-8d6a-b53626dfc61a	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": "26294eb1-5f9d-47af-b884-19c35a291c55", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:38.554815+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": "26294eb1-5f9d-47af-b884-19c35a291c55", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:39.260089+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:43:39.260089+00
9facc98e-d53c-47f2-9b9b-4bd2d448c0c7	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	1d9069ae-408e-4171-a9ec-b1b493b5137f	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:53.564826+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:43:53.564826+00
0b21bbca-2fc4-4c6d-8bcf-6eb395bdd9d9	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7b2bbde8-f735-4aad-925b-e47d9f1b6839	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-06", "owner_id": "26294eb1-5f9d-47af-b884-19c35a291c55", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:39.260089+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7b2bbde8-f735-4aad-925b-e47d9f1b6839", "title": "ystem Integration Testing Plan", "status": "todo", "due_date": "2025-12-01", "owner_id": "f1318628-b66d-4bfc-9dfe-46a3374cef86", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:44:35.240591+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:44:35.240591+00
558ed857-6748-4275-adb4-6037819310f5	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	1d9069ae-408e-4171-a9ec-b1b493b5137f	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:43:53.564826+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:44:06.991587+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:44:06.991587+00
682e809e-eca6-4289-81a3-5e2dc932ae21	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	1d9069ae-408e-4171-a9ec-b1b493b5137f	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:44:06.991587+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "1d9069ae-408e-4171-a9ec-b1b493b5137f", "title": "Supplier Evaluation & Component Procurement", "status": "todo", "due_date": "2025-12-01", "owner_id": "f1318628-b66d-4bfc-9dfe-46a3374cef86", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:44:14.968532+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:44:14.968532+00
5a986205-ed5c-4b06-95a7-e2d5ce6b1e82	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	0ffce15d-1782-482f-8a7b-e6487554f80f	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-07-30", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:45:00.458706+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:45:00.458706+00
17a56f3b-f157-4f7e-b2af-a0bc07dfdee8	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	0ffce15d-1782-482f-8a7b-e6487554f80f	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-07-30", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:45:00.458706+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-07-30", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:51:20.724816+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:51:20.724816+00
8cf4ed09-bb72-44d2-9d17-78c3bacc635b	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	92ae8c7f-7d96-4641-a68f-5cf13ad6984a	{"id": "92ae8c7f-7d96-4641-a68f-5cf13ad6984a", "title": "Final Integration & Flight Testing", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "92ae8c7f-7d96-4641-a68f-5cf13ad6984a", "title": "Final Integration & Flight Testing", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:51:47.918948+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:51:47.918948+00
07fcc58c-6d87-4e22-ae28-34156a6649ac	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	0ffce15d-1782-482f-8a7b-e6487554f80f	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-07-30", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:51:20.724816+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "0ffce15d-1782-482f-8a7b-e6487554f80f", "title": "Cockpit Mock-Up Testing", "status": "todo", "due_date": "2025-07-30", "owner_id": "26294eb1-5f9d-47af-b884-19c35a291c55", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:57:45.341992+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:57:45.341992+00
7487eb5b-c705-4db4-9f86-b7076914ae45	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	adf0d942-488a-4c35-8d64-08eaa79e8803	{"id": "adf0d942-488a-4c35-8d64-08eaa79e8803", "title": "Certification Compliance Review", "status": "todo", "due_date": "2025-12-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-07T18:12:35.800041+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "adf0d942-488a-4c35-8d64-08eaa79e8803", "title": "Certification Compliance Review", "status": "completed", "due_date": "2025-12-06", "owner_id": "2a48457f-4228-4a33-9b45-446f935e0476", "priority": "medium", "created_at": "2025-09-07T18:12:35.800041+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "636c6d59-2c07-4e27-a789-9dd4f9db93d1", "updated_at": "2025-09-08T15:58:37.954923+00:00", "description": null, "milestone_id": "23637ae1-94be-4671-bb77-c6363351156e", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 15:58:37.954923+00
c65389f5-536d-427c-a3d3-1f22ddcdcd9e	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	6f6e9b56-0eca-4dba-aa2f-e89fd431b708	\N	{"id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "name": "G1", "status": "planning", "due_date": "2025-12-07", "created_at": "2025-09-08T16:08:41.778413+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.778413+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-08 16:08:41.778413+00
731be9af-21df-4810-94a0-0f7bc0278665	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	3230a2f1-b8be-48d2-9582-a97ebee4ee13	\N	{"id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "name": "G2", "status": "planning", "due_date": "2025-12-07", "created_at": "2025-09-08T16:08:41.778413+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.778413+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-08 16:08:41.778413+00
5875b66b-f900-48e9-99e8-8f76dbc6f4c2	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	\N	{"id": "1620f025-f7f8-4dc4-ad10-c6f141f9aabe", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
f83393a4-8bbf-4fac-ad59-26f9bab9636f	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	35f2a626-9813-4c25-bb7c-a32af2fdd295	\N	{"id": "35f2a626-9813-4c25-bb7c-a32af2fdd295", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-02", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
5e30703c-4336-4a88-b367-eb3805d029f7	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	3e446909-6dbe-4652-aa71-67dc95545f22	\N	{"id": "3e446909-6dbe-4652-aa71-67dc95545f22", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
276dc646-557a-4b0b-b5e1-47b64f2ef93b	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	7031474f-5c9f-43ab-acab-db50d2e2f068	\N	{"id": "7031474f-5c9f-43ab-acab-db50d2e2f068", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
3e53c82e-a345-4c83-8890-475ae53c4274	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	4a67df02-3a16-4f9d-b627-d98c9c002a42	\N	{"id": "4a67df02-3a16-4f9d-b627-d98c9c002a42", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-11-03", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
d2a9a062-b890-40fa-b951-f1f6c2f32681	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	f3a36411-cf0f-45de-b73e-da75ea952966	\N	{"id": "f3a36411-cf0f-45de-b73e-da75ea952966", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
d8a67280-6902-4583-86d5-c731a8343a68	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	e44f7a2a-f99a-4433-bc28-f68d228391dc	\N	{"id": "e44f7a2a-f99a-4433-bc28-f68d228391dc", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
d24f5cd3-ddf3-482a-aad0-944a3f3a80d5	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	1fe41f14-7657-4598-b3b5-80197762b217	\N	{"id": "1fe41f14-7657-4598-b3b5-80197762b217", "title": "Capture Minutes & Decisions from Kickoff", "status": "todo", "due_date": "2025-12-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-08 16:08:41.919612+00
e7767849-83db-420a-80f2-65aaa028fd4b	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	{"id": "1620f025-f7f8-4dc4-ad10-c6f141f9aabe", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "1620f025-f7f8-4dc4-ad10-c6f141f9aabe", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "in_progress", "due_date": "2025-11-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:08.869607+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:11:08.869607+00
e63367c2-0d8f-4daa-97f8-20fa2985492a	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	db3f7a2c-4d63-475d-b21d-ca7f1381bdc1	\N	{"id": "db3f7a2c-4d63-475d-b21d-ca7f1381bdc1", "title": "Avionics Integration & Testing", "status": "backlog", "owner_id": null, "priority": "medium", "source_id": null, "created_at": "2025-09-08T16:27:15.864755+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:27:15.864755+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"Avionics Integration & Testing\\"\\nWhen: Q1 2024\\nWho: Kiran", "source_type": "manual", "target_date": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-08 16:27:15.864755+00
0aeefff4-4e14-4842-a61a-e64327102ec5	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	3e446909-6dbe-4652-aa71-67dc95545f22	{"id": "3e446909-6dbe-4652-aa71-67dc95545f22", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "3e446909-6dbe-4652-aa71-67dc95545f22", "title": "Create Risk Register & Initial Risk Assessment", "status": "in_progress", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:18.574992+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:11:18.574992+00
019a95ed-7294-4b56-939f-f83348f227cf	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	4a67df02-3a16-4f9d-b627-d98c9c002a42	{"id": "4a67df02-3a16-4f9d-b627-d98c9c002a42", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-11-03", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "4a67df02-3a16-4f9d-b627-d98c9c002a42", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "blocked", "due_date": "2025-11-03", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:26.638946+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:11:26.638946+00
7d0cc2ed-3558-4d5f-842d-28e88e90e8b1	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	f3a36411-cf0f-45de-b73e-da75ea952966	{"id": "f3a36411-cf0f-45de-b73e-da75ea952966", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "f3a36411-cf0f-45de-b73e-da75ea952966", "title": "Define WBS & High-Level Timeline", "status": "completed", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:31.789484+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:11:31.789484+00
01531694-69f5-43ae-a08c-0c5171899767	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	8958c7c6-5f79-4b29-a809-c7a69ef5ef97	\N	{"id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "name": "Rahul", "raci": "Accountable", "email": null, "notes": null, "created_at": "2025-09-08T16:12:38.521678+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "ABC", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:12:38.521678+00:00", "influence_level": "High"}	stakeholder created	2025-09-08 16:12:38.521678+00
05110dc8-84ec-4af1-8916-94687a5137a4	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac	\N	{"id": "cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac", "name": "Sneha", "raci": "Informed", "email": null, "notes": null, "created_at": "2025-09-08T16:13:02.232289+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "DPA", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:13:02.232289+00:00", "influence_level": "Medium"}	stakeholder created	2025-09-08 16:13:02.232289+00
b8a32761-9033-4356-ba89-8ea833c507b4	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	156c9b52-aa37-465f-9984-01d0358e70d3	\N	{"id": "156c9b52-aa37-465f-9984-01d0358e70d3", "name": "Kiran", "raci": "Informed", "email": null, "notes": null, "created_at": "2025-09-08T16:13:19.034478+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "DPC", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:13:19.034478+00:00", "influence_level": "Critical"}	stakeholder created	2025-09-08 16:13:19.034478+00
a43098bf-d0b8-4a48-985a-f4966feb1dc9	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	35f2a626-9813-4c25-bb7c-a32af2fdd295	{"id": "35f2a626-9813-4c25-bb7c-a32af2fdd295", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-02", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "35f2a626-9813-4c25-bb7c-a32af2fdd295", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-02", "owner_id": "156c9b52-aa37-465f-9984-01d0358e70d3", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:13:31.565999+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:13:31.565999+00
a06e778d-ef7a-47b0-9e60-dcdf8906fd4e	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	3e446909-6dbe-4652-aa71-67dc95545f22	{"id": "3e446909-6dbe-4652-aa71-67dc95545f22", "title": "Create Risk Register & Initial Risk Assessment", "status": "in_progress", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:18.574992+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "3e446909-6dbe-4652-aa71-67dc95545f22", "title": "Create Risk Register & Initial Risk Assessment", "status": "in_progress", "due_date": "2025-11-04", "owner_id": "156c9b52-aa37-465f-9984-01d0358e70d3", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:13:41.330048+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:13:41.330048+00
e99721c1-367a-44ea-95d8-473bbd16ebc1	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	{"id": "1620f025-f7f8-4dc4-ad10-c6f141f9aabe", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "in_progress", "due_date": "2025-11-01", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:08.869607+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "1620f025-f7f8-4dc4-ad10-c6f141f9aabe", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "in_progress", "due_date": "2025-11-01", "owner_id": "cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:13:48.046193+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:13:48.046193+00
25f8ba35-b65b-4e36-be32-ca37947e62da	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7031474f-5c9f-43ab-acab-db50d2e2f068	{"id": "7031474f-5c9f-43ab-acab-db50d2e2f068", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:08:41.919612+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7031474f-5c9f-43ab-acab-db50d2e2f068", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-07-31", "owner_id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:14:08.312391+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-08 16:14:08.312391+00
25103af3-194f-415e-b4fd-0faee7efc233	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	053881d9-2cc9-4656-87f5-b050e6b7b818	\N	{"id": "053881d9-2cc9-4656-87f5-b050e6b7b818", "cause": null, "notes": null, "owner": "Dev Lead", "title": "Auth loop persists after fix", "impact": 3, "status": "Open", "category": "Technical", "risk_code": "R1", "created_at": "2025-09-08T16:17:33.030752+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 4, "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "risk_score": 12, "updated_at": "2025-09-08T16:17:33.030752+00:00", "consequence": null, "description": null, "last_updated": "2025-09-08", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-08", "mitigation_plan": ["Add fallback handling"], "residual_impact": null, "contingency_plan": null, "next_review_date": null, "response_strategy": "Avoid", "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-08 16:17:33.030752+00
8a5d6d72-d41c-4e02-9f0a-f8966c547580	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	updated	risk	053881d9-2cc9-4656-87f5-b050e6b7b818	{"id": "053881d9-2cc9-4656-87f5-b050e6b7b818", "cause": null, "notes": null, "owner": "Dev Lead", "title": "Auth loop persists after fix", "impact": 3, "status": "Open", "category": "Technical", "risk_code": "R1", "created_at": "2025-09-08T16:17:33.030752+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 4, "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "risk_score": 12, "updated_at": "2025-09-08T16:17:33.030752+00:00", "consequence": null, "description": null, "last_updated": "2025-09-08", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-08", "mitigation_plan": ["Add fallback handling"], "residual_impact": null, "contingency_plan": null, "next_review_date": null, "response_strategy": "Avoid", "residual_likelihood": null, "residual_risk_score": null}	{"id": "053881d9-2cc9-4656-87f5-b050e6b7b818", "cause": null, "notes": null, "owner": "Dev Lead", "title": "Auth loop persists after fix", "impact": 3, "status": "Closed", "category": "Technical", "risk_code": "R1", "created_at": "2025-09-08T16:17:33.030752+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 4, "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "risk_score": 12, "updated_at": "2025-09-08T16:18:09.319207+00:00", "consequence": null, "description": null, "last_updated": "2025-09-08", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-08", "mitigation_plan": ["Add fallback handling"], "residual_impact": null, "contingency_plan": null, "next_review_date": null, "response_strategy": "Avoid", "residual_likelihood": null, "residual_risk_score": null}	risk updated	2025-09-08 16:18:09.319207+00
fb163e12-95e8-42f8-bf20-0a90ecb2dbb1	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	\N	{"id": "4a70f6b7-a0af-4502-b3d4-908ead3d0edd", "attendees": ["156c9b52-aa37-465f-9984-01d0358e70d3", "cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac"], "created_at": "2025-09-08T16:19:08.639951+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:19:08.639951+00:00", "meeting_date": "2025-09-16", "meeting_title": "Set up monitoring- P Stackholder", "summary_notes": ""}	discussion created	2025-09-08 16:19:08.639951+00
682c477a-f485-4d3d-bf1e-2ad4d4f0c872	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	4e02f0d2-6b75-4719-8eec-0d1e87743996	\N	{"id": "4e02f0d2-6b75-4719-8eec-0d1e87743996", "title": "Do we need to extend dashboard analytics (e.g., trendline view)?", "status": "backlog", "owner_id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "priority": "medium", "source_id": null, "created_at": "2025-09-08T16:20:06.792009+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:20:06.792009+00:00", "description": "Converted from action item - Discussion: Set up monitoring- P Stackholder", "source_type": "action_item", "target_date": "2025-09-23", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-08 16:20:06.792009+00
8d7f8991-cc37-4e9e-abbd-1f2082f36e66	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	2e460757-15ca-4cde-8d91-b75a9c057775	\N	{"id": "2e460757-15ca-4cde-8d91-b75a9c057775", "title": "Should we prioritize fixing login/auth or analytics first?", "status": "backlog", "owner_id": "cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac", "priority": "medium", "source_id": null, "created_at": "2025-09-08T16:20:07.206846+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:20:07.206846+00:00", "description": "Converted from action item - Discussion: Set up monitoring- P Stackholder", "source_type": "action_item", "target_date": "2025-09-23", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-08 16:20:07.206846+00
a07636dc-f06b-49c9-843b-c448cb18c749	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	retrospectives	created	retrospective	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	\N	{"id": "40ac618a-7a6f-46b4-ad39-dcff102a7e7f", "status": "active", "framework": "kiss", "created_at": "2025-09-08T16:24:44.900132+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:24:44.900132+00:00", "iteration_id": "Q1 2024", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	retrospective created	2025-09-08 16:24:44.900132+00
f498c631-1315-41cf-accf-2b0932c8f0db	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	f3a36411-cf0f-45de-b73e-da75ea952966	{"id": "f3a36411-cf0f-45de-b73e-da75ea952966", "title": "Define WBS & High-Level Timeline", "status": "completed", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:31.789484+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "f3a36411-cf0f-45de-b73e-da75ea952966", "title": "Define WBS & High-Level Timeline", "status": "completed", "due_date": "2025-11-05", "owner_id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-09T06:21:07.397153+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-09 06:21:07.397153+00
a3caf590-3c64-4591-8169-1de80f1cb842	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	7031474f-5c9f-43ab-acab-db50d2e2f068	{"id": "7031474f-5c9f-43ab-acab-db50d2e2f068", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-07-31", "owner_id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:14:08.312391+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "7031474f-5c9f-43ab-acab-db50d2e2f068", "title": "Estimate Effort & Set Initial Backlog", "status": "in_progress", "due_date": "2025-07-31", "owner_id": "8958c7c6-5f79-4b29-a809-c7a69ef5ef97", "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-09T08:28:49.586803+00:00", "description": null, "milestone_id": "6f6e9b56-0eca-4dba-aa2f-e89fd431b708", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-09 08:28:49.586803+00
7c7fb739-0c93-4e63-bafe-d16767cabc3c	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	4a67df02-3a16-4f9d-b627-d98c9c002a42	{"id": "4a67df02-3a16-4f9d-b627-d98c9c002a42", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "blocked", "due_date": "2025-11-03", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-08T16:11:26.638946+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "4a67df02-3a16-4f9d-b627-d98c9c002a42", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "completed", "due_date": "2025-11-03", "owner_id": null, "priority": "medium", "created_at": "2025-09-08T16:08:41.919612+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "f4554466-37e2-4f52-afb7-174eafd9ac0f", "updated_at": "2025-09-09T08:29:00.817436+00:00", "description": null, "milestone_id": "3230a2f1-b8be-48d2-9582-a97ebee4ee13", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-09 08:29:00.817436+00
d87204d8-0f71-4360-b4c4-d75161ac5f5d	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	2371132c-5f0e-4168-bfd5-5190cf8d0b99	\N	{"id": "2371132c-5f0e-4168-bfd5-5190cf8d0b99", "name": "Milestone 1", "status": "planning", "due_date": "2025-12-09", "created_at": "2025-09-10T12:50:45.839899+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.839899+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-10 12:50:45.839899+00
801ec872-dd4e-4f7b-81a0-2386e4c7e4fb	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	b5578fb4-4398-433e-accc-186bbaaf9807	\N	{"id": "b5578fb4-4398-433e-accc-186bbaaf9807", "name": "M2", "status": "planning", "due_date": "2025-10-21", "created_at": "2025-09-10T12:50:45.839899+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.839899+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-10 12:50:45.839899+00
ca355b85-6b70-474e-b82e-2039bea3d41d	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	70cabb31-a83f-4d36-919b-6f42a4a28652	\N	{"id": "70cabb31-a83f-4d36-919b-6f42a4a28652", "name": "M3", "status": "planning", "due_date": "2025-09-23", "created_at": "2025-09-10T12:50:45.839899+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.839899+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-10 12:50:45.839899+00
cd639d14-a374-4854-9791-7495fcd9ca5b	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	e83c6f30-f053-4947-a570-f80604dc3ff1	\N	{"id": "e83c6f30-f053-4947-a570-f80604dc3ff1", "title": "Define Acceptance Criteria", "status": "todo", "due_date": "2025-12-16", "owner_id": null, "priority": "medium", "created_at": "2025-09-10T12:50:45.964095+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.964095+00:00", "description": null, "milestone_id": "2371132c-5f0e-4168-bfd5-5190cf8d0b99", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-10 12:50:45.964095+00
133e255b-82a8-43fd-b8d3-44c35e3342a0	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	3db89f35-2f48-475e-892a-79759b593d4b	\N	{"id": "3db89f35-2f48-475e-892a-79759b593d4b", "title": "Prepare Test Data & Environments", "status": "todo", "due_date": "2025-09-24", "owner_id": null, "priority": "medium", "created_at": "2025-09-10T12:50:45.964095+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.964095+00:00", "description": null, "milestone_id": "2371132c-5f0e-4168-bfd5-5190cf8d0b99", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-10 12:50:45.964095+00
13db3539-c8ed-46ff-b657-7e6cb3852a6d	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	e1938059-c60c-4ef7-a40b-b09c08b2540c	\N	{"id": "e1938059-c60c-4ef7-a40b-b09c08b2540c", "title": "Plan Defect Triage & Sign-off Process", "status": "todo", "due_date": "2025-09-22", "owner_id": null, "priority": "medium", "created_at": "2025-09-10T12:50:45.964095+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.964095+00:00", "description": null, "milestone_id": "b5578fb4-4398-433e-accc-186bbaaf9807", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-10 12:50:45.964095+00
432fd5c9-7a1a-4eca-8f7b-97fb3bfaa480	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	1915c642-8c62-4107-b063-f62c671a0fa8	\N	{"id": "1915c642-8c62-4107-b063-f62c671a0fa8", "title": "Schedule UAT Window", "status": "todo", "due_date": "2025-09-25", "owner_id": null, "priority": "medium", "created_at": "2025-09-10T12:50:45.964095+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.964095+00:00", "description": null, "milestone_id": "b5578fb4-4398-433e-accc-186bbaaf9807", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-10 12:50:45.964095+00
c7158d83-ed98-49fd-bd97-43e4b3cb22cc	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	e500e976-35bd-439d-8a89-b43c50aa78f0	\N	{"id": "e500e976-35bd-439d-8a89-b43c50aa78f0", "title": "Draft Test Cases & Assign Owners", "status": "todo", "due_date": "2025-12-18", "owner_id": null, "priority": "medium", "created_at": "2025-09-10T12:50:45.964095+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "7f3ec8f9-3896-4cf3-9123-2ca3bb418418", "updated_at": "2025-09-10T12:50:45.964095+00:00", "description": null, "milestone_id": "70cabb31-a83f-4d36-919b-6f42a4a28652", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-10 12:50:45.964095+00
622b979b-c18e-4c29-846e-7341c2dd4e68	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	352bc7fa-49b1-442a-84da-7b0535421418	\N	{"id": "352bc7fa-49b1-442a-84da-7b0535421418", "name": "G1", "status": "planning", "due_date": "2025-12-10", "created_at": "2025-09-11T06:25:32.836413+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:32.836413+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-11 06:25:32.836413+00
31bfce5f-cf21-423b-ba8f-9c68b336f3df	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	692b3fad-d190-485f-8f2f-e5bc57bd69b8	\N	{"id": "692b3fad-d190-485f-8f2f-e5bc57bd69b8", "name": "G2", "status": "planning", "due_date": "2025-12-10", "created_at": "2025-09-11T06:25:32.836413+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:32.836413+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-11 06:25:32.836413+00
6282f35e-94a1-48d5-a7eb-4f2eb84d53e9	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	292a2d22-ef86-41b2-b6e7-8b54c6be1a77	\N	{"id": "292a2d22-ef86-41b2-b6e7-8b54c6be1a77", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
6d9065c3-c757-4d0f-a6a9-9bb86bba2cdb	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	75bbef7c-7ab7-477e-835a-2fe96ff6b675	\N	{"id": "75bbef7c-7ab7-477e-835a-2fe96ff6b675", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
d26d4dae-1ea7-43fa-9cf3-016f6be3d526	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	63fb8045-fbad-47d6-88a3-8dddb6e09466	\N	{"id": "63fb8045-fbad-47d6-88a3-8dddb6e09466", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
eaa4218a-eb3b-4425-8db0-df4c03506f06	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	bb527d75-82a9-4eaa-9acc-4a7ff501c920	\N	{"id": "bb527d75-82a9-4eaa-9acc-4a7ff501c920", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
8c77512a-fce6-4876-97a0-6b7221dbec90	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	223a9df7-4864-41fa-b9b6-be5615187867	\N	{"id": "223a9df7-4864-41fa-b9b6-be5615187867", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
5de0528a-7e33-4d66-8bb4-e1cd67d94a81	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	\N	{"id": "cea2d2cc-3ccc-4fe3-934f-ec428a6b8995", "title": "Capture Minutes & Decisions from Kickoff", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
ef98a883-45a4-4dc3-bb45-9a8901f1be53	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	d25a0ec6-dc2f-4165-bff2-0f92310d7634	\N	{"id": "d25a0ec6-dc2f-4165-bff2-0f92310d7634", "title": "My task", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "692b3fad-d190-485f-8f2f-e5bc57bd69b8", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
b657bbd7-37b5-4087-af25-ecab0b91b6e9	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	6bbd0592-0aa1-45c3-b272-5c634d74ac93	\N	{"id": "6bbd0592-0aa1-45c3-b272-5c634d74ac93", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-10-17", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "692b3fad-d190-485f-8f2f-e5bc57bd69b8", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
4ed0117e-cf9b-4705-ba64-557b1ff105e1	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	298be80e-7b9d-4b89-8e96-7956690014b3	\N	{"id": "298be80e-7b9d-4b89-8e96-7956690014b3", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "692b3fad-d190-485f-8f2f-e5bc57bd69b8", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:25:33.040778+00
4ddf9b68-7f95-4cf9-a121-90c1aa66c2c6	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	\N	{"id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "name": "Anita", "raci": "Accountable", "email": null, "notes": null, "created_at": "2025-09-11T06:27:07.68381+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "DC", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:27:07.68381+00:00", "influence_level": "Critical"}	stakeholder created	2025-09-11 06:27:07.68381+00
fb2ffe27-0ea8-437d-8ca9-826bbacd248b	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	292a2d22-ef86-41b2-b6e7-8b54c6be1a77	{"id": "292a2d22-ef86-41b2-b6e7-8b54c6be1a77", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-06", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "292a2d22-ef86-41b2-b6e7-8b54c6be1a77", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-09-10", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:27:37.800316+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-11 06:27:37.800316+00
61cec7ab-b0aa-49f8-ba29-f89396300d8d	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	75bbef7c-7ab7-477e-835a-2fe96ff6b675	{"id": "75bbef7c-7ab7-477e-835a-2fe96ff6b675", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "75bbef7c-7ab7-477e-835a-2fe96ff6b675", "title": "Identify Stakeholders & Create RACI", "status": "in_progress", "due_date": "2025-11-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:30:59.584871+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-11 06:30:59.584871+00
a1a5b8c4-3556-4735-9e0c-c1b0f7c01b30	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	bb527d75-82a9-4eaa-9acc-4a7ff501c920	{"id": "bb527d75-82a9-4eaa-9acc-4a7ff501c920", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "bb527d75-82a9-4eaa-9acc-4a7ff501c920", "title": "Estimate Effort & Set Initial Backlog", "status": "blocked", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:31:04.38751+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-11 06:31:04.38751+00
baa27b81-34d8-441e-bc36-fbba2c97faaa	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	{"id": "cea2d2cc-3ccc-4fe3-934f-ec428a6b8995", "title": "Capture Minutes & Decisions from Kickoff", "status": "todo", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:25:33.040778+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "cea2d2cc-3ccc-4fe3-934f-ec428a6b8995", "title": "Capture Minutes & Decisions from Kickoff", "status": "completed", "due_date": "2025-12-10", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:31:08.125261+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-11 06:31:08.125261+00
825c1f89-d3c0-403d-9f0d-c80cb4a5237e	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	75bbef7c-7ab7-477e-835a-2fe96ff6b675	{"id": "75bbef7c-7ab7-477e-835a-2fe96ff6b675", "title": "Identify Stakeholders & Create RACI", "status": "in_progress", "due_date": "2025-11-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:30:59.584871+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "75bbef7c-7ab7-477e-835a-2fe96ff6b675", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-07", "owner_id": null, "priority": "medium", "created_at": "2025-09-11T06:25:33.040778+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:31:15.083058+00:00", "description": null, "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-11 06:31:15.083058+00
72c12d51-ebda-4be4-8f4c-c69cdb3226b5	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	f8e2026e-17fc-45e7-aeea-f4e973f5842a	\N	{"id": "f8e2026e-17fc-45e7-aeea-f4e973f5842a", "cause": null, "notes": null, "owner": null, "title": "Devlopment Dealy", "impact": 3, "status": "Open", "category": "Technical", "risk_code": "Roo1", "created_at": "2025-09-11T06:32:41.334589+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 2, "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "risk_score": 6, "updated_at": "2025-09-11T06:32:41.334589+00:00", "consequence": null, "description": null, "last_updated": "2025-09-11", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-11", "mitigation_plan": null, "residual_impact": null, "contingency_plan": null, "next_review_date": "2025-09-17", "response_strategy": "Transfer", "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-11 06:32:41.334589+00
a8bffa82-dc8c-4090-b4de-956170eb9d2f	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	\N	{"id": "35e08024-6cc7-4a0a-8ed7-20ffd361b6c7", "attendees": ["9282cd32-6d1a-4999-89e4-a2dc4a36c1a4"], "created_at": "2025-09-11T06:33:45.880935+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:33:45.880935+00:00", "meeting_date": "2025-09-11", "meeting_title": "Stackholder Discussion", "summary_notes": ""}	discussion created	2025-09-11 06:33:45.880935+00
aa4a532e-abb4-4bf9-b224-0208860a45ce	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	40e38cd4-6e6a-4344-b172-f0e9f770af7d	\N	{"id": "40e38cd4-6e6a-4344-b172-f0e9f770af7d", "title": "Find  another developer", "status": "backlog", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "source_id": null, "created_at": "2025-09-11T06:35:00.862497+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:35:00.862497+00:00", "description": "Converted from action item - Discussion: Stackholder Discussion", "source_type": "action_item", "target_date": "2025-09-24", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-11 06:35:00.862497+00
a02db5d1-ba86-4e2e-9ba7-f2aba4e901e8	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	f1349815-7d18-4c35-a63e-a42fc361d518	\N	{"id": "f1349815-7d18-4c35-a63e-a42fc361d518", "title": "Plan A", "status": "backlog", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "source_id": null, "created_at": "2025-09-11T06:35:05.532312+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:35:05.532312+00:00", "description": "Converted from action item - Discussion: Stackholder Discussion", "source_type": "action_item", "target_date": "2025-09-17", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-11 06:35:05.532312+00
7b957db7-4a8b-458d-89c2-66dad3468833	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	3f72fae7-fa19-450b-8255-15543a466485	\N	{"id": "3f72fae7-fa19-450b-8255-15543a466485", "title": "Find  another developer", "status": "todo", "due_date": "2025-09-24", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "created_at": "2025-09-11T06:35:36.19677+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:35:36.19677+00:00", "description": "Converted from action item - Discussion: Stackholder Discussion", "milestone_id": "352bc7fa-49b1-442a-84da-7b0535421418", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-11 06:35:36.19677+00
9d44d7b9-6111-4ff6-abb7-3ee20b36ee08	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	updated	backlog_item	40e38cd4-6e6a-4344-b172-f0e9f770af7d	{"id": "40e38cd4-6e6a-4344-b172-f0e9f770af7d", "title": "Find  another developer", "status": "backlog", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "source_id": null, "created_at": "2025-09-11T06:35:00.862497+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:35:00.862497+00:00", "description": "Converted from action item - Discussion: Stackholder Discussion", "source_type": "action_item", "target_date": "2025-09-24", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "40e38cd4-6e6a-4344-b172-f0e9f770af7d", "title": "Find  another developer", "status": "done", "owner_id": "9282cd32-6d1a-4999-89e4-a2dc4a36c1a4", "priority": "medium", "source_id": null, "created_at": "2025-09-11T06:35:00.862497+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:35:36.285079+00:00", "description": "Converted from action item - Discussion: Stackholder Discussion", "source_type": "action_item", "target_date": "2025-09-24", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item updated	2025-09-11 06:35:36.285079+00
21961e52-6a7f-4da5-a6a7-8e8b1d0690c2	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	retrospectives	created	retrospective	4d93ac22-8886-4197-8485-c07c81b13a84	\N	{"id": "4d93ac22-8886-4197-8485-c07c81b13a84", "status": "active", "framework": "4ls", "created_at": "2025-09-11T06:39:30.030946+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:39:30.030946+00:00", "iteration_id": "Q1-it1", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	retrospective created	2025-09-11 06:39:30.030946+00
63a496a5-254f-47e1-9b5a-a7d1320868c8	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	7b24906f-62c1-4600-9df6-77e3a194747f	\N	{"id": "7b24906f-62c1-4600-9df6-77e3a194747f", "title": "I like eating", "status": "backlog", "owner_id": null, "priority": "medium", "source_id": null, "created_at": "2025-09-11T06:40:39.047346+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c45fc909-075e-4c68-8471-14e78f438149", "updated_at": "2025-09-11T06:40:39.047346+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"I like eating\\"\\nWhen: Sprint 1\\nWho: Anita", "source_type": "manual", "target_date": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-11 06:40:39.047346+00
f52d03d4-00d3-49bb-8e3a-8a0939ea1419	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	ba2c25e4-d361-4260-8df6-ff7b419350b4	\N	{"id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "name": "G1", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T05:20:00.302949+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.302949+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 05:20:00.302949+00
0aaefdc9-0d79-4b84-8705-1029b910f57e	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	62f55c4e-312a-488e-bc21-06968809d276	\N	{"id": "62f55c4e-312a-488e-bc21-06968809d276", "name": "G2", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T05:20:00.302949+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.302949+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 05:20:00.302949+00
eba5c777-3fa6-4751-a24b-d02f09b8ed6e	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	2c4cde6c-f3df-4d15-bc4f-4b962306fd7f	\N	{"id": "2c4cde6c-f3df-4d15-bc4f-4b962306fd7f", "name": "G3", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T05:20:00.302949+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.302949+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 05:20:00.302949+00
8e6623d1-2766-4a79-bf51-7d406d1ee2fe	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	\N	{"id": "fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
cbcde81e-8521-4a46-acce-a922769259c1	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	abc19f9a-c627-43cb-bced-1b80d61f2457	\N	{"id": "abc19f9a-c627-43cb-bced-1b80d61f2457", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
8d8f9463-c864-4091-bb79-551342657427	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	6e8213b3-39a2-4da6-ad16-40e4dd875722	\N	{"id": "6e8213b3-39a2-4da6-ad16-40e4dd875722", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
75014d98-93aa-48e2-97b9-0c646b943d29	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	9d0c44cd-2183-43b2-8342-a52c1f70dfa9	\N	{"id": "9d0c44cd-2183-43b2-8342-a52c1f70dfa9", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
c2d6f2ca-2db0-42a6-8446-46daa5f199e5	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	a539e533-8453-482b-8567-eb0302e74118	\N	{"id": "a539e533-8453-482b-8567-eb0302e74118", "title": "Capture Minutes & Decisions from Kickoff", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "62f55c4e-312a-488e-bc21-06968809d276", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
7d8fd97a-3178-4ddf-ae40-5ff4af8a6f5b	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	8aa42517-21aa-4b96-8a96-6ed23bc56856	\N	{"id": "8aa42517-21aa-4b96-8a96-6ed23bc56856", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-12-09", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "62f55c4e-312a-488e-bc21-06968809d276", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
53889eba-99c5-4aaf-af2e-c49fb8934101	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	2e13d54a-b5c3-4317-add0-ab4a7663b379	\N	{"id": "2e13d54a-b5c3-4317-add0-ab4a7663b379", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "2c4cde6c-f3df-4d15-bc4f-4b962306fd7f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
af2f44b1-68ba-4b7d-92d3-d12860f5832c	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	f539a1e8-0205-4bb0-af97-33cfcec993de	\N	{"id": "f539a1e8-0205-4bb0-af97-33cfcec993de", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "2c4cde6c-f3df-4d15-bc4f-4b962306fd7f", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:20:00.532764+00
5b63486d-2b3d-4946-8f3b-714b32ceeb0f	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	{"id": "fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "in_progress", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:44.449455+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 05:20:44.449455+00
3c409197-55b4-4319-b56f-dbbfef425567	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	6e8213b3-39a2-4da6-ad16-40e4dd875722	{"id": "6e8213b3-39a2-4da6-ad16-40e4dd875722", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "6e8213b3-39a2-4da6-ad16-40e4dd875722", "title": "Define WBS & High-Level Timeline", "status": "blocked", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:48.43948+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 05:20:48.43948+00
033fe2ea-75f7-4ed8-aa0d-253671aa0838	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	9d0c44cd-2183-43b2-8342-a52c1f70dfa9	{"id": "9d0c44cd-2183-43b2-8342-a52c1f70dfa9", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:00.532764+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "9d0c44cd-2183-43b2-8342-a52c1f70dfa9", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "completed", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T05:20:00.532764+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:20:52.038263+00:00", "description": null, "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 05:20:52.038263+00
13f6aa69-5b42-462d-bd1d-af34bf2e431d	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	retrospectives	created	retrospective	7be3d165-e2db-40fc-90cf-0afc21f54bf5	\N	{"id": "7be3d165-e2db-40fc-90cf-0afc21f54bf5", "status": "active", "framework": "4ls", "created_at": "2025-09-12T05:25:29.860009+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:25:29.860009+00:00", "iteration_id": "Q1-I1", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	retrospective created	2025-09-12 05:25:29.860009+00
278b4288-b653-4983-ba6e-f6291e14f6d6	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	49be048e-26a3-4c18-88fe-66952b76964a	\N	{"id": "49be048e-26a3-4c18-88fe-66952b76964a", "attendees": [], "created_at": "2025-09-12T05:26:15.685697+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:26:15.685697+00:00", "meeting_date": "2025-09-10", "meeting_title": "SM", "summary_notes": ""}	discussion created	2025-09-12 05:26:15.685697+00
2959124d-bd28-4c8a-9e51-8e3f08041ca3	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	28a52e60-b35a-474f-a038-fb71d3ab8b23	\N	{"id": "28a52e60-b35a-474f-a038-fb71d3ab8b23", "name": "Mrityunjay", "raci": "Accountable", "email": null, "notes": null, "created_at": "2025-09-12T05:26:37.833828+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": null, "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:26:37.833828+00:00", "influence_level": "Critical"}	stakeholder created	2025-09-12 05:26:37.833828+00
cc018596-4bb2-4fe6-b743-ca9b342278dc	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	fd7957f2-beb5-42fb-b7c5-2574cb089455	\N	{"id": "fd7957f2-beb5-42fb-b7c5-2574cb089455", "title": "Action1", "status": "backlog", "owner_id": "28a52e60-b35a-474f-a038-fb71d3ab8b23", "priority": "medium", "source_id": null, "created_at": "2025-09-12T05:27:05.224396+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:27:05.224396+00:00", "description": "Converted from action item - Discussion: SM", "source_type": "action_item", "target_date": "2025-09-25", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-12 05:27:05.224396+00
2a73ffd4-6866-4102-a0c1-fe0b59f0de34	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	5c6675ee-b22e-498a-856f-0f06234b0daa	\N	{"id": "5c6675ee-b22e-498a-856f-0f06234b0daa", "title": "Action1", "status": "todo", "due_date": "2025-09-25", "owner_id": "28a52e60-b35a-474f-a038-fb71d3ab8b23", "priority": "medium", "created_at": "2025-09-12T05:28:29.277069+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:28:29.277069+00:00", "description": "Converted from action item - Discussion: SM", "milestone_id": "ba2c25e4-d361-4260-8df6-ff7b419350b4", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 05:28:29.277069+00
d1b1b37c-6681-4407-b966-78afd94f3545	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	updated	backlog_item	fd7957f2-beb5-42fb-b7c5-2574cb089455	{"id": "fd7957f2-beb5-42fb-b7c5-2574cb089455", "title": "Action1", "status": "backlog", "owner_id": "28a52e60-b35a-474f-a038-fb71d3ab8b23", "priority": "medium", "source_id": null, "created_at": "2025-09-12T05:27:05.224396+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:27:05.224396+00:00", "description": "Converted from action item - Discussion: SM", "source_type": "action_item", "target_date": "2025-09-25", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "fd7957f2-beb5-42fb-b7c5-2574cb089455", "title": "Action1", "status": "done", "owner_id": "28a52e60-b35a-474f-a038-fb71d3ab8b23", "priority": "medium", "source_id": null, "created_at": "2025-09-12T05:27:05.224396+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2", "updated_at": "2025-09-12T05:28:29.387442+00:00", "description": "Converted from action item - Discussion: SM", "source_type": "action_item", "target_date": "2025-09-25", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item updated	2025-09-12 05:28:29.387442+00
6afd2e3e-1444-49e9-a158-006b65ee41a4	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	6d244fcc-88d0-41be-b702-03534bea28c0	\N	{"id": "6d244fcc-88d0-41be-b702-03534bea28c0", "name": "G1", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T06:20:09.758338+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.758338+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 06:20:09.758338+00
fd722afb-e6ed-4bac-bf79-2022d4864dcc	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	\N	{"id": "4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a", "name": "G2", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T06:20:09.758338+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.758338+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 06:20:09.758338+00
4c3a021a-9336-4f5f-a029-af26f98d7f77	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	ddaf31b2-4187-48b7-948d-9483efa03596	\N	{"id": "ddaf31b2-4187-48b7-948d-9483efa03596", "title": "Draft Project Charter", "status": "todo", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
5aa17c07-ef33-4840-b795-cdcf7c19b9be	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	526b0030-904f-4811-99e2-ff280bb6a22a	\N	{"id": "526b0030-904f-4811-99e2-ff280bb6a22a", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-11-18", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
3309b2ec-7fb0-473c-90c7-07b9e9910368	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	f299b868-bfa1-4501-9cdb-4c0e18fdb630	\N	{"id": "f299b868-bfa1-4501-9cdb-4c0e18fdb630", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
1c715f6d-a3af-4538-a66a-6e95c2046f15	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	\N	{"id": "a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
6e85b35c-1143-4e7d-8407-51c8d17bda2a	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	59f2430a-aff2-455d-92d9-5d522c676e28	\N	{"id": "59f2430a-aff2-455d-92d9-5d522c676e28", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
65f20ff2-f9f2-4747-8949-e02ef82f006a	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	c7a2e41f-cc02-4e81-834a-9de5f3e02747	\N	{"id": "c7a2e41f-cc02-4e81-834a-9de5f3e02747", "title": "Capture Minutes & Decisions from Kickoff", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
1433d564-026c-4e7a-b95f-82e5a9177330	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	5cb188d1-ab20-4473-bdd8-4a6111960ddd	\N	{"id": "5cb188d1-ab20-4473-bdd8-4a6111960ddd", "title": "My Task", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
c43cfad1-662c-4528-b50b-dceb8ff1f7e6	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	3f7a2315-a128-4bb0-a17f-eb0ebe999de0	\N	{"id": "3f7a2315-a128-4bb0-a17f-eb0ebe999de0", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-12", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
a2f7f810-1b74-4c3e-bf89-f66f159d7dde	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	91c9f8be-c44c-4bd4-8e4a-07d99ba015ff	\N	{"id": "91c9f8be-c44c-4bd4-8e4a-07d99ba015ff", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:20:09.847486+00
c63b8131-6c9e-4cc7-978a-c168ba5a2180	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	ddaf31b2-4187-48b7-948d-9483efa03596	{"id": "ddaf31b2-4187-48b7-948d-9483efa03596", "title": "Draft Project Charter", "status": "todo", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "ddaf31b2-4187-48b7-948d-9483efa03596", "title": "Draft Project Charter", "status": "in_progress", "due_date": "2025-11-04", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:48.017892+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 06:20:48.017892+00
62f5c000-cfbe-4488-99c5-c25ebe44546f	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	f299b868-bfa1-4501-9cdb-4c0e18fdb630	{"id": "f299b868-bfa1-4501-9cdb-4c0e18fdb630", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "f299b868-bfa1-4501-9cdb-4c0e18fdb630", "title": "Define WBS & High-Level Timeline", "status": "blocked", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:51.762196+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 06:20:51.762196+00
4a808778-b368-44ef-98d6-5a2ddbf22879	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	{"id": "a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:09.847486+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6", "title": "Estimate Effort & Set Initial Backlog", "status": "completed", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:20:09.847486+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:20:54.735095+00:00", "description": null, "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 06:20:54.735095+00
be4e1850-947b-4544-9f62-a31e6837928f	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	bc4c355c-04fc-4184-83a8-f76dab9058b9	\N	{"id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "name": "Sagar", "raci": "Accountable", "email": null, "notes": null, "created_at": "2025-09-12T06:21:34.458477+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "DPS", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:21:34.458477+00:00", "influence_level": "High"}	stakeholder created	2025-09-12 06:21:34.458477+00
db82db8e-2a45-4f9b-a9a1-c47d5d39d4f5	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	8add20bb-8fbb-4c59-b4af-7166d8fdc791	\N	{"id": "8add20bb-8fbb-4c59-b4af-7166d8fdc791", "title": "Define WBS & High-Level Timeline", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
0e9493b9-a0ad-4b4b-94c4-49b48ad06146	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	cff9d2ab-4661-45c3-a0ad-0976bc6b837e	\N	{"id": "cff9d2ab-4661-45c3-a0ad-0976bc6b837e", "cause": null, "notes": null, "owner": null, "title": "Technical Debt", "impact": 3, "status": "In Progress", "category": "Technical", "risk_code": "R001", "created_at": "2025-09-12T06:23:54.88736+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 3, "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "risk_score": 9, "updated_at": "2025-09-12T06:23:54.88736+00:00", "consequence": null, "description": null, "last_updated": "2025-09-12", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-12", "mitigation_plan": ["Action 1"], "residual_impact": null, "contingency_plan": null, "next_review_date": "2025-09-19", "response_strategy": null, "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-12 06:23:54.88736+00
ac104bf9-7d02-4200-b88f-e31a4ecc2c1c	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	f43391dc-e187-4d26-a52e-d5ea13611309	\N	{"id": "f43391dc-e187-4d26-a52e-d5ea13611309", "attendees": ["bc4c355c-04fc-4184-83a8-f76dab9058b9"], "created_at": "2025-09-12T06:24:49.92324+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:24:49.92324+00:00", "meeting_date": "2025-09-16", "meeting_title": "Stackholder Review meeting", "summary_notes": ""}	discussion created	2025-09-12 06:24:49.92324+00
c9053eb7-7f03-4f63-90cc-b71f8dc9f7c8	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	59dbc29e-3e91-4d3f-9ff0-d7eca825c57d	\N	{"id": "59dbc29e-3e91-4d3f-9ff0-d7eca825c57d", "title": "Action 1 Derived from a meeting", "status": "backlog", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:25:37.549951+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:25:37.549951+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "source_type": "action_item", "target_date": "2025-09-17", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-12 06:25:37.549951+00
7b4a4436-1263-4ad5-8724-c6e7ca505ff7	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	c74ef828-f1a2-407a-8850-107721692f94	\N	{"id": "c74ef828-f1a2-407a-8850-107721692f94", "title": "Action 1 Derived from a meeting", "status": "todo", "due_date": "2025-09-17", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "created_at": "2025-09-12T06:26:39.307531+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:26:39.307531+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:26:39.307531+00
2f1a8a8c-329f-4c31-9307-0aacfc263e3a	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	updated	backlog_item	59dbc29e-3e91-4d3f-9ff0-d7eca825c57d	{"id": "59dbc29e-3e91-4d3f-9ff0-d7eca825c57d", "title": "Action 1 Derived from a meeting", "status": "backlog", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:25:37.549951+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:25:37.549951+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "source_type": "action_item", "target_date": "2025-09-17", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "59dbc29e-3e91-4d3f-9ff0-d7eca825c57d", "title": "Action 1 Derived from a meeting", "status": "done", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:25:37.549951+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:26:39.421698+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "source_type": "action_item", "target_date": "2025-09-17", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item updated	2025-09-12 06:26:39.421698+00
50ecf64a-fb6b-4b33-8494-15d0c153f2ea	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	retrospectives	created	retrospective	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	\N	{"id": "87dd231c-54e4-4c6d-aa85-bdeaf6762ea7", "status": "active", "framework": "kiss", "created_at": "2025-09-12T06:29:42.045445+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:29:42.045445+00:00", "iteration_id": "Q1 It1", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	retrospective created	2025-09-12 06:29:42.045445+00
b3b1761a-03db-4cb9-a18e-a882656237a9	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	a709b230-bc99-48b3-a3a8-f5a366a081b6	\N	{"id": "a709b230-bc99-48b3-a3a8-f5a366a081b6", "title": "Action 1 importnat ", "status": "backlog", "owner_id": null, "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:30:27.603244+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:30:27.603244+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"Action 1 importnat \\"\\nWhen: Next Milestone \\nWho: Sagar", "source_type": "manual", "target_date": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-12 06:30:27.603244+00
75300e99-3d9f-4ac2-b188-e898f988f08d	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	5b4ccc08-763f-4256-a899-258e0ee73905	\N	{"id": "5b4ccc08-763f-4256-a899-258e0ee73905", "title": "Action 1 importnat ", "status": "todo", "due_date": null, "owner_id": null, "priority": "medium", "created_at": "2025-09-12T06:30:57.176784+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:30:57.176784+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"Action 1 importnat \\"\\nWhen: Next Milestone \\nWho: Sagar", "milestone_id": "4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 06:30:57.176784+00
971201e1-7d05-41be-ae32-e94a47856a8c	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	updated	backlog_item	a709b230-bc99-48b3-a3a8-f5a366a081b6	{"id": "a709b230-bc99-48b3-a3a8-f5a366a081b6", "title": "Action 1 importnat ", "status": "backlog", "owner_id": null, "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:30:27.603244+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:30:27.603244+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"Action 1 importnat \\"\\nWhen: Next Milestone \\nWho: Sagar", "source_type": "manual", "target_date": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "a709b230-bc99-48b3-a3a8-f5a366a081b6", "title": "Action 1 importnat ", "status": "done", "owner_id": null, "priority": "medium", "source_id": null, "created_at": "2025-09-12T06:30:27.603244+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:30:57.284108+00:00", "description": "Created from retrospective action item.\\n\\nOriginal card: \\"Action 1 importnat \\"\\nWhen: Next Milestone \\nWho: Sagar", "source_type": "manual", "target_date": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item updated	2025-09-12 06:30:57.284108+00
6d0b3dac-9c7b-4744-9c51-af587082dedc	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	c74ef828-f1a2-407a-8850-107721692f94	{"id": "c74ef828-f1a2-407a-8850-107721692f94", "title": "Action 1 Derived from a meeting", "status": "todo", "due_date": "2025-09-17", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "created_at": "2025-09-12T06:26:39.307531+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:26:39.307531+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "c74ef828-f1a2-407a-8850-107721692f94", "title": "Action 1 Derived from a meeting", "status": "todo", "due_date": "2025-07-22", "owner_id": "bc4c355c-04fc-4184-83a8-f76dab9058b9", "priority": "medium", "created_at": "2025-09-12T06:26:39.307531+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "0dda829d-8923-4b93-9f24-a728d198803d", "updated_at": "2025-09-12T06:32:13.429299+00:00", "description": "Converted from action item - Discussion: Stackholder Review meeting", "milestone_id": "6d244fcc-88d0-41be-b702-03534bea28c0", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 06:32:13.429299+00
af9af611-f89b-4ace-9cfd-dce6b63dd7aa	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	b6ddd165-04ed-44df-9126-1825d665f2ed	\N	{"id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "name": "MG1", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T12:15:56.10569+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.10569+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 12:15:56.10569+00
6f7485d9-5826-4b3d-bccc-976b7b16e024	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	6129b78b-32d1-46a7-be85-0f10fbb55d57	\N	{"id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "name": "MG2", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T12:15:56.10569+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.10569+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 12:15:56.10569+00
42548e42-4a4f-4ea3-976a-b94da278e5e0	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	milestone	c39f42d3-0f6e-4a75-9fb4-a60283b6a72a	\N	{"id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "name": "MG3", "status": "planning", "due_date": "2025-12-11", "created_at": "2025-09-12T12:15:56.10569+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.10569+00:00", "description": null, "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	milestone created	2025-09-12 12:15:56.10569+00
7ca665eb-10b2-4f9f-a3da-59c5698dcabe	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	bf6d6a44-c091-40e1-993b-3e7448dcd19b	\N	{"id": "bf6d6a44-c091-40e1-993b-3e7448dcd19b", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
5c5223ac-8dc8-41ea-8b10-b08f6e0b5990	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	e0c41d46-fdf8-42ae-a033-57cf0bac641b	\N	{"id": "e0c41d46-fdf8-42ae-a033-57cf0bac641b", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
55a6a569-f6b8-4094-b944-510512ab4ab8	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	3542740c-1d6f-491e-8ead-efdeff2f0a74	\N	{"id": "3542740c-1d6f-491e-8ead-efdeff2f0a74", "title": "Capture Minutes & Decisions", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
85707cde-e584-4a52-81fb-cac6f36475d3	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	eddcb093-f93b-440f-b017-27ea90b5df4e	\N	{"id": "eddcb093-f93b-440f-b017-27ea90b5df4e", "title": "My defined Task", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
616e22be-97ee-4441-99e0-4963f56ba4c0	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	602f01ca-8083-4691-af06-f90a25841f16	\N	{"id": "602f01ca-8083-4691-af06-f90a25841f16", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-11-14", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
6c8395e7-662d-4108-ae0b-9ef6edfc3828	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	528aeff6-5acf-47a7-a855-177373dd2097	\N	{"id": "528aeff6-5acf-47a7-a855-177373dd2097", "title": "Estimate Effort & Set Initial Backlog", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
fb368971-c2d4-4e16-a7ae-ae4780f83594	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	\N	{"id": "2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
9d273287-d7ec-441a-ada3-b48cf67fa521	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	99f58461-1d1c-46ad-87cd-151935a03678	\N	{"id": "99f58461-1d1c-46ad-87cd-151935a03678", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:15:56.33609+00
62da0aa2-faa6-4187-8568-cfbe07d937fd	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	24c6d8d4-f8ec-4944-9788-4f1814227f68	\N	{"id": "24c6d8d4-f8ec-4944-9788-4f1814227f68", "name": "Member1", "raci": "Accountable", "email": null, "notes": null, "created_at": "2025-09-12T12:19:05.283379+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "DPI", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:19:05.283379+00:00", "influence_level": "High"}	stakeholder created	2025-09-12 12:19:05.283379+00
cc9eb360-ce81-4891-905d-597f81ddcd0e	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	stakeholders	created	stakeholder	87a091f6-523a-430d-9854-3a94caf7bcc2	\N	{"id": "87a091f6-523a-430d-9854-3a94caf7bcc2", "name": "Member2", "raci": "Informed", "email": null, "notes": null, "created_at": "2025-09-12T12:19:32.15969+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "department": "Security", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:19:32.15969+00:00", "influence_level": "Medium"}	stakeholder created	2025-09-12 12:19:32.15969+00
cb735e22-91d7-46db-826d-db714c54a341	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	bf6d6a44-c091-40e1-993b-3e7448dcd19b	{"id": "bf6d6a44-c091-40e1-993b-3e7448dcd19b", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "bf6d6a44-c091-40e1-993b-3e7448dcd19b", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": "24c6d8d4-f8ec-4944-9788-4f1814227f68", "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:20:20.288387+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:20:20.288387+00
776570e5-c253-402d-86ea-dbd5f9e7115d	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	e0c41d46-fdf8-42ae-a033-57cf0bac641b	{"id": "e0c41d46-fdf8-42ae-a033-57cf0bac641b", "title": "Identify Stakeholders & Create RACI", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "e0c41d46-fdf8-42ae-a033-57cf0bac641b", "title": "Identify Stakeholders & Create RACI", "status": "blocked", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:21:30.508791+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:21:30.508791+00
98494723-d1dc-45fd-9d0b-b6bca3ada0ab	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	3542740c-1d6f-491e-8ead-efdeff2f0a74	{"id": "3542740c-1d6f-491e-8ead-efdeff2f0a74", "title": "Capture Minutes & Decisions", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "3542740c-1d6f-491e-8ead-efdeff2f0a74", "title": "Capture Minutes & Decisions", "status": "in_progress", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:21:34.330219+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:21:34.330219+00
03a2073f-71c6-4233-bb12-1515f28e6808	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	602f01ca-8083-4691-af06-f90a25841f16	{"id": "602f01ca-8083-4691-af06-f90a25841f16", "title": "Create Risk Register & Initial Risk Assessment", "status": "todo", "due_date": "2025-11-14", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "602f01ca-8083-4691-af06-f90a25841f16", "title": "Create Risk Register & Initial Risk Assessment", "status": "completed", "due_date": "2025-11-14", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:21:36.81859+00:00", "description": null, "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:21:36.81859+00
67d53fe9-7f71-481b-bd3d-ebb51ec86fea	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	{"id": "2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "todo", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec", "title": "Set up Communication Plan (cadence, channels, owners)", "status": "completed", "due_date": "2025-11-05", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:21:39.713134+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:21:39.713134+00
9a4d45f5-deb0-4396-9bf4-558ab78141ec	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	99f58461-1d1c-46ad-87cd-151935a03678	{"id": "99f58461-1d1c-46ad-87cd-151935a03678", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "todo", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:15:56.33609+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "99f58461-1d1c-46ad-87cd-151935a03678", "title": "Schedule Kickoff Meeting & Share Agenda", "status": "in_progress", "due_date": "2025-12-11", "owner_id": null, "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:21:42.403155+00:00", "description": null, "milestone_id": "c39f42d3-0f6e-4a75-9fb4-a60283b6a72a", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:21:42.403155+00
4a57bdf3-8746-4981-8157-d3b7abb77171	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	updated	task	bf6d6a44-c091-40e1-993b-3e7448dcd19b	{"id": "bf6d6a44-c091-40e1-993b-3e7448dcd19b", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-11-05", "owner_id": "24c6d8d4-f8ec-4944-9788-4f1814227f68", "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:20:20.288387+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "bf6d6a44-c091-40e1-993b-3e7448dcd19b", "title": "Draft Project Charter (scope, objectives, success criteria)", "status": "todo", "due_date": "2025-09-01", "owner_id": "24c6d8d4-f8ec-4944-9788-4f1814227f68", "priority": "medium", "created_at": "2025-09-12T12:15:56.33609+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:22:15.398551+00:00", "description": null, "milestone_id": "b6ddd165-04ed-44df-9126-1825d665f2ed", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task updated	2025-09-12 12:22:15.398551+00
0eba814a-f4e1-425e-a92f-efb1752d99ae	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	risk_register	created	risk	c8e37b5e-fa5c-48f7-8793-b4c8c29868ef	\N	{"id": "c8e37b5e-fa5c-48f7-8793-b4c8c29868ef", "cause": "Welcome on board!!!\\n\\nLet’s get you started with your new adventure within our company.\\n\\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.", "notes": null, "owner": null, "title": "Development  Delay", "impact": 3, "status": "In Progress", "category": "Technical", "risk_code": "R001", "created_at": "2025-09-12T12:24:26.034064+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "likelihood": 3, "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "risk_score": 9, "updated_at": "2025-09-12T12:24:26.034064+00:00", "consequence": "Welcome on board!!!\\n\\nLet’s get you started with your new adventure within our company.\\n\\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.", "description": "Welcome on board!!!\\n\\nLet’s get you started with your new adventure within our company.\\n\\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.", "last_updated": "2025-09-12", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46", "identified_date": "2025-09-12", "mitigation_plan": ["Action1"], "residual_impact": null, "contingency_plan": null, "next_review_date": "2025-09-19", "response_strategy": "Transfer", "residual_likelihood": null, "residual_risk_score": null}	risk created	2025-09-12 12:24:26.034064+00
539d56ce-36ab-4475-bc3b-4f6913428d02	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	discussions	created	discussion	bd7a8a93-61c7-4120-b484-02eb5dd259a8	\N	{"id": "bd7a8a93-61c7-4120-b484-02eb5dd259a8", "attendees": [], "created_at": "2025-09-12T12:27:44.147867+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:27:44.147867+00:00", "meeting_date": "2025-09-10", "meeting_title": "Stackholder Streeming ", "summary_notes": ""}	discussion created	2025-09-12 12:27:44.147867+00
b0acf9d1-9c7b-4be5-8ec4-d327644a4a60	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	created	backlog_item	dd8985cf-179c-4396-bd45-fa4774d281e4	\N	{"id": "dd8985cf-179c-4396-bd45-fa4774d281e4", "title": "Action 1=> to do finance health  check ", "status": "backlog", "owner_id": "87a091f6-523a-430d-9854-3a94caf7bcc2", "priority": "medium", "source_id": null, "created_at": "2025-09-12T12:28:35.032564+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:28:35.032564+00:00", "description": "Converted from action item - Discussion: Stackholder Streeming ", "source_type": "action_item", "target_date": "2025-09-19", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item created	2025-09-12 12:28:35.032564+00
46135574-3bce-4665-afd9-4fe9d3e9007b	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	tasks_milestones	created	task	ea047681-ebff-4913-b0dd-123cd696e418	\N	{"id": "ea047681-ebff-4913-b0dd-123cd696e418", "title": "Action 1=> to do finance health  check ", "status": "todo", "due_date": "2025-09-19", "owner_id": "87a091f6-523a-430d-9854-3a94caf7bcc2", "priority": "medium", "created_at": "2025-09-12T12:29:09.13527+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:29:09.13527+00:00", "description": "Converted from action item - Discussion: Stackholder Streeming ", "milestone_id": "6129b78b-32d1-46a7-be85-0f10fbb55d57", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	task created	2025-09-12 12:29:09.13527+00
d513a920-b18a-4d03-840d-951c6f2769dd	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	task_backlog	updated	backlog_item	dd8985cf-179c-4396-bd45-fa4774d281e4	{"id": "dd8985cf-179c-4396-bd45-fa4774d281e4", "title": "Action 1=> to do finance health  check ", "status": "backlog", "owner_id": "87a091f6-523a-430d-9854-3a94caf7bcc2", "priority": "medium", "source_id": null, "created_at": "2025-09-12T12:28:35.032564+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:28:35.032564+00:00", "description": "Converted from action item - Discussion: Stackholder Streeming ", "source_type": "action_item", "target_date": "2025-09-19", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	{"id": "dd8985cf-179c-4396-bd45-fa4774d281e4", "title": "Action 1=> to do finance health  check ", "status": "done", "owner_id": "87a091f6-523a-430d-9854-3a94caf7bcc2", "priority": "medium", "source_id": null, "created_at": "2025-09-12T12:28:35.032564+00:00", "created_by": "6dc39f1e-2af3-4b78-8488-317d90f4f538", "project_id": "37e8b9a1-5209-4428-804f-6a879d557bd6", "updated_at": "2025-09-12T12:29:09.230727+00:00", "description": "Converted from action item - Discussion: Stackholder Streeming ", "source_type": "action_item", "target_date": "2025-09-19", "department_id": "3af3b0f4-adca-4f11-826c-20ed36b31d46"}	backlog_item updated	2025-09-12 12:29:09.230727+00
\.


--
-- Data for Name: budget_alert_rules; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_alert_rules (id, project_budget_id, condition_type, threshold_value, severity, message, is_active, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: budget_categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_categories (id, project_budget_id, budget_type_code, name, budget_allocated, budget_received, amount_spent, comments, created_by, created_at, updated_at) FROM stdin;
b72732c9-915c-4b9e-955e-80bff4ac6f8a	56ace55f-92b1-4e9c-9d44-978f2307ffb1	development	AAAAWWW	200.00	0.00	0.00	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-05 08:11:05.623361+00	2025-09-05 08:11:05.623361+00
e5674ed6-5241-4d5e-a777-0c79496ffe32	56ace55f-92b1-4e9c-9d44-978f2307ffb1	perfective_maintenance	pp title	2000.00	0.00	0.00	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-05 08:11:05.623361+00	2025-09-05 08:11:05.623361+00
405fd5de-b940-4b10-801e-bb6e7bf325bd	7a19d6b7-c93a-459d-9ea5-142b30311bb5	DEV	Development	20000.00	18000.00	15000.00	Software development costs	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 12:19:36.200168+00	2025-09-07 12:19:36.200168+00
ac5a8ad0-fda4-4be2-9dd0-43ffff8846e7	7a19d6b7-c93a-459d-9ea5-142b30311bb5	INFRA	Infrastructure	15000.00	15000.00	8000.00	Server and hosting costs	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 12:19:36.200168+00	2025-09-07 12:19:36.200168+00
e3aa17b2-ee69-480e-8700-9fae05963960	7a19d6b7-c93a-459d-9ea5-142b30311bb5	MKT	Marketing	10000.00	8000.00	5000.00	Marketing and promotion	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 12:19:36.200168+00	2025-09-07 12:19:36.200168+00
8367c229-1507-4b1b-8bee-284be4e30bcc	7a19d6b7-c93a-459d-9ea5-142b30311bb5	OPS	Operations	5000.00	4000.00	2000.00	General operations	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 12:19:36.200168+00	2025-09-07 12:19:36.200168+00
2012f5ae-0655-4928-aaff-c96514111b90	d53d51fd-1068-414b-bc51-a3655b59d596	perfective_maintenance	BB1	50000.00	0.00	0.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:31:59.326756+00	2025-09-07 16:32:09.795104+00
57802dbc-be2c-4790-ac72-0eb549199805	ea4fc4d7-ba54-4c8f-bd38-a9e10d1defc2	licensing	Software Development & Licensing	900000.00	0.00	0.00	(cockpit display software, HMI systems, integration tools)	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:14:31.974697+00	2025-09-07 18:14:31.974697+00
95efc285-247f-4cda-813f-54d74f64fb2b	ea4fc4d7-ba54-4c8f-bd38-a9e10d1defc2	adaptive_maintenance	Prototyping & Simulation	500000.00	0.00	0.00	(mock-up cockpit, pilot training simulators)	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:15:26.345335+00	2025-09-07 18:15:26.345335+00
5263730a-3cc0-416e-ab17-59568aeb8e33	ea4fc4d7-ba54-4c8f-bd38-a9e10d1defc2	perfective_maintenance	Testing & Certification	800000.00	0.00	0.00	(lab testing, flight testing, EASA/FAA certification compliance)	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:15:01.992314+00	2025-09-07 18:16:16.809865+00
506a20d3-1e28-46af-ab52-57c3c9412753	ea4fc4d7-ba54-4c8f-bd38-a9e10d1defc2	development	Avionics Hardware & Components	2200000.00	0.00	0.00	(new displays, avionics units, sensors, wiring harnesses)	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:14:04.697761+00	2025-09-07 18:16:30.622263+00
15644e77-509b-4738-9477-bf8f5eb5f5eb	8779a42a-2fec-45ef-a305-cb316d89e8eb	development	End to End Development- until Q1	50000.00	0.00	1000.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:15:17.473086+00	2025-09-08 16:15:51.324555+00
efa9e350-b276-4e15-af25-341791cbdd0a	8a0d152d-7b7c-49c7-bc3f-da2b9d61cc20	development	Budget for Dev -Q1	90000.00	0.00	0.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:28:36.497062+00	2025-09-11 06:29:30.018032+00
8092de4b-3746-4738-b828-04edada1d048	178a8e50-a1cc-4d5a-b58d-54b5b1abf2a3	development	Q120205	20000.00	0.00	200.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:22:10.939947+00	2025-09-12 06:22:34.857426+00
72ce7510-03ce-4dd7-98fe-6a19bbc5e993	93b589e4-192a-473b-9a8a-ff9afcb44f71	development	Q1 Dev-2025	30000.00	0.00	0.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:17:10.230893+00	2025-09-12 12:17:58.31242+00
ea37869b-c77c-4eba-914f-d2be7bffccf4	93b589e4-192a-473b-9a8a-ff9afcb44f71	licensing	Licensees for 2025	30000.00	0.00	10000.00		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:17:32.779221+00	2025-09-12 12:18:17.281003+00
\.


--
-- Data for Name: budget_comments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_comments (id, project_budget_id, author, text, created_at) FROM stdin;
\.


--
-- Data for Name: budget_receipts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_receipts (id, project_budget_id, date, source, amount, received_by, notes, is_restricted, restricted_to_category, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: budget_spending; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_spending (id, budget_category_id, date, vendor, description, invoice_id, amount, payment_method, approved_by, status, created_by, created_at, updated_at) FROM stdin;
7df8e99f-b62a-4ce2-b060-062ed848a43e	2012f5ae-0655-4928-aaff-c96514111b90	2025-09-10				5000.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:32:09.570896+00	2025-09-07 16:32:09.570896+00
8f9ff679-b696-4419-9b95-f53a8719a304	506a20d3-1e28-46af-ab52-57c3c9412753	2025-08-01				700000.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:15:56.984584+00	2025-09-07 18:15:56.984584+00
faf7993a-ce0a-4009-b920-c3277be641b1	5263730a-3cc0-416e-ab17-59568aeb8e33	2025-09-24				300000.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:16:16.646324+00	2025-09-07 18:16:16.646324+00
df19b936-6b43-4847-a48a-31026c9fe2c6	506a20d3-1e28-46af-ab52-57c3c9412753	2025-09-24				200000.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:16:30.41321+00	2025-09-07 18:16:30.41321+00
c8d6f7ec-ffdc-4f37-ae23-6c1b19630f40	15644e77-509b-4738-9477-bf8f5eb5f5eb	2025-09-16				1000.00		\N	paid	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:15:51.110331+00	2025-09-08 16:15:51.110331+00
2c4a97bf-90b5-42b3-971a-34184190150d	efa9e350-b276-4e15-af25-341791cbdd0a	2025-09-17	infosys			700.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:29:29.813157+00	2025-09-11 06:29:29.813157+00
d364937f-0606-4905-8646-a643e0a56aeb	8092de4b-3746-4738-b828-04edada1d048	2025-09-17	Infosys			200.00		\N	paid	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:22:34.667697+00	2025-09-12 06:22:34.667697+00
d3fe2031-7f98-4bac-aeba-523022eeaa41	72ce7510-03ce-4dd7-98fe-6a19bbc5e993	2025-09-17	Infosys			2000.00		\N	pending	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:17:58.124656+00	2025-09-12 12:17:58.124656+00
1efa865c-1a2c-4ab4-96e2-bba5a03fdc30	ea37869b-c77c-4eba-914f-d2be7bffccf4	2025-09-23	ABC			10000.00		\N	paid	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:18:17.098542+00	2025-09-12 12:18:17.098542+00
\.


--
-- Data for Name: budget_type_config; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.budget_type_config (id, code, label, enabled, default_allocation_percent, dropdown_display_order, notes, created_at, updated_at) FROM stdin;
8e62212b-80bf-4378-ac0d-ac84e0d1119c	obsolescence	Obsolescence & Decommissioning	t	2.00	1	Budget for safe retirement, data migration and disposal.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
be46bf15-946d-4da5-98c7-397004017c53	preventive_maintenance	Preventive Maintenance	t	3.00	2	Routine maintenance to prevent failures (tests, cleanup).	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
9bc04c8b-bb42-4cd8-9a68-123b091387d5	perfective_maintenance	Perfective Maintenance	t	4.00	3	Improvements to performance/usability based on feedback.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
ac9399db-4cd3-4335-bdb0-96cea43f0f35	development	Development	t	40.00	4	Core development work and feature implementation.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
92d0ff7f-e806-41cc-bda2-9e3c9e8a6020	bug_fixing	Bug Fixing & Defect Resolution	t	5.00	5	Bug fixes and defect resolution activities.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
8caabe65-160b-4ac0-9c87-e66a3bdc6f89	security	Security & Vulnerability Management	t	6.00	6	Security audits, vulnerability fixes, and compliance.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
5c2b1205-614e-44f8-9b5c-c6f48b315165	export_control	Export Control & Compliance	t	2.00	7	Legal compliance and export control requirements.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
876c429c-01f7-46be-b29b-d728562a55a9	adaptive_maintenance	Adaptive Maintenance	t	10.00	8	Adaptation to changing environments and requirements.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
0746951f-aa7e-40a4-8e46-0bd389042803	infrastructure	Infrastructure & Hosting	t	20.00	9	Hosting, cloud services, and infrastructure costs.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
c077499a-7512-4892-84e2-b3296da4613a	licensing	Licenses & Subscriptions	t	3.00	10	Third-party licenses and subscription services.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
46d4fa0f-efa3-4c5e-b069-4caab299c571	contingency	Contingency / Risk Reserve	t	5.00	11	Emergency budget for unexpected costs and risks.	2025-09-05 04:40:42.078373+00	2025-09-05 04:40:42.078373+00
\.


--
-- Data for Name: departments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.departments (id, name, created_at, updated_at) FROM stdin;
25028c78-ff61-4cd5-80f1-2e245cf1a4ea	DPSA	2025-08-26 23:50:28.066123+00	2025-08-26 23:50:28.066123+00
fd462524-6cfb-4b7a-ac5b-5226e386fec8	DPSC	2025-08-26 23:50:40.175846+00	2025-08-26 23:50:40.175846+00
3af3b0f4-adca-4f11-826c-20ed36b31d46	DPST	2025-08-26 23:50:45.674829+00	2025-08-26 23:50:45.674829+00
20e21060-0918-4309-a9cf-f5c6709dd90c	SAG	2025-08-31 07:39:48.037802+00	2025-08-31 07:39:48.037802+00
\.


--
-- Data for Name: discussion_action_items; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.discussion_action_items (id, discussion_id, task_description, owner_id, target_date, status, created_by, created_at, updated_at) FROM stdin;
edb11e9b-516c-454b-911e-54c680b64a93	4519ed57-67b1-4ac8-9a35-18ef2effcec5	ABC 	86c310af-22d1-4831-8d2f-f89c06e7e218	2025-09-01	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:34:31.735826+00	2025-08-30 04:44:14.590022+00
aabc7475-f299-4f7b-9d1f-2c8a6ce1cf5e	4519ed57-67b1-4ac8-9a35-18ef2effcec5	ABC 	86c310af-22d1-4831-8d2f-f89c06e7e218	2025-09-01	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:34:17.147477+00	2025-08-30 04:44:15.94043+00
8a5fac8a-d733-42fc-b6e5-cc40c79738c4	4519ed57-67b1-4ac8-9a35-18ef2effcec5	AAA	86c310af-22d1-4831-8d2f-f89c06e7e218	2025-09-03	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:45:34.953585+00	2025-08-30 04:45:37.593858+00
c1b9a388-49a9-4e06-bdb6-20d8d1889439	9bfa24a1-724a-459a-8707-2ad5104710e3	Action 1	9673f292-528a-40eb-a11c-895fb671d045	2025-09-05	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:52:51.716885+00	2025-08-30 12:54:41.066347+00
4a4dd570-9988-4794-a570-2242da13418b	9bfa24a1-724a-459a-8707-2ad5104710e3	Action 2	9673f292-528a-40eb-a11c-895fb671d045	2025-09-04	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:02:16.399432+00	2025-08-30 13:02:33.753202+00
c0e09a6f-a072-4a32-a5ae-8521371013af	9bfa24a1-724a-459a-8707-2ad5104710e3	Action 2	9673f292-528a-40eb-a11c-895fb671d045	2025-09-04	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:02:17.383699+00	2025-08-30 13:15:43.938552+00
83bd92ce-65b5-4fc7-ab66-93ad214b7c3e	3096614b-325a-4eb8-955c-34b29830bc0d	AA	8f01ca4d-7a29-4b30-89e7-a2183bb5c8a0	2025-10-02	in-progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:54.492512+00	2025-09-02 12:58:54.492512+00
4a1cf45d-83cb-4fa2-a417-a9681c7fdf9a	3096614b-325a-4eb8-955c-34b29830bc0d	AA	8f01ca4d-7a29-4b30-89e7-a2183bb5c8a0	2025-09-16	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 14:12:59.392629+00	2025-09-02 14:12:59.392629+00
58e2b0c7-ef6b-40cb-b228-07b967905c59	3096614b-325a-4eb8-955c-34b29830bc0d	AA	8f01ca4d-7a29-4b30-89e7-a2183bb5c8a0	2025-09-16	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 14:12:59.520309+00	2025-09-02 14:12:59.520309+00
380f5d25-f9db-4063-9d6c-1ea642ac3854	3753c4e1-7c39-44ca-9b9e-1e44d460b9df	Some Action 1	99f0f589-9612-465b-bf8b-b8794cad3e8d	2025-09-16	in-progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:28:57.302134+00	2025-09-07 16:28:57.302134+00
7cc76477-daf4-483c-9bbc-55949699657c	3753c4e1-7c39-44ca-9b9e-1e44d460b9df	Action2	99f0f589-9612-465b-bf8b-b8794cad3e8d	2025-09-24	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:29:09.702301+00	2025-09-07 16:29:09.702301+00
84166665-f047-47cd-9d36-e3e58ade7f6c	02d851c7-4d14-409a-8694-e52ac0386e35	Adjust digital display brightness settings for high-sunlight conditions.	67e2e881-ab7b-4840-a40d-f1349dabb340	2025-10-04	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:19.356532+00	2025-09-07 18:27:19.356532+00
555671d1-6abb-4353-8a35-804f343194df	02d851c7-4d14-409a-8694-e52ac0386e35	Re-evaluate button placement ergonomics with Human Factors Specialist.	26294eb1-5f9d-47af-b884-19c35a291c55	2025-09-17	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:34.281573+00	2025-09-07 18:27:34.281573+00
f8fcf5c5-e4e7-4719-a87b-d39d0832d69f	02d851c7-4d14-409a-8694-e52ac0386e35	Conduct workload analysis in emergency scenarios and refine HMI accordingly.	2a48457f-4228-4a33-9b45-446f935e0476	2025-09-30	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:45.861869+00	2025-09-07 18:27:45.861869+00
59c67725-7a2d-4b6a-9948-f91b523d62d4	02d851c7-4d14-409a-8694-e52ac0386e35	Develop Prototype v2 incorporating pilot feedback.	3136e9de-f135-4682-a2db-8632e619e0f6	2025-09-27	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:57.927733+00	2025-09-07 18:27:57.927733+00
dc2bcf48-77e0-4f63-a3c7-fc39b40db46f	392789fc-8c5c-4af3-8c82-6f14e040f2f0	Organize a compliance workshop with Certification & Compliance Officer and external consultants.	26294eb1-5f9d-47af-b884-19c35a291c55	2025-09-17	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:15.501438+00	2025-09-07 18:28:15.501438+00
d3404efc-079d-48e1-9777-1a07966fa1d4	392789fc-8c5c-4af3-8c82-6f14e040f2f0	Prepare gap analysis document comparing project deliverables vs EASA/FAA standards.	67e2e881-ab7b-4840-a40d-f1349dabb340	2025-09-04	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:27.087594+00	2025-09-07 18:28:27.087594+00
f3ef096d-146c-4af5-b9ba-54d42cc968fe	392789fc-8c5c-4af3-8c82-6f14e040f2f0	Establish a compliance tracking matrix (owner: QA Manager).	67e2e881-ab7b-4840-a40d-f1349dabb340	2025-09-26	in-progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:44.330743+00	2025-09-07 18:28:44.330743+00
7045f810-1474-4f51-93f9-ba594f3c5d55	392789fc-8c5c-4af3-8c82-6f14e040f2f0	Engage with regulators early to clarify certification expectations.	2a48457f-4228-4a33-9b45-446f935e0476	2025-09-26	open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:52.888694+00	2025-09-07 18:28:52.888694+00
1c440085-3c96-4c67-9ee1-fc71a1656839	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	Do we need to extend dashboard analytics (e.g., trendline view)?	8958c7c6-5f79-4b29-a809-c7a69ef5ef97	2025-09-23	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:57.242852+00	2025-09-08 16:20:07.541505+00
9f63c583-79ad-4ddf-bdcd-adb276fca8ca	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	Should we prioritize fixing login/auth or analytics first?	cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac	2025-09-23	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:37.98646+00	2025-09-08 16:20:07.970037+00
474fd144-9739-48b9-8247-d950e8fe35e4	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	Find  another developer	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-24	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:34:42.902617+00	2025-09-11 06:35:02.173227+00
b2a0c082-e81e-4b38-9546-998237fa91c6	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	Plan A	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-17	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:34:14.310125+00	2025-09-11 06:35:06.584288+00
2365e78d-efb9-4284-910b-3d8e753e32ee	49be048e-26a3-4c18-88fe-66952b76964a	Action1	28a52e60-b35a-474f-a038-fb71d3ab8b23	2025-09-25	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:26:59.378079+00	2025-09-12 05:27:06.043068+00
58a95a52-809d-44ec-a80d-7c0efd88469a	f43391dc-e187-4d26-a52e-d5ea13611309	Action 1 Derived from a meeting	bc4c355c-04fc-4184-83a8-f76dab9058b9	2025-09-17	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:25:10.834216+00	2025-09-12 06:25:38.798099+00
1b520723-0cb7-405f-9cd4-c513b2c5bbea	bd7a8a93-61c7-4120-b484-02eb5dd259a8	Action 1=> to do finance health  check 	87a091f6-523a-430d-9854-3a94caf7bcc2	2025-09-19	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:28:26.055459+00	2025-09-12 12:28:35.988359+00
\.


--
-- Data for Name: discussion_change_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.discussion_change_log (id, discussion_id, action_item_id, change_type, field_name, old_value, new_value, changed_by, created_at) FROM stdin;
152d315e-726d-4807-937a-8e2efc4275f3	b7667703-8c99-4001-8b3e-c45f166266ef	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:27:59.418541+00
6f19d287-a457-4ace-a3e5-0fb0849c9432	4519ed57-67b1-4ac8-9a35-18ef2effcec5	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:32:28.600142+00
5119254b-be94-4aee-a673-9162788a6236	4519ed57-67b1-4ac8-9a35-18ef2effcec5	aabc7475-f299-4f7b-9d1f-2c8a6ce1cf5e	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:34:17.147477+00
4f2cb1bc-b037-4ff1-9394-92aaf58a1dd0	4519ed57-67b1-4ac8-9a35-18ef2effcec5	edb11e9b-516c-454b-911e-54c680b64a93	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:34:31.735826+00
35d59beb-166b-4a35-a478-4cfe9e99cd33	4519ed57-67b1-4ac8-9a35-18ef2effcec5	edb11e9b-516c-454b-911e-54c680b64a93	updated	status	in-progress	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:44:14.590022+00
b83ce923-5448-4a0e-bf71-a2e602fadf48	4519ed57-67b1-4ac8-9a35-18ef2effcec5	aabc7475-f299-4f7b-9d1f-2c8a6ce1cf5e	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:44:15.94043+00
ef6807a5-4c77-490a-8f4e-0b85624e0f5e	4519ed57-67b1-4ac8-9a35-18ef2effcec5	8a5fac8a-d733-42fc-b6e5-cc40c79738c4	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:45:34.953585+00
699d45b4-28bd-4186-a4b7-466622813c86	4519ed57-67b1-4ac8-9a35-18ef2effcec5	8a5fac8a-d733-42fc-b6e5-cc40c79738c4	updated	status	in-progress	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:45:37.593858+00
2d19d95e-12a6-4dd0-b722-b4377c0567cf	9bfa24a1-724a-459a-8707-2ad5104710e3	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:49:27.973161+00
bc760a4b-197f-48da-b104-4206b531b201	9bfa24a1-724a-459a-8707-2ad5104710e3	c1b9a388-49a9-4e06-bdb6-20d8d1889439	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:52:51.716885+00
9889d77b-0bed-4da9-96ed-3fd5638c7349	9bfa24a1-724a-459a-8707-2ad5104710e3	c1b9a388-49a9-4e06-bdb6-20d8d1889439	updated	status	in-progress	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:53:00.087979+00
be270d76-d5f5-48cc-9cab-c9316f38978f	9bfa24a1-724a-459a-8707-2ad5104710e3	4a4dd570-9988-4794-a570-2242da13418b	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:02:16.399432+00
f2937d9f-71bd-42d4-94a6-1300d38f1355	9bfa24a1-724a-459a-8707-2ad5104710e3	c0e09a6f-a072-4a32-a5ae-8521371013af	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:02:17.383699+00
6eef5192-8636-4bef-825d-423c161df5c4	9bfa24a1-724a-459a-8707-2ad5104710e3	4a4dd570-9988-4794-a570-2242da13418b	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:02:33.753202+00
2ec136f7-12b5-4b99-9112-34166fb4399e	9bfa24a1-724a-459a-8707-2ad5104710e3	c0e09a6f-a072-4a32-a5ae-8521371013af	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:15:43.938552+00
f9f41279-feae-4559-85c5-6a34e6408bd0	3096614b-325a-4eb8-955c-34b29830bc0d	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:16.300085+00
9ef2f5fb-a178-4bdf-b12c-63536f7cd79c	0ca5c12f-4d5a-4e88-bd76-ea7f0d699a32	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:16.501358+00
96618ba7-ef5d-4a5f-a47f-ca840f717b85	3096614b-325a-4eb8-955c-34b29830bc0d	83bd92ce-65b5-4fc7-ab66-93ad214b7c3e	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:54.492512+00
71a2e748-4215-4bf8-be2a-8bf85ffdd735	3096614b-325a-4eb8-955c-34b29830bc0d	4a1cf45d-83cb-4fa2-a417-a9681c7fdf9a	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 14:12:59.392629+00
bd98c0a3-1d65-4757-8c4d-7311e01b3149	3096614b-325a-4eb8-955c-34b29830bc0d	58e2b0c7-ef6b-40cb-b228-07b967905c59	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 14:12:59.520309+00
bb85b754-8dec-4167-a46d-d8a5b9aeb647	9cf0aa50-bd73-4b8b-84d1-dda9f81329d2	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 15:02:47.918205+00
9cfbcf86-985a-460e-a43d-84c5503ad1f9	3753c4e1-7c39-44ca-9b9e-1e44d460b9df	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:28:39.701133+00
6c563de5-1924-4712-970c-a535b93580a5	3753c4e1-7c39-44ca-9b9e-1e44d460b9df	380f5d25-f9db-4063-9d6c-1ea642ac3854	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:28:57.302134+00
32e8a179-98b4-4bed-860d-43da26622a4a	3753c4e1-7c39-44ca-9b9e-1e44d460b9df	7cc76477-daf4-483c-9bbc-55949699657c	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:29:09.702301+00
2b569ef3-34a9-4c4e-8137-4f003e5bb6bd	02d851c7-4d14-409a-8694-e52ac0386e35	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:26:06.260949+00
1c4d0176-21ea-450a-97d6-cac4952eae4a	392789fc-8c5c-4af3-8c82-6f14e040f2f0	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:26:33.454991+00
d408e653-a3d8-4936-b2a9-4a9895eb4f80	02d851c7-4d14-409a-8694-e52ac0386e35	84166665-f047-47cd-9d36-e3e58ade7f6c	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:19.356532+00
3562c107-0888-46e1-88dd-fe9277c20f87	02d851c7-4d14-409a-8694-e52ac0386e35	555671d1-6abb-4353-8a35-804f343194df	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:34.281573+00
97c9ca62-8be1-48c9-95d7-75a415fd4ec7	02d851c7-4d14-409a-8694-e52ac0386e35	f8fcf5c5-e4e7-4719-a87b-d39d0832d69f	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:45.861869+00
cb905aae-4289-49b2-a02e-a6bcb3085e0c	02d851c7-4d14-409a-8694-e52ac0386e35	59c67725-7a2d-4b6a-9948-f91b523d62d4	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:27:57.927733+00
f99181ad-26f3-4ff9-8a5c-6752b026bf2d	392789fc-8c5c-4af3-8c82-6f14e040f2f0	dc2bcf48-77e0-4f63-a3c7-fc39b40db46f	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:15.501438+00
6348dd3e-cc38-4723-ab94-a555585fb99a	392789fc-8c5c-4af3-8c82-6f14e040f2f0	d3404efc-079d-48e1-9777-1a07966fa1d4	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:27.087594+00
8131f4b3-1b0c-4ec3-82ce-f1b827d0a3b6	392789fc-8c5c-4af3-8c82-6f14e040f2f0	f3ef096d-146c-4af5-b9ba-54d42cc968fe	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:44.330743+00
c8e74098-61c9-45ed-b2c9-3909a6129e42	392789fc-8c5c-4af3-8c82-6f14e040f2f0	7045f810-1474-4f51-93f9-ba594f3c5d55	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:28:52.888694+00
4873fc24-bbe4-48f4-9825-9d910dd8e29a	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:08.639951+00
decaf1a0-6ed4-4f34-bef0-75156ca6e9af	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	9f63c583-79ad-4ddf-bdcd-adb276fca8ca	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:37.98646+00
0a28d217-aabb-4659-8d3b-77c486887f1f	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	1c440085-3c96-4c67-9ee1-fc71a1656839	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:57.242852+00
1076489b-6e33-4f56-a7d2-f5ccebf351a8	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	1c440085-3c96-4c67-9ee1-fc71a1656839	updated	status	in-progress	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:20:07.541505+00
0380602e-4c70-438e-995f-22c988453019	4a70f6b7-a0af-4502-b3d4-908ead3d0edd	9f63c583-79ad-4ddf-bdcd-adb276fca8ca	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:20:07.970037+00
494433a4-7db9-4f22-bb7c-f5ddb120d86c	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:33:45.880935+00
14d2a877-e7be-4440-aabc-9615e81538c9	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	b2a0c082-e81e-4b38-9546-998237fa91c6	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:34:14.310125+00
a2622cde-8270-4da0-94b9-a0429c07e818	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	474fd144-9739-48b9-8247-d950e8fe35e4	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:34:42.902617+00
ce86a991-34b7-4cb3-93a3-23a534405c3d	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	474fd144-9739-48b9-8247-d950e8fe35e4	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:35:02.173227+00
939c1812-ddda-4280-8805-30ff74545ea1	35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	b2a0c082-e81e-4b38-9546-998237fa91c6	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:35:06.584288+00
f4daf0a5-4849-4cd6-9d53-9381a255fde7	49be048e-26a3-4c18-88fe-66952b76964a	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:26:15.685697+00
4879cab7-f271-4fc1-8cda-d507fc7c8a4f	49be048e-26a3-4c18-88fe-66952b76964a	2365e78d-efb9-4284-910b-3d8e753e32ee	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:26:59.378079+00
79a8e94d-ca29-4e3e-a0b5-f21bd174aa44	49be048e-26a3-4c18-88fe-66952b76964a	2365e78d-efb9-4284-910b-3d8e753e32ee	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:27:06.043068+00
b8beee43-44bf-40a2-9408-cf446d30c4ed	f43391dc-e187-4d26-a52e-d5ea13611309	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:24:49.92324+00
62ba0004-d616-4d18-b9f8-a84ee60c2214	f43391dc-e187-4d26-a52e-d5ea13611309	58a95a52-809d-44ec-a80d-7c0efd88469a	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:25:10.834216+00
1533482f-8f8b-4084-908b-eefcb10213be	f43391dc-e187-4d26-a52e-d5ea13611309	58a95a52-809d-44ec-a80d-7c0efd88469a	updated	status	open	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:25:38.798099+00
8158bd49-9ec9-4520-a8ab-839ed412a184	bd7a8a93-61c7-4120-b484-02eb5dd259a8	\N	created	discussion	\N	Discussion created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:27:44.147867+00
a0f41991-bf0a-437c-baff-6bc45507211a	bd7a8a93-61c7-4120-b484-02eb5dd259a8	1b520723-0cb7-405f-9cd4-c513b2c5bbea	created	action_item	\N	Action item created	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:28:26.055459+00
6d9fec85-7864-44aa-95ae-f86635ccb497	bd7a8a93-61c7-4120-b484-02eb5dd259a8	1b520723-0cb7-405f-9cd4-c513b2c5bbea	updated	status	in-progress	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:28:35.988359+00
\.


--
-- Data for Name: iteration_weeks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.iteration_weeks (id, iteration_id, week_index, week_start, week_end, created_at, updated_at) FROM stdin;
62d2c351-888b-46d4-8dd8-b2e9108503bd	7e745b9b-6e75-4616-9df6-d51fb669738e	1	2025-09-09	2025-09-15	2025-09-07 18:32:29.045533+00	2025-09-07 18:32:29.045533+00
e66b42d0-96ac-4b3c-811b-7e0e8a842671	7e745b9b-6e75-4616-9df6-d51fb669738e	2	2025-09-16	2025-09-22	2025-09-07 18:32:29.045533+00	2025-09-07 18:32:29.045533+00
ecccf92a-5c85-45d0-90c6-258e72fcb897	7e745b9b-6e75-4616-9df6-d51fb669738e	3	2025-09-23	2025-09-23	2025-09-07 18:32:29.045533+00	2025-09-07 18:32:29.045533+00
b7beeffe-3a9c-4641-bfc8-464e1f93203f	2de9c56f-6bc6-4db6-908c-ef319ea43bd7	1	2025-09-09	2025-09-15	2025-09-08 16:22:38.008403+00	2025-09-08 16:22:38.008403+00
517712a0-8f7b-4c6f-a68d-510519982f8e	2de9c56f-6bc6-4db6-908c-ef319ea43bd7	2	2025-09-16	2025-09-22	2025-09-08 16:22:38.008403+00	2025-09-08 16:22:38.008403+00
c0f2ee6e-812a-4116-98a5-4f308811be02	2de9c56f-6bc6-4db6-908c-ef319ea43bd7	3	2025-09-23	2025-09-23	2025-09-08 16:22:38.008403+00	2025-09-08 16:22:38.008403+00
4753ffa2-e1cb-4c13-9f7b-902eccbe8ad5	7a147c51-9e58-4822-956f-2148015882c9	1	2025-09-18	2025-09-24	2025-09-11 03:59:24.054873+00	2025-09-11 03:59:24.054873+00
636bdcc7-3ade-41d3-b427-e1ac5dd7eea3	7a147c51-9e58-4822-956f-2148015882c9	2	2025-09-25	2025-09-25	2025-09-11 03:59:24.054873+00	2025-09-11 03:59:24.054873+00
b35f64c7-7f77-4962-8a52-87b3dac9da7f	e900bd14-dcdd-4fbf-8854-95b94a4fcee7	1	2025-09-11	2025-09-17	2025-09-11 06:37:20.362262+00	2025-09-11 06:37:20.362262+00
5da61ea3-3323-4884-b122-b777e5abbb1c	e900bd14-dcdd-4fbf-8854-95b94a4fcee7	2	2025-09-18	2025-09-24	2025-09-11 06:37:20.362262+00	2025-09-11 06:37:20.362262+00
d999247e-94bc-4135-9924-b7e159fc15c9	e900bd14-dcdd-4fbf-8854-95b94a4fcee7	3	2025-09-25	2025-09-25	2025-09-11 06:37:20.362262+00	2025-09-11 06:37:20.362262+00
27b2ffb8-eda3-4295-8248-84b6cc37efbb	7b71fce2-5bb9-4886-a716-b5e047cc6c54	1	2025-09-12	2025-09-18	2025-09-12 05:23:30.342746+00	2025-09-12 05:23:30.342746+00
fd3af584-2cc1-47eb-9ae5-4aa215fbd0c5	7b71fce2-5bb9-4886-a716-b5e047cc6c54	2	2025-09-19	2025-09-25	2025-09-12 05:23:30.342746+00	2025-09-12 05:23:30.342746+00
a4472330-6c05-4963-82c8-20f7bb1172a7	7b71fce2-5bb9-4886-a716-b5e047cc6c54	3	2025-09-26	2025-09-26	2025-09-12 05:23:30.342746+00	2025-09-12 05:23:30.342746+00
\.


--
-- Data for Name: iterations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.iterations (id, project_id, team_id, name, type, start_date, end_date, weeks_count, created_by, created_at, updated_at) FROM stdin;
7e745b9b-6e75-4616-9df6-d51fb669738e	636c6d59-2c07-4e27-a789-9dd4f9db93d1	8e85eab6-9502-4959-bd81-4ca332dcd720	Iteration 1 – Prototype Design & Pilot Feedback	iteration	2025-09-09	2025-09-23	3	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:32:28.936687+00	2025-09-07 18:32:28.936687+00
2de9c56f-6bc6-4db6-908c-ef319ea43bd7	f4554466-37e2-4f52-afb7-174eafd9ac0f	8d1f91f2-b909-4240-ba19-e33f3ca1df87	Iteration Alpha	iteration	2025-09-09	2025-09-23	3	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:22:37.916618+00	2025-09-08 16:22:37.916618+00
7a147c51-9e58-4822-956f-2148015882c9	f4554466-37e2-4f52-afb7-174eafd9ac0f	8d1f91f2-b909-4240-ba19-e33f3ca1df87	Q1	iteration	2025-09-18	2025-09-25	2	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 03:59:23.946998+00	2025-09-11 03:59:23.946998+00
e900bd14-dcdd-4fbf-8854-95b94a4fcee7	c45fc909-075e-4c68-8471-14e78f438149	3e97c539-3b12-4fea-b0fb-a09583c0d33e	20025 Q1-It1	iteration	2025-09-11	2025-09-25	3	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:37:20.275418+00	2025-09-11 06:37:20.275418+00
7b71fce2-5bb9-4886-a716-b5e047cc6c54	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	81af0d12-183e-4a8e-b03b-77e5b27798d1	2024-Q1-PI	iteration	2025-09-12	2025-09-26	3	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:23:30.260232+00	2025-09-12 05:23:30.260232+00
\.


--
-- Data for Name: member_weekly_availability; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.member_weekly_availability (id, iteration_week_id, team_member_id, leaves, availability_percent, effective_capacity, created_at, updated_at, calculated_days_present, calculated_days_total, notes) FROM stdin;
5f04ba36-6522-4e4f-8227-87b1fc182469	4753ffa2-e1cb-4c13-9f7b-902eccbe8ad5	bf9bfae4-e77f-452e-8947-fcb6060e9201	0	80	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	4	5	\N
5cbebb13-3b6c-494e-885b-5d888ffc73a1	636bdcc7-3ade-41d3-b427-e1ac5dd7eea3	bf9bfae4-e77f-452e-8947-fcb6060e9201	0	100	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	5	5	\N
a822fc60-747b-4734-a961-9d27b290833a	4753ffa2-e1cb-4c13-9f7b-902eccbe8ad5	1d343068-5654-4218-93e7-002afda6f3c3	0	100	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	5	5	\N
956afaac-e42c-4117-9cf4-0cba42bb9f30	636bdcc7-3ade-41d3-b427-e1ac5dd7eea3	1d343068-5654-4218-93e7-002afda6f3c3	0	100	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	5	5	\N
4c4d79c8-835c-4b8f-9ed5-07d96ce92ed9	4753ffa2-e1cb-4c13-9f7b-902eccbe8ad5	08fd78f6-b161-4c94-bb9c-3a69b12be552	0	100	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	5	5	\N
733d2891-4f75-43e1-817d-52bed8c92635	636bdcc7-3ade-41d3-b427-e1ac5dd7eea3	08fd78f6-b161-4c94-bb9c-3a69b12be552	0	100	0	2025-09-12 04:11:01.639667+00	2025-09-12 04:11:12.761523+00	5	5	\N
aa1039f9-6bbc-4bfe-83e2-0f73829bb53d	27b2ffb8-eda3-4295-8248-84b6cc37efbb	cea646af-43b4-481f-899e-1f857d68935e	0	80	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	4	5	\N
37c6f39e-e8e6-4b2a-b422-a66e22a65325	fd3af584-2cc1-47eb-9ae5-4aa215fbd0c5	cea646af-43b4-481f-899e-1f857d68935e	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
2a74f7f5-a690-44f1-840e-0c5914aa533f	a4472330-6c05-4963-82c8-20f7bb1172a7	cea646af-43b4-481f-899e-1f857d68935e	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
7f3a8a16-04f6-42f3-bb83-ef48b9124acd	27b2ffb8-eda3-4295-8248-84b6cc37efbb	9c35ed58-376e-418b-8c43-0eaca7917ae5	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
518710de-2e20-4492-a83e-ec7c65401de9	fd3af584-2cc1-47eb-9ae5-4aa215fbd0c5	9c35ed58-376e-418b-8c43-0eaca7917ae5	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
6ca9a239-89b8-4fb8-995d-43f99007dbf2	a4472330-6c05-4963-82c8-20f7bb1172a7	9c35ed58-376e-418b-8c43-0eaca7917ae5	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
a20c8221-4ae6-47da-8a7e-feafabb8f7c3	27b2ffb8-eda3-4295-8248-84b6cc37efbb	7b37e7c9-1acc-4da5-b26e-a2f2062b7dd6	0	60	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	3	5	\N
c273b39c-d7c8-4356-bc3f-2f8661912b73	fd3af584-2cc1-47eb-9ae5-4aa215fbd0c5	7b37e7c9-1acc-4da5-b26e-a2f2062b7dd6	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
b9edb842-0e0a-4672-8742-b928e24bf650	a4472330-6c05-4963-82c8-20f7bb1172a7	7b37e7c9-1acc-4da5-b26e-a2f2062b7dd6	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
67c63a0e-badd-467d-916f-fe3c28e909f3	27b2ffb8-eda3-4295-8248-84b6cc37efbb	8df01a73-09a2-4ac4-b3bd-cc5817edceaf	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
27eea276-df39-4c46-8b51-762c004eef5b	fd3af584-2cc1-47eb-9ae5-4aa215fbd0c5	8df01a73-09a2-4ac4-b3bd-cc5817edceaf	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
1f34d3b6-7104-4e22-bf07-ec8488de3cd4	a4472330-6c05-4963-82c8-20f7bb1172a7	8df01a73-09a2-4ac4-b3bd-cc5817edceaf	0	100	0	2025-09-12 05:24:14.277506+00	2025-09-12 05:24:14.256+00	5	5	\N
\.


--
-- Data for Name: milestones; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.milestones (id, project_id, name, description, due_date, status, created_at, updated_at, created_by, department_id) FROM stdin;
23637ae1-94be-4671-bb77-c6363351156e	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Cockpit Modernization Design & Prototype Completion	\N	2025-12-06	planning	2025-09-07 18:12:35.695385+00	2025-09-07 18:12:35.695385+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
029c0318-0ae0-4092-a988-44cbdfed136f	636c6d59-2c07-4e27-a789-9dd4f9db93d1	System Integration & Certification Readiness	\N	2025-12-06	planning	2025-09-07 18:12:35.695385+00	2025-09-07 18:12:35.695385+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
6f6e9b56-0eca-4dba-aa2f-e89fd431b708	f4554466-37e2-4f52-afb7-174eafd9ac0f	G1	\N	2025-12-07	planning	2025-09-08 16:08:41.778413+00	2025-09-08 16:08:41.778413+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3230a2f1-b8be-48d2-9582-a97ebee4ee13	f4554466-37e2-4f52-afb7-174eafd9ac0f	G2	\N	2025-12-07	planning	2025-09-08 16:08:41.778413+00	2025-09-08 16:08:41.778413+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
2371132c-5f0e-4168-bfd5-5190cf8d0b99	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	Milestone 1	\N	2025-12-09	planning	2025-09-10 12:50:45.839899+00	2025-09-10 12:50:45.839899+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
b5578fb4-4398-433e-accc-186bbaaf9807	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	M2	\N	2025-10-21	planning	2025-09-10 12:50:45.839899+00	2025-09-10 12:50:45.839899+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
70cabb31-a83f-4d36-919b-6f42a4a28652	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	M3	\N	2025-09-23	planning	2025-09-10 12:50:45.839899+00	2025-09-10 12:50:45.839899+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
352bc7fa-49b1-442a-84da-7b0535421418	c45fc909-075e-4c68-8471-14e78f438149	G1	\N	2025-12-10	planning	2025-09-11 06:25:32.836413+00	2025-09-11 06:25:32.836413+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
692b3fad-d190-485f-8f2f-e5bc57bd69b8	c45fc909-075e-4c68-8471-14e78f438149	G2	\N	2025-12-10	planning	2025-09-11 06:25:32.836413+00	2025-09-11 06:25:32.836413+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
ba2c25e4-d361-4260-8df6-ff7b419350b4	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	G1	\N	2025-12-11	planning	2025-09-12 05:20:00.302949+00	2025-09-12 05:20:00.302949+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
62f55c4e-312a-488e-bc21-06968809d276	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	G2	\N	2025-12-11	planning	2025-09-12 05:20:00.302949+00	2025-09-12 05:20:00.302949+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
2c4cde6c-f3df-4d15-bc4f-4b962306fd7f	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	G3	\N	2025-12-11	planning	2025-09-12 05:20:00.302949+00	2025-09-12 05:20:00.302949+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
6d244fcc-88d0-41be-b702-03534bea28c0	0dda829d-8923-4b93-9f24-a728d198803d	G1	\N	2025-12-11	planning	2025-09-12 06:20:09.758338+00	2025-09-12 06:20:09.758338+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	0dda829d-8923-4b93-9f24-a728d198803d	G2	\N	2025-12-11	planning	2025-09-12 06:20:09.758338+00	2025-09-12 06:20:09.758338+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
b6ddd165-04ed-44df-9126-1825d665f2ed	37e8b9a1-5209-4428-804f-6a879d557bd6	MG1	\N	2025-12-11	planning	2025-09-12 12:15:56.10569+00	2025-09-12 12:15:56.10569+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
6129b78b-32d1-46a7-be85-0f10fbb55d57	37e8b9a1-5209-4428-804f-6a879d557bd6	MG2	\N	2025-12-11	planning	2025-09-12 12:15:56.10569+00	2025-09-12 12:15:56.10569+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
c39f42d3-0f6e-4a75-9fb4-a60283b6a72a	37e8b9a1-5209-4428-804f-6a879d557bd6	MG3	\N	2025-12-11	planning	2025-09-12 12:15:56.10569+00	2025-09-12 12:15:56.10569+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
\.


--
-- Data for Name: module_access_audit; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.module_access_audit (id, user_id, project_id, module, access_type, access_level, granted_by, "timestamp", metadata) FROM stdin;
a8062dfe-7fcb-4519-a984-3bbaa9a6f392	6dc39f1e-2af3-4b78-8488-317d90f4f538	f42f8463-7779-4439-9894-c237394ba57b	retrospectives	accessed	read	\N	2025-08-30 13:44:35.518156+00	{}
b5e6e4bc-5bdd-4223-89d9-675d4963aa75	6dc39f1e-2af3-4b78-8488-317d90f4f538	f42f8463-7779-4439-9894-c237394ba57b	roadmap	accessed	read	\N	2025-08-30 13:44:36.465264+00	{}
cd404c40-343b-4d89-a546-878b388ca618	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	roadmap	accessed	read	\N	2025-09-05 04:44:47.304672+00	{}
d85f2fb3-c947-4d21-b262-955e90d3dc3d	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	roadmap	accessed	read	\N	2025-09-05 05:13:10.252167+00	{}
cdb36e31-fb45-4c41-91b0-55cdb412facb	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	roadmap	accessed	read	\N	2025-09-05 05:26:05.029466+00	{}
c6a009e2-25f3-4936-a73e-234ce02650d4	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	roadmap	accessed	read	\N	2025-09-05 06:18:18.787137+00	{}
5494c7b0-e199-4d9d-ac29-bd9b342f616e	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	retrospectives	accessed	read	\N	2025-09-05 06:18:23.780548+00	{}
4639b16a-6cfb-4207-b573-8b07000a6b05	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	overview	accessed	read	\N	2025-09-05 06:22:15.784704+00	{}
225edb22-175a-422b-ae8a-0c1fd3e2a3be	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	roadmap	accessed	read	\N	2025-09-05 10:46:38.729594+00	{}
a319a66c-64b3-48eb-9466-a9eb972a7123	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:46:55.046973+00	{}
178693a3-5bbc-4638-9df0-9195b3e776c2	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:47:22.006307+00	{}
9b40113f-4d8a-40e5-914a-936e27437c58	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:49:01.849238+00	{}
24db97ee-2f49-4f76-b64e-6d6113aae02a	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:51:38.393119+00	{}
7ccb46e4-f827-4f74-acbe-fd75a777060c	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:55:16.117303+00	{}
4847b28f-cb39-426e-ac8d-e44dfc70f7bd	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 10:59:59.70967+00	{}
6049dd3c-a7b8-42f4-ba30-203e38143bfd	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 11:03:22.108567+00	{}
eaf9c900-6cf3-4869-8a35-5c4978131f9c	6dc39f1e-2af3-4b78-8488-317d90f4f538	2d4540b1-25cd-4424-84fe-ba343a042eeb	team_capacity	accessed	read	\N	2025-09-05 11:04:24.098474+00	{}
615453ae-e774-465d-bbad-adab5d35b8e6	6dc39f1e-2af3-4b78-8488-317d90f4f538	67c23315-401b-4c4d-9992-5bc3424e824a	overview	accessed	read	\N	2025-09-07 13:55:24.554871+00	{}
df3d30a0-498f-4d1d-be7f-1966f6f4f3c8	6dc39f1e-2af3-4b78-8488-317d90f4f538	cd271252-4110-4493-b79d-d202ef88e824	roadmap	accessed	read	\N	2025-09-07 13:57:44.265258+00	{}
b1386d99-8d8a-48e2-a8f0-5a5f347f5f5e	6dc39f1e-2af3-4b78-8488-317d90f4f538	cd271252-4110-4493-b79d-d202ef88e824	tasks_milestones	accessed	read	\N	2025-09-07 13:57:47.429944+00	{}
0179e675-748b-4fe1-8c65-74185bcf0bee	6dc39f1e-2af3-4b78-8488-317d90f4f538	cd271252-4110-4493-b79d-d202ef88e824	tasks_milestones	accessed	read	\N	2025-09-07 14:28:48.508802+00	{}
d148e425-1955-489f-a6e7-c436c599200d	6dc39f1e-2af3-4b78-8488-317d90f4f538	cd271252-4110-4493-b79d-d202ef88e824	roadmap	accessed	read	\N	2025-09-07 14:29:09.716505+00	{}
b07cde5e-bb6b-4073-b206-b352d72861cb	6dc39f1e-2af3-4b78-8488-317d90f4f538	cd271252-4110-4493-b79d-d202ef88e824	overview	accessed	read	\N	2025-09-07 14:29:15.682522+00	{}
062ca671-9d32-443c-9f9f-f8848578916a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 14:33:03.937548+00	{}
8ca87c2e-7c92-431b-8b5c-7d152d15449b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 14:33:10.137042+00	{}
d7cb8539-6ad3-4b6a-be3d-c4acc44899e3	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 14:40:03.500399+00	{}
aabd3b6b-06db-4010-8611-80971a7c7969	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:40:13.121822+00	{}
d8b9fee3-1873-46db-8e1f-3353ac3eb922	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:40:18.856391+00	{}
d3e5f391-1554-4baa-9556-9b75efb80fe9	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 14:40:37.16398+00	{}
b8dae264-cd70-45c3-b819-37a2af1ca214	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:40:41.271202+00	{}
0a7ec4f9-f710-474f-afed-134c1aa7d532	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:40:55.885003+00	{}
2f435e89-1db7-4906-b89f-5a181cdc7076	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:42:07.639753+00	{}
c907e1fd-5776-4567-9432-a0a1d1069532	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 14:43:33.589699+00	{}
83620070-7d35-4dce-b1e8-e955bb863085	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:43:36.371519+00	{}
6d04f23c-be60-4e1f-82bd-723293b3f015	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 14:43:41.167137+00	{}
3a397fc6-8c66-44fb-995c-9de02fc23b11	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 14:54:09.414276+00	{}
613744de-9159-4ce3-a1c2-6e6bc51cc79e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:54:50.252602+00	{}
78f7d5e5-9041-4abe-a5e7-328dc4da73d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:55:18.624626+00	{}
395db8f0-8883-4056-ae1c-5b6b1571a483	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:55:38.771991+00	{}
e6c0853c-d36f-448c-8dd4-a1e79cd5610b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:55:57.967327+00	{}
1370eda0-db99-4f9d-9e26-af394bf3d9bd	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:56:05.782237+00	{}
2900495b-87fe-428b-a2ea-31747b5bc86b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:56:30.010743+00	{}
ce96399a-19bf-4165-a1b5-6605a202f2dd	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:56:30.498906+00	{}
3b8ae504-9ce4-4675-9b55-3077286fa122	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:58:02.852968+00	{}
67f60d02-9dc2-4b7e-aaa2-63f8bec4b8ba	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 14:58:26.250786+00	{}
379d145b-71d2-4608-9913-a31276fc3102	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:00:08.931268+00	{}
f6304e42-16be-4e66-908d-f76ed6fd762c	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:00:18.945205+00	{}
7419be54-0581-4134-9fc8-55538067e9ec	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:00:54.618147+00	{}
7600d17e-7c8b-42fa-b82d-9b64116ba85a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:01:10.656249+00	{}
f9aa1a7b-5a7b-4e7f-a3ac-f49620cb8b53	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:01:15.170348+00	{}
42af054d-706c-4e39-9225-d5779fb88052	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:01:58.912816+00	{}
dd04719f-6b13-44ba-9124-85f1272f1c15	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 15:02:07.720186+00	{}
454e7d22-00cb-4ed4-a63f-8ec8f343416b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:02:08.997804+00	{}
17dee9e8-c52f-44e5-8ee2-992de4c2f274	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 15:02:13.191585+00	{}
9a2335eb-d5c5-4a8c-8f8f-0da18468e622	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:02:25.453179+00	{}
887f1521-5629-43ad-b4d9-09330b05a02d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 15:02:28.23092+00	{}
25b260c7-b1d3-449d-86bc-f39efbc46733	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 15:02:41.407482+00	{}
bdb91d82-986f-4f80-91a2-18c5a8fb47fe	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	task_backlog	accessed	read	\N	2025-09-07 15:03:06.253914+00	{}
9caffac2-d1d5-4445-acbe-a9655370fc84	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 15:03:17.943752+00	{}
c9e5a347-ae83-4037-8ac1-13b4d3096f39	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:04:28.593868+00	{}
59f51374-dbca-42cf-9d68-750e06d11afa	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	task_backlog	accessed	read	\N	2025-09-07 15:04:31.335932+00	{}
d6d792a3-aa50-489b-9c2d-d889b3434a03	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 15:04:35.744401+00	{}
f5aceaca-4ca6-4da5-91b6-d5460292664b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:05:33.254772+00	{}
b7dc225b-d6a9-4dd5-8b1e-ebbee17f2a77	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:06:59.123425+00	{}
d2564716-d513-40ee-a73d-9acf883b456a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:10.805357+00	{}
0d40f4b4-08a5-4236-90cb-991ca0cfb865	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:12.83758+00	{}
07cd10f7-bf15-4ce9-aa5b-5e27d85a4f3a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:19.57528+00	{}
e96b5d08-e16f-4265-92e3-53ffc13d5e80	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:27.098329+00	{}
e82ed2bb-0f29-477e-b147-21bf6d2f2e6b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:30.909264+00	{}
bda6f22c-135f-4007-b165-2bd10b238435	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:35.07947+00	{}
953cd662-e6ac-4163-909b-b616ef7d3963	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 15:07:58.547379+00	{}
75406450-1224-49d9-964f-5be3ce52237c	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:07:22.620205+00	{}
1d604c2e-7a6c-41b8-bf10-c5c2201529bb	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 15:07:47.037614+00	{}
14b48092-8371-4054-92ae-45e85987bf73	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:11:37.262961+00	{}
2eb3f8ce-5b44-412a-98f4-46f7bef20e22	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:11:47.345066+00	{}
0f2dbb33-510a-424e-8f0c-16303105d4b9	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:11:50.045833+00	{}
2fb6382c-e5db-4f31-a8db-ad22d98c9fcc	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:15.951117+00	{}
42cf74f3-083c-4d18-acae-9c10d53a2e31	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:26.157332+00	{}
eab58c60-aa29-4daa-a97f-a21f9b64b8e9	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:26.301625+00	{}
87f37699-56ca-4275-a994-77f0b9711df4	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:34.374966+00	{}
35fd47ad-f650-4ac0-9594-1c57642b1cd5	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:37.31628+00	{}
53d17aac-ef9b-457b-9aae-11d5fcb19b2e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:41.171758+00	{}
4e2868c6-5c1f-4c9c-b8aa-52e246e83eaa	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:14:46.024371+00	{}
91036fe3-08da-41bc-9eb9-bee95e42f0aa	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:16:09.319337+00	{}
9214c6a4-403e-4148-aa3b-7afbaa58caec	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:16:22.612539+00	{}
b63e82e9-e5f9-4682-97c9-2f7f6f31ea8e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:16:55.280274+00	{}
0a6c825d-e75a-4107-b923-63b6d397182a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:16:56.508462+00	{}
64a7adb5-4f98-45e8-bc02-29585c8b991e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:19:31.767944+00	{}
7913e348-0183-43b5-b10a-8bfaaa7f6d01	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 15:19:43.477904+00	{}
a7d36e76-9fb4-4b5b-a9d6-ba56d3101326	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:23:27.495707+00	{}
33a2ec39-8d2a-4206-aedb-faa8c25f9713	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:23:37.961473+00	{}
9ddb9ecf-7d13-44d0-9884-7ad73bbd27d4	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 15:23:47.927771+00	{}
fd6d134c-3aeb-4dd1-a213-4e16a9c27fa7	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:23:52.70723+00	{}
edc3392b-9907-4d6c-91ec-72cfd4947a8f	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:24:18.164551+00	{}
25e88777-5da9-44a9-9fe6-d435081ee1dc	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:27:29.187128+00	{}
5787a961-336c-49b3-9d46-7737c2c1a3da	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 15:33:47.717898+00	{}
807acd5d-c602-4158-8ee0-8f872da85a82	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:34:43.960618+00	{}
86b50c2e-c4f1-4500-8dde-b362f722a807	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 15:42:05.557136+00	{}
447bc7e1-6032-462f-9ee0-3aa252767abb	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 15:45:03.52889+00	{}
5e4af2a9-6d31-42bb-ac69-167f94203263	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:46:53.805574+00	{}
7e3ecdc9-c8c2-473f-b82d-691e8ee6b69d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:47:00.641157+00	{}
fe6309b6-4ef3-4810-ba21-3ee0d452887f	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:48:12.204938+00	{}
158c91e3-8f58-4232-99a8-de0666fe876b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:50:15.41063+00	{}
2a5f1b97-5f56-44a5-8215-60b46460d1da	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 15:50:40.028071+00	{}
8217ed3b-fe0a-4709-85f4-02877a18c5db	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:53:26.071974+00	{}
7efd8875-b717-4e2c-a9de-5fc1e6668a46	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 15:54:10.018389+00	{}
cd87b7fe-9cb9-4fd3-a0a0-3f9cccf72851	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 15:54:30.188049+00	{}
d6d4200a-729f-4e97-bda1-97650a3f4c17	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 15:55:04.22101+00	{}
5002c706-95ff-4473-b7ef-28fdb1e75ae9	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 15:55:08.316754+00	{}
ee3c236f-dec6-4d2a-b5df-9db903e812a5	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 15:55:13.869304+00	{}
f483fb96-434e-4e05-a5d3-208f27de2c7c	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	kanban	accessed	write	\N	2025-09-07 15:55:17.694523+00	{}
803179fc-1dcc-4716-8e7d-8e34aae7613b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 15:55:25.486325+00	{}
92c0de58-6ae4-4409-99b0-dd820cfe298d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 15:55:29.49519+00	{}
d22e2e3f-431b-49c9-940e-cac51af42aab	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 15:55:33.029794+00	{}
83cc4769-e9f8-45f7-884b-1e10c7492399	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 16:02:28.381907+00	{}
d3e53333-3896-41c5-87b4-93c484246dd4	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:02:31.877187+00	{}
fe3761ec-ae0c-4b72-9d1d-25a69483e7c2	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 16:05:53.489555+00	{}
ecb2b169-5802-4470-a836-380392cfe944	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:08:56.399884+00	{}
99db6454-9637-4063-ad8b-a12e41ab535a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:09:15.712136+00	{}
e95a61b2-ec08-4d11-a58c-0f4d3e72e1b6	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:10:12.208732+00	{}
37cdd7f9-bbd5-41e8-aa8f-8d931e2375d2	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 16:10:22.321034+00	{}
05c5745e-6f91-4954-8edf-8bf5d734ad1d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	kanban	accessed	write	\N	2025-09-07 16:10:27.85728+00	{}
c76f676a-4ac0-4939-a8b2-e24b3ca4a4ff	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 16:10:36.613973+00	{}
a2635fe6-05c7-4ec3-8b19-f5b04b5a368d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 16:10:41.276732+00	{}
f2bca427-025c-4add-aa7e-860ff0921542	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 16:10:45.303494+00	{}
b6bb9b92-4df9-463f-a26a-e64517198a97	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:10:47.423849+00	{}
0dd624f4-e82d-4893-b065-195efa24255e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:11:43.100181+00	{}
49808625-7bd8-4d60-a436-ade8f6b6e3bd	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:11:45.331389+00	{}
5cd13e57-be80-4b7e-bac8-1273401495ce	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 16:11:49.329668+00	{}
6f9ce622-bf5f-4882-b392-692e04031742	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	roadmap	accessed	read	\N	2025-09-07 16:11:51.44891+00	{}
a2356553-3f19-4ee6-bdfd-8a0d8092233d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	kanban	accessed	write	\N	2025-09-07 16:11:53.942283+00	{}
5d028fa3-4868-4b73-8ab2-cd9cfa48392d	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 16:11:57.337444+00	{}
4bfc94db-5cca-47c5-aac6-29ec165b78af	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 16:12:01.59753+00	{}
92c112e9-77a8-4276-af74-13639e3379db	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 16:12:05.07444+00	{}
19e6b4de-7e6d-476e-ba83-8274716e1e17	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	task_backlog	accessed	read	\N	2025-09-07 16:12:06.269819+00	{}
474f3862-563d-4a58-b08d-a8c513a90361	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:12:07.790484+00	{}
1ef393ac-578d-43e0-a9ae-1fcafcd016c6	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	retrospectives	accessed	read	\N	2025-09-07 16:12:08.611473+00	{}
e6ab25ed-dbe3-477a-8c19-993df5306b1e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:12:11.213605+00	{}
6e8625ff-f18f-4f7c-9bdd-0a81d0b5f7fc	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:12:28.64904+00	{}
0aba97fa-e8d3-4c74-bfa7-2a21f99dc78e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:23:39.974103+00	{}
d1becb29-ee6f-4e6f-8afc-d11fe68e870c	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:25:03.236602+00	{}
7bea795f-2d27-4013-8f3b-53f716bf7595	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 16:26:11.774611+00	{}
a207ac85-1955-43b4-beb3-3d40def6d5a8	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	kanban	accessed	write	\N	2025-09-07 16:26:50.315804+00	{}
2ae73a6e-e5e7-46b7-95f2-7af7e9707783	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	stakeholders	accessed	read	\N	2025-09-07 16:27:09.445135+00	{}
7342c863-fcfd-4d38-bdc3-a996611bb94a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	overview	accessed	read	\N	2025-09-07 16:27:25.564371+00	{}
ee2e5a8c-13ba-4343-91ba-201892fccace	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 16:27:27.213177+00	{}
db7a71d9-92f8-4ff0-a9e1-b616329ce177	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	discussions	accessed	read	\N	2025-09-07 16:28:24.314354+00	{}
66edbe3e-5420-4adf-89dd-28660f64126f	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	task_backlog	accessed	read	\N	2025-09-07 16:29:13.553003+00	{}
507513ae-55be-4217-8520-c60165eed856	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:29:27.37784+00	{}
e54b43c9-cd38-4a69-ab5b-2bec4ee86faf	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:31:47.801244+00	{}
a9503dce-c851-4311-be41-c4fc3ed4dc50	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	retrospectives	accessed	read	\N	2025-09-07 16:33:08.606819+00	{}
75733414-59e6-430b-849b-7858d3613922	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:33:10.199535+00	{}
674eddfc-dcc1-491b-8c48-3f9b4f3ff06a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:33:51.405628+00	{}
c799a89b-0254-46aa-a682-afa530dc4100	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	retrospectives	accessed	read	\N	2025-09-07 16:33:52.191732+00	{}
34870c1e-1337-4206-bed2-71bdde6872c8	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	risk_register	accessed	read	\N	2025-09-07 16:33:59.519133+00	{}
a85fe78f-4265-4d3e-94fb-33e4c006b039	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	retrospectives	accessed	read	\N	2025-09-07 16:34:02.16445+00	{}
84769d7f-19be-4f82-b220-81beaf3c202c	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	task_backlog	accessed	read	\N	2025-09-07 16:34:14.892081+00	{}
5aa8a6cf-f249-4fe9-aa50-d4ee3e000828	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:34:51.118601+00	{}
57f2b387-9148-4d96-ac1b-41a9bc92db85	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	budget	accessed	read	\N	2025-09-07 16:37:40.768195+00	{}
c59f64b8-06a5-4be0-a956-2b8f0b502a33	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:37:43.729734+00	{}
6f854fda-5e68-4296-b42b-be7cdb947bac	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:39:38.525187+00	{}
b95fe9d4-015f-4fa3-81b2-9959501087af	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:43:12.184523+00	{}
3fb50257-4429-4687-b5f8-7bb171a16204	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:52:47.655955+00	{}
5ac20e19-1cc0-46b7-ab79-dd143c093c3b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:54:03.406045+00	{}
31ab836b-d891-4141-9a95-e3c10950006a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:54:24.76613+00	{}
a1ed5b50-c717-45e3-bed0-72cb1669b2af	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 16:56:06.988092+00	{}
4a7ff921-b175-4470-9ede-87ddb06a4a5b	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:57:14.467827+00	{}
7dc68995-3f7d-4ce5-ab8d-60f640786506	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 16:57:51.304307+00	{}
c1857928-2eeb-4a7a-aaef-ae0687e6107f	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 17:01:23.993432+00	{}
305ad1e3-542f-4c26-84e8-d6a1a4633db2	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 17:02:01.650964+00	{}
00e7b6ea-8f38-4ca2-9cfd-ad052a360635	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 17:02:22.580226+00	{}
59bccef4-cce3-4c4d-9739-4a3d9a81cb7a	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	tasks_milestones	accessed	read	\N	2025-09-07 17:03:56.835843+00	{}
ea163db7-4a2c-4845-ae23-0265231f4bf1	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 17:06:49.344629+00	{}
83a1af01-91a0-4a30-88cf-e4c12f930a8e	6dc39f1e-2af3-4b78-8488-317d90f4f538	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	team_capacity	accessed	read	\N	2025-09-07 17:07:00.578184+00	{}
3825297a-9b27-4d84-92ce-2a2d8bad35f1	6dc39f1e-2af3-4b78-8488-317d90f4f538	c42b25ec-0e4f-41ed-9f0e-749d893170a9	tasks_milestones	accessed	read	\N	2025-09-07 17:31:34.917237+00	{}
0941437f-955a-4db4-9b32-e4a090459214	6dc39f1e-2af3-4b78-8488-317d90f4f538	c42b25ec-0e4f-41ed-9f0e-749d893170a9	roadmap	accessed	read	\N	2025-09-07 17:31:36.270906+00	{}
398b5b58-45b7-4d5b-be02-fad2b6b3e9fc	6dc39f1e-2af3-4b78-8488-317d90f4f538	c42b25ec-0e4f-41ed-9f0e-749d893170a9	overview	accessed	read	\N	2025-09-07 17:31:45.096248+00	{}
d048a2b9-29dd-4b93-84fa-13317ead8f95	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	budget	accessed	read	\N	2025-09-07 17:32:09.823506+00	{}
6fe5ed15-33c5-4109-a89c-f732150b9573	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	stakeholders	accessed	read	\N	2025-09-07 17:32:16.001105+00	{}
220fc4be-a4e0-4e25-a981-4ffea3305e83	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	risk_register	accessed	read	\N	2025-09-07 17:32:18.48381+00	{}
8f6e48e9-b24f-4c55-966f-fb524398191e	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	discussions	accessed	read	\N	2025-09-07 17:32:20.13738+00	{}
69896b3c-ce84-42c5-b395-be1a40a84389	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	tasks_milestones	accessed	read	\N	2025-09-07 17:32:23.449175+00	{}
684c7629-0c88-4c24-9f24-875dbf1b151a	6dc39f1e-2af3-4b78-8488-317d90f4f538	2f6c090a-7905-4282-be1e-d0ee5af4bfab	overview	accessed	read	\N	2025-09-07 17:32:27.940856+00	{}
8fcfce79-6150-4fb6-a928-ef0b30f3dca4	6dc39f1e-2af3-4b78-8488-317d90f4f538	45c4b68e-6741-437c-b204-72f3252e3ba6	tasks_milestones	accessed	read	\N	2025-09-07 18:06:12.504114+00	{}
ff99128a-b561-4806-9ff9-25cca7fe44c5	6dc39f1e-2af3-4b78-8488-317d90f4f538	45c4b68e-6741-437c-b204-72f3252e3ba6	roadmap	accessed	read	\N	2025-09-07 18:06:13.508497+00	{}
d4706473-29c5-4446-a81c-a1bcbf26bb73	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	budget	accessed	read	\N	2025-09-07 18:13:13.304888+00	{}
2101c6af-a27a-447b-9c1c-bff4bd1341b7	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-07 18:16:59.294858+00	{}
7ba2f202-0a85-42b5-a933-fe811a8e87ad	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-07 18:17:01.353358+00	{}
c86ce1b1-7b70-4057-bc36-22eed2ac2785	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	stakeholders	accessed	read	\N	2025-09-07 18:17:18.067966+00	{}
0bc98a30-5bfa-4ea0-b06a-5c87fe211897	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	risk_register	accessed	read	\N	2025-09-07 18:20:23.769782+00	{}
dd5ae5ef-4b78-4f9e-88fe-dd1e61abaa1b	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	discussions	accessed	read	\N	2025-09-07 18:24:57.758553+00	{}
51bde8a1-fb2b-4ed2-a83b-d7f0909157af	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	task_backlog	accessed	read	\N	2025-09-07 18:28:59.869296+00	{}
c579734a-1e40-4e18-be31-47d438f20aa7	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	team_capacity	accessed	read	\N	2025-09-07 18:29:27.9712+00	{}
61518b5d-6b11-4af8-9ce2-f260a0478da6	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-07 18:33:02.531347+00	{}
0e0671c7-a4bf-48e8-b334-bece33f8907a	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	budget	accessed	read	\N	2025-09-07 18:33:20.748403+00	{}
f3d712be-953f-46a1-b402-1e38f71a8ddb	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-07 18:33:27.019109+00	{}
389eba51-d041-4bf5-b090-acb7ab7f7e57	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-07 18:33:37.648083+00	{}
d3a609b7-25be-40d0-8918-7bbb429006cb	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-07 18:35:02.855108+00	{}
e24faa57-734f-4ba3-afc5-265e923ac732	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-07 18:35:05.97601+00	{}
4d77b9fc-e0c4-458e-8c3b-4727c43132ba	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-07 18:35:11.47782+00	{}
c4e85471-6334-4853-88fd-347e3753a3a6	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-07 18:35:38.130689+00	{}
f3f40de9-98ee-4e6a-9cc5-5804675a557f	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-07 18:36:26.290044+00	{}
bf56960c-499b-45b4-b2c0-a539bb154ac7	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-08 15:20:53.823731+00	{}
fefe2733-1225-4f7f-ae13-27cfbae93a22	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:20:57.760499+00	{}
7c0a7a09-f77b-42bb-bd32-b8be78a4c567	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	retrospectives	accessed	read	\N	2025-09-08 15:24:56.012737+00	{}
26717e67-30fb-438d-8dc5-69bdbf51019d	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	stakeholders	accessed	read	\N	2025-09-08 15:24:15.976571+00	{}
9370faa6-6db7-4751-af9f-bbf6c94ebfb3	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	team_capacity	accessed	read	\N	2025-09-08 15:24:30.358095+00	{}
809c5a44-fc05-41cb-9485-b2c9b3794c3e	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:25:05.905508+00	{}
8ffc32ef-0ee6-4d3f-b280-97aabe8ec5b2	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-08 15:43:27.274278+00	{}
8aa00ba7-9174-42cd-8470-42726b8b68d3	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:43:32.226171+00	{}
b0dd762c-8511-4a7a-b393-fd10046d5c55	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:44:41.122213+00	{}
a11ad7a8-035f-4165-be08-2199ff33dc2a	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:44:51.259658+00	{}
f778442f-485a-4e4d-801e-6923b1d7df5a	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-08 15:45:08.912863+00	{}
cf25268d-8d98-4bab-936e-f5bc523fad17	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:45:12.154232+00	{}
fb38e8cb-03d2-4d50-94fc-522da1d98384	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	budget	accessed	read	\N	2025-09-08 15:46:15.467712+00	{}
1145ebd5-b329-495f-9025-e31cda461d5a	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:47:08.244258+00	{}
8b2dcf85-1646-45ba-83cd-e1d0c0bb4785	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-08 15:51:02.860111+00	{}
2c1fc6f1-a81b-4661-be09-0c12639834d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:51:05.901379+00	{}
4613f2fb-8393-49b3-ae57-b43908d261e1	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:53:07.977067+00	{}
cebfc064-3149-4352-9677-dd909388cd2f	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:53:21.165817+00	{}
fc7adebe-dd50-41b7-b4b3-279bc54895dc	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:54:44.959665+00	{}
48291ad8-3fd8-4d7b-99c3-08049c68072d	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	roadmap	accessed	read	\N	2025-09-08 15:57:17.230543+00	{}
fe4596fc-d599-4157-a490-96c9e56ee782	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:57:26.649247+00	{}
577464a3-781b-46be-b273-db50ac4d6853	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:57:54.055186+00	{}
4a06c280-eb31-4448-89bc-7a7728bc06d8	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	tasks_milestones	accessed	read	\N	2025-09-08 15:58:22.481333+00	{}
feb14fd2-e944-4d89-8cf6-dfdd39fe6b7a	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	overview	accessed	read	\N	2025-09-08 15:58:47.298486+00	{}
8666dbf9-6f5c-401b-be99-bb9a074784f6	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	risk_register	accessed	read	\N	2025-09-08 15:59:16.277619+00	{}
2307d9d7-bfd5-4989-aa3e-d1daaba066d9	6dc39f1e-2af3-4b78-8488-317d90f4f538	636c6d59-2c07-4e27-a789-9dd4f9db93d1	team_capacity	accessed	read	\N	2025-09-08 15:59:36.538911+00	{}
d7170e2f-690a-45db-823b-3b6002a56b05	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-08 16:09:44.174+00	{}
64cce574-a3c3-4515-a12a-b3ec578d1ddf	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-08 16:09:47.336288+00	{}
bd544f59-eba7-4e4c-9cc1-a13e5aef36c5	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-08 16:09:48.826925+00	{}
172b5dc7-9a0a-4789-8ad8-0fbdce2d895e	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-08 16:10:52.370833+00	{}
2011bf8f-d5c6-4cb3-8ff5-a866516ba165	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	kanban	accessed	write	\N	2025-09-08 16:10:53.018095+00	{}
fbbb50db-79c9-4cef-a56b-b9c146004ec6	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:11:41.479514+00	{}
8d0073eb-2da6-4636-a71d-6421b0f48bc5	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	stakeholders	accessed	read	\N	2025-09-08 16:11:52.929287+00	{}
7b955b8c-e9ee-4a6a-96e8-bfe7d8b89032	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-08 16:13:22.094773+00	{}
9b849115-2754-4f03-bad6-b209753f4428	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:14:10.486166+00	{}
aa11353a-15d9-4c3c-a971-ebd34bda78ac	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	budget	accessed	read	\N	2025-09-08 16:14:37.23314+00	{}
9b0e3176-ae4a-4fb2-9325-94f7330c41e6	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:15:24.274176+00	{}
670527ae-445e-4da8-995a-25273124c2b8	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:15:58.035485+00	{}
894f3bee-2d7c-4a68-b7a4-df6fcd4c5410	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	risk_register	accessed	read	\N	2025-09-08 16:16:36.545077+00	{}
799db095-5bf9-4011-a340-669329f087c3	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	budget	accessed	read	\N	2025-09-08 16:17:41.45353+00	{}
3de553a7-34e7-4e77-9c8f-3e03292fa599	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:17:42.854904+00	{}
71c730a1-0c43-49c3-81a6-9a8ff2003d42	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	risk_register	accessed	read	\N	2025-09-08 16:18:00.245309+00	{}
67e66632-1a3d-46e9-98cf-1a5bbb538959	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:18:13.05691+00	{}
19f33415-9bb9-43eb-95d9-aa3bf3a51acb	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	discussions	accessed	read	\N	2025-09-08 16:18:21.8452+00	{}
ccbccbf1-a5e9-4bda-84ed-f72af354b172	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	task_backlog	accessed	read	\N	2025-09-08 16:20:06.50556+00	{}
37d7e5cb-3806-4839-8d96-aa5a76cb2803	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	discussions	accessed	read	\N	2025-09-08 16:20:10.599657+00	{}
5b43be61-c11d-41b1-a941-67868bde77f3	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	task_backlog	accessed	read	\N	2025-09-08 16:20:15.071607+00	{}
f45e5eb7-f82c-465c-bb44-c5f7679f0e3d	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-08 16:20:28.475907+00	{}
f5425736-1554-48f3-8be3-64c32e6f349b	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-08 16:20:41.239319+00	{}
04ce7454-f5c7-4ca7-92d0-3c7abfeceaaf	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	retrospectives	accessed	read	\N	2025-09-08 16:24:27.041822+00	{}
17cf2860-a10b-438f-9d6d-3392d09bd895	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	retrospectives	accessed	read	\N	2025-09-08 16:26:09.888165+00	{}
70990781-6215-47f5-bbbc-c69525e21b03	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	task_backlog	accessed	read	\N	2025-09-08 16:27:21.873274+00	{}
1baa5c44-ab2b-47f5-a051-a9d462eb3565	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-08 16:28:33.456958+00	{}
bd753f2e-03d0-4fd2-8005-b11f68150142	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-08 16:29:45.329859+00	{}
5d5f3dca-6367-4340-b527-33113621eb47	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 03:50:24.659095+00	{}
021357aa-da44-4a54-9f8c-e036317ae2ef	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 03:50:25.290874+00	{}
98d7a8c2-c760-4c63-9a0e-74b5a0e962fc	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 03:50:41.05247+00	{}
91274881-ff98-4700-80b2-5ae39731d096	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:27:57.234393+00	{}
7a1e77cc-1484-4b88-918d-32f552d896c2	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 04:28:36.334705+00	{}
0446e8e2-57a5-4ba1-9d51-b7615b1477c1	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:29:49.272949+00	{}
cd4b23cd-c416-4137-b2d1-6035e7d2fde8	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:30:33.776356+00	{}
a2145eab-182f-4563-ac65-d7cb6cdfa98f	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 04:33:08.553383+00	{}
3041fe87-86ce-468e-8618-dcf745ea1619	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:33:10.73287+00	{}
d3c2dc1a-dbc2-4185-89e6-fafb6ce48110	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:34:02.329128+00	{}
ea4f3a44-dfe9-4579-8a4b-9ee5cad31455	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 04:34:12.619062+00	{}
f1cd1265-d743-4ced-b35e-cd20c2126d3d	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 04:34:16.237204+00	{}
16585d06-77a3-4025-8790-d95fcebe51ad	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-09 04:36:39.440248+00	{}
c54a41d0-f2d1-417c-a747-9b052b36e277	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 04:36:57.84452+00	{}
24373a6c-1453-4e59-ac70-c6586a129674	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-09 06:20:48.491073+00	{}
efa095dc-83a0-4b25-a64e-eb044d892ed6	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-09 06:20:50.037896+00	{}
0d4b2e25-c9b6-427f-ac3b-644bd88fdd48	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 06:21:18.55203+00	{}
a3d47262-a887-4436-b192-8294d1c23d22	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	retrospectives	accessed	read	\N	2025-09-09 06:22:15.191821+00	{}
45f99a45-8e87-4a6b-892c-22f35d0cd0f1	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 06:26:37.706539+00	{}
1118bded-6eb8-4899-a222-33561d7690fd	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-09 08:27:55.979397+00	{}
5e5cb479-1d34-4e96-b36c-9911d6d784f2	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	kanban	accessed	write	\N	2025-09-09 08:28:38.228563+00	{}
aedd8285-be82-4a39-9240-bbd054702f98	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	risk_register	accessed	read	\N	2025-09-09 08:29:05.881916+00	{}
24d29e72-6439-46ad-8411-51d98e32d4ff	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	stakeholders	accessed	read	\N	2025-09-09 08:29:06.160666+00	{}
31c3ab86-c930-45b9-8bb4-0a104c538d97	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	risk_register	accessed	read	\N	2025-09-09 08:29:11.55061+00	{}
af7ccb06-ea9b-41d1-9893-21328767756d	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	discussions	accessed	read	\N	2025-09-09 08:29:18.827289+00	{}
294734aa-0ec3-405f-b4be-c97f39863c2b	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	task_backlog	accessed	read	\N	2025-09-09 08:29:31.019925+00	{}
0a6263c6-46b8-47b3-9b5f-ae7f0d1fbea8	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-09 08:29:42.211298+00	{}
abf83542-0e9a-4d17-b2f7-49c7f7bdf41c	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	retrospectives	accessed	read	\N	2025-09-09 08:30:21.906576+00	{}
d0978c41-f543-4d68-aa1f-0e0e15d90bac	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 08:30:51.729353+00	{}
df1fbb75-2160-489e-978f-16dad09c0b64	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	budget	accessed	read	\N	2025-09-09 08:30:52.769955+00	{}
6c43b1ef-b90f-4456-940e-02f4f3a0d154	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-09 08:31:08.246086+00	{}
3d414157-2422-4247-aab0-eeb49d34d886	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:40:52.924584+00	{}
6b956b1f-30fa-4d82-94c5-b6e829c24b91	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:41:58.501805+00	{}
cd8b7f13-2efd-4ad1-834b-316c0c7e9d2d	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:43:56.629651+00	{}
e95d7611-86cd-4aea-bc6d-4a4a179cc071	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-10 12:44:09.240337+00	{}
8164af2e-73de-49dd-9d60-63c057f09273	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:45:15.923759+00	{}
e655fff8-592e-42da-8f2b-d96d6fe14fe4	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-10 12:48:34.491259+00	{}
38763a5d-c182-40f0-b74d-9e5110eee4d5	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:51:12.475045+00	{}
96c880b5-6bec-445e-bed7-f9bfbbea98a8	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 12:53:40.242189+00	{}
13e5568e-9f3e-4bfd-b17d-77671678171c	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 13:01:11.001328+00	{}
eda4d7b6-f504-4f32-a8a3-1d106ffdcee6	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 13:04:52.608992+00	{}
4a4b9a0a-dbf8-4e3f-822e-2e67c38e5c5a	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	stakeholders	accessed	read	\N	2025-09-10 13:08:18.819107+00	{}
1c969089-96d0-40e4-ad14-37d0c687872c	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 13:08:48.129031+00	{}
d3115052-be58-46aa-bd0e-92acef79ef33	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-10 13:08:55.678583+00	{}
2f8decad-ab76-4d62-b45d-7444553ec789	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-10 13:09:16.600692+00	{}
a62d56c3-5e51-48a6-881d-1d25726639d0	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:47:36.735263+00	{}
0641e437-135f-487a-b1b7-13c17234e350	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-11 03:49:41.765673+00	{}
5eeee588-132b-4110-8d50-09f8e8c8eecf	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	tasks_milestones	accessed	read	\N	2025-09-11 03:49:50.845467+00	{}
d0c75868-adfc-4b1d-9890-e25e5ae5816e	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-11 03:49:55.682984+00	{}
fc3ab9b9-3abe-4965-8eda-6654df57581f	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:51:50.613454+00	{}
0624a55e-3710-4392-bc9d-ef774106a741	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-11 03:52:25.982163+00	{}
56967b3e-6b23-45bb-8aa5-54abfae05188	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:52:30.572022+00	{}
706ef8a5-464c-4fd0-97e4-e4caebde9ab1	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-11 03:54:15.079352+00	{}
21b9f7bc-5bef-4e72-a63e-130ce296005a	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:54:35.814895+00	{}
12cf3632-bbd7-44dd-862f-036cdc279f3d	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:58:51.184011+00	{}
751aaa3a-1433-4d12-ac5a-0c6734090a3b	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	task_backlog	accessed	read	\N	2025-09-11 03:59:34.980357+00	{}
260bbe06-14ec-42d7-a50c-4a4f38ebe508	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-11 03:59:36.822399+00	{}
353eadd5-0a63-4b45-98fc-8b7237a8ac3d	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	roadmap	accessed	read	\N	2025-09-11 06:26:06.914376+00	{}
5d9383dd-ea41-470b-8fe7-01e3332d16e7	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	tasks_milestones	accessed	read	\N	2025-09-11 06:26:13.456147+00	{}
bfc78107-87bb-4826-8cc7-94dac96080d3	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	stakeholders	accessed	read	\N	2025-09-11 06:26:28.030217+00	{}
4a3d0838-ac72-482b-9e0a-ff5d89dd07aa	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	tasks_milestones	accessed	read	\N	2025-09-11 06:27:16.215983+00	{}
77cb5f30-1e78-4e65-871a-03ae0b9dd978	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	roadmap	accessed	read	\N	2025-09-11 06:27:41.775906+00	{}
f9d44889-bf8a-49dc-9c9f-878f49a97e3f	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	overview	accessed	read	\N	2025-09-11 06:27:45.854396+00	{}
94f9dced-6570-4446-8e8c-34b3f0ce1de6	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	budget	accessed	read	\N	2025-09-11 06:27:59.256666+00	{}
95f85478-5465-4737-9a81-e12832906a13	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	roadmap	accessed	read	\N	2025-09-11 06:29:58.333462+00	{}
3acb0ba6-6493-4706-a1ea-2bcb0b829bb7	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	kanban	accessed	write	\N	2025-09-11 06:30:44.242731+00	{}
abbbd0b0-115e-449e-bd5c-14f7557208dc	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	risk_register	accessed	read	\N	2025-09-11 06:31:31.16469+00	{}
b261e713-9501-456f-b7ae-ca12f71ccfa7	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	discussions	accessed	read	\N	2025-09-11 06:32:51.829536+00	{}
396f1c23-9d68-48f9-8d9f-84098864981f	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	task_backlog	accessed	read	\N	2025-09-11 06:34:51.83972+00	{}
46aa5f92-37e5-4d4a-9e47-f3a90ec00ccb	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	discussions	accessed	read	\N	2025-09-11 06:34:55.670365+00	{}
9f2799cc-2551-4a4a-81bd-263088bfe885	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	task_backlog	accessed	read	\N	2025-09-11 06:35:10.311837+00	{}
224b7ae4-e97a-4d53-9d25-193e5548737c	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	tasks_milestones	accessed	read	\N	2025-09-11 06:35:25.27412+00	{}
d315a46c-170b-4460-94ab-d4b941952b8d	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	team_capacity	accessed	read	\N	2025-09-11 06:36:14.322729+00	{}
8e799afb-a3a8-49ab-962e-9b7c62cb8a1e	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	task_backlog	accessed	read	\N	2025-09-11 06:38:37.670045+00	{}
e9b6dce6-7e2a-4ca3-8610-5683b52433fc	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	team_capacity	accessed	read	\N	2025-09-11 06:38:38.573613+00	{}
b5403055-944b-41e5-9926-02ee911b38d6	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	retrospectives	accessed	read	\N	2025-09-11 06:39:08.420998+00	{}
d7c17cab-6d54-4498-a6cd-5ea477949843	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	task_backlog	accessed	read	\N	2025-09-11 06:40:47.952165+00	{}
35f0f730-c0c0-4fc7-887b-2af887aa3131	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	tasks_milestones	accessed	read	\N	2025-09-11 06:41:18.718859+00	{}
de17f1b8-2dc6-4996-a17a-7259813da26a	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	overview	accessed	read	\N	2025-09-11 06:41:27.944559+00	{}
142b26d7-4f4f-47a0-9dbc-5ebdd4cff73f	6dc39f1e-2af3-4b78-8488-317d90f4f538	c45fc909-075e-4c68-8471-14e78f438149	roadmap	accessed	read	\N	2025-09-11 06:43:45.596659+00	{}
d4fdde8f-d793-4602-aaee-0313a8eb886e	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-12 04:05:04.002718+00	{}
f6b47d18-3ed6-40fb-8976-8e3facd482dd	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	team_capacity	accessed	read	\N	2025-09-12 04:10:55.819421+00	{}
bbefc681-c7e7-422a-b462-34af0060e744	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-12 04:12:00.924149+00	{}
97207ea9-12d4-4c7c-9a26-94eef850c8f9	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-12 04:12:15.486162+00	{}
4faae92e-37d8-45ce-b484-6dfe0aa05f61	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	overview	accessed	read	\N	2025-09-12 04:12:23.60448+00	{}
6e0e935d-6119-407a-a421-60780e30de6f	6dc39f1e-2af3-4b78-8488-317d90f4f538	f4554466-37e2-4f52-afb7-174eafd9ac0f	roadmap	accessed	read	\N	2025-09-12 04:33:35.508222+00	{}
cb366ac9-6a1a-4b7f-b341-d5c6e1420e03	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	kanban	accessed	write	\N	2025-09-12 05:20:37.365817+00	{}
96c51385-1ef7-4106-9acf-56a6b95ec60b	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	overview	accessed	read	\N	2025-09-12 05:20:55.582981+00	{}
1948befd-ce2b-40ca-b77c-ed09c50f42fa	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	roadmap	accessed	read	\N	2025-09-12 05:21:04.849656+00	{}
40e8a13c-0767-4f98-87ec-ebc67eca71f1	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	stakeholders	accessed	read	\N	2025-09-12 05:21:34.819665+00	{}
4273305a-970f-4ec5-b2ad-ed661cbd02cf	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	tasks_milestones	accessed	read	\N	2025-09-12 05:21:42.095904+00	{}
74ea40fc-a6e9-4f1e-9519-bf71fb51d094	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	team_capacity	accessed	read	\N	2025-09-12 05:22:25.92325+00	{}
5a0b3de9-1715-4a84-900d-6d9a870f2bb0	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	retrospectives	accessed	read	\N	2025-09-12 05:25:02.686365+00	{}
2cfe42cc-856a-464e-8a37-85f3e846e055	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	discussions	accessed	read	\N	2025-09-12 05:25:55.322571+00	{}
7a1de2d7-2d76-4d09-b53a-672bbd4079b2	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	stakeholders	accessed	read	\N	2025-09-12 05:26:25.859363+00	{}
cc0b3346-2bb6-4851-a0de-34206c9d24ef	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	team_capacity	accessed	read	\N	2025-09-12 05:26:42.1994+00	{}
0006a1a7-5f62-49e4-8317-fcc7c2a3d2d4	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	discussions	accessed	read	\N	2025-09-12 05:26:45.110249+00	{}
1024c222-d942-4deb-9387-2514f1025060	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	task_backlog	accessed	read	\N	2025-09-12 05:27:11.96951+00	{}
78abcff0-cddc-47a6-89e3-591fb0b087ba	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	tasks_milestones	accessed	read	\N	2025-09-12 05:27:33.031108+00	{}
db6ee044-48d8-4bde-ade4-7d49ddc1a154	6dc39f1e-2af3-4b78-8488-317d90f4f538	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	overview	accessed	read	\N	2025-09-12 05:28:41.433455+00	{}
0dc3262c-6e8f-421b-b425-1ee7b621a194	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	kanban	accessed	write	\N	2025-09-12 06:20:40.230621+00	{}
e1ed8e30-e350-4901-85b6-4c89f6adf05c	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	stakeholders	accessed	read	\N	2025-09-12 06:21:19.064742+00	{}
7dd82e88-08d7-4b38-b860-b6f5654013d5	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	budget	accessed	read	\N	2025-09-12 06:21:49.038493+00	{}
02a0a054-68ac-4446-bd96-2487a4db2075	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	risk_register	accessed	read	\N	2025-09-12 06:22:56.917498+00	{}
3486bc31-c859-4e9e-b049-c632efcfa397	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	discussions	accessed	read	\N	2025-09-12 06:24:10.100587+00	{}
64ddf159-9993-448f-82a4-727fa3d9b3c1	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	task_backlog	accessed	read	\N	2025-09-12 06:25:45.983858+00	{}
79e3b165-83fc-40ea-9cfc-44dd02fadd3a	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	tasks_milestones	accessed	read	\N	2025-09-12 06:26:28.547104+00	{}
9742262d-2009-4f71-8978-07fa6e39c638	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	roadmap	accessed	read	\N	2025-09-12 06:26:49.237813+00	{}
b67ebbff-414e-4f64-9d91-884945765b74	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	retrospectives	accessed	read	\N	2025-09-12 06:29:04.872737+00	{}
92db0475-4868-4271-83f9-8ac7e2f4e641	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	task_backlog	accessed	read	\N	2025-09-12 06:30:31.709038+00	{}
17aaeb7c-5d1b-48db-a627-1f8ab01440ed	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	tasks_milestones	accessed	read	\N	2025-09-12 06:31:02.662487+00	{}
2000558e-c268-4a03-b6ac-b7869e411f09	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	overview	accessed	read	\N	2025-09-12 06:31:28.876268+00	{}
ee0261e8-4470-4e12-b54e-4d565805f49a	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	tasks_milestones	accessed	read	\N	2025-09-12 06:32:03.241214+00	{}
b5faabaf-87b6-4988-be58-6f7c8ecd6ddc	6dc39f1e-2af3-4b78-8488-317d90f4f538	0dda829d-8923-4b93-9f24-a728d198803d	overview	accessed	read	\N	2025-09-12 06:32:17.58543+00	{}
70ba2cad-cd18-4db1-baa0-cac90fa7b12d	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	budget	accessed	read	\N	2025-09-12 12:16:29.289491+00	{}
17d3f1b5-2b28-4712-adb7-9b4a37acea2e	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	stakeholders	accessed	read	\N	2025-09-12 12:18:38.959973+00	{}
876dd402-e0df-41b5-88c9-4831dc601334	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	roadmap	accessed	read	\N	2025-09-12 12:19:48.043428+00	{}
069013d5-9331-4d30-b97a-754bf4a883a1	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	tasks_milestones	accessed	read	\N	2025-09-12 12:19:50.208693+00	{}
90f24867-19e2-4a4e-8f6f-4b6c051e059d	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	overview	accessed	read	\N	2025-09-12 12:20:31.064667+00	{}
72ca01c6-3230-488e-8b97-b45cda1333ce	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	tasks_milestones	accessed	read	\N	2025-09-12 12:20:46.994457+00	{}
779f7a3f-b39e-4bb3-b06c-1bf8771f6e47	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	roadmap	accessed	read	\N	2025-09-12 12:20:47.951987+00	{}
3782942a-3301-49e4-896f-bfa997c852d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	kanban	accessed	write	\N	2025-09-12 12:21:23.410477+00	{}
c084c028-e4c6-4c80-ab57-bf2c374b6880	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	tasks_milestones	accessed	read	\N	2025-09-12 12:21:48.548253+00	{}
4503a48a-ccbe-4916-b4ed-131663054b1a	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	overview	accessed	read	\N	2025-09-12 12:21:54.777953+00	{}
1a2f94be-0785-4fe0-b63f-4a0604f4d852	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	tasks_milestones	accessed	read	\N	2025-09-12 12:22:03.343437+00	{}
52bbc661-5296-4897-bac1-48d9e54d49f7	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	overview	accessed	read	\N	2025-09-12 12:22:22.294976+00	{}
f7c41e8c-ad32-40fa-b4c5-bb78295a6659	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	risk_register	accessed	read	\N	2025-09-12 12:22:55.795487+00	{}
c34fee49-e7d4-4332-8308-581d631cc3de	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	discussions	accessed	read	\N	2025-09-12 12:24:53.594912+00	{}
dd8a5a9a-3d5d-4fdc-9f26-4dd49c3c6552	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	task_backlog	accessed	read	\N	2025-09-12 12:28:41.495531+00	{}
8ab46b9b-ad71-4dfb-92f9-9090e72196e7	6dc39f1e-2af3-4b78-8488-317d90f4f538	37e8b9a1-5209-4428-804f-6a879d557bd6	retrospectives	accessed	read	\N	2025-09-12 12:29:15.140744+00	{}
\.


--
-- Data for Name: module_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.module_permissions (id, project_id, user_id, module, access_level, granted_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: profiles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.profiles (id, email, full_name, created_at, updated_at, department_id) FROM stdin;
aa3ceb36-97df-4b82-856c-a74d2b233de3	ms86100@gmail.com	ms86100@gmail.com	2025-08-26 17:41:13.68615+00	2025-08-26 17:41:13.68615+00	\N
48667d27-66e4-41e1-ad80-08005288ea08	admin@admin.com	admin@admin.com	2025-08-26 17:43:22.18629+00	2025-08-26 17:43:22.18629+00	\N
6dc39f1e-2af3-4b78-8488-317d90f4f538	ms861000@gmail.com	Sag	2025-08-26 17:31:16.026661+00	2025-08-26 23:51:42.684474+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
57e5b843-afee-400d-8cd5-6a0b362c6d93	sagarsharma.pm@gmail.com	Sagar Sharma	2025-08-30 08:37:25.763195+00	2025-08-30 08:38:21.830843+00	fd462524-6cfb-4b7a-ac5b-5226e386fec8
\.


--
-- Data for Name: project_budgets; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.project_budgets (id, project_id, currency, total_budget_allocated, total_budget_received, start_date, end_date, created_by, department_id, created_at, updated_at) FROM stdin;
56ace55f-92b1-4e9c-9d44-978f2307ffb1	2d4540b1-25cd-4424-84fe-ba343a042eeb	INR	2200.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-05 08:11:05.623361+00	2025-09-05 08:11:05.623361+00
7a19d6b7-c93a-459d-9ea5-142b30311bb5	67c23315-401b-4c4d-9992-5bc3424e824a	INR	50000.00	45000.00	2025-09-01	2025-12-31	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	2025-09-07 12:19:36.200168+00	2025-09-07 12:19:36.200168+00
d53d51fd-1068-414b-bc51-a3655b59d596	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-07 16:31:58.411107+00	2025-09-07 16:31:58.411107+00
ea4fc4d7-ba54-4c8f-bd38-a9e10d1defc2	636c6d59-2c07-4e27-a789-9dd4f9db93d1	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-07 18:14:03.972227+00	2025-09-07 18:14:03.972227+00
8779a42a-2fec-45ef-a305-cb316d89e8eb	f4554466-37e2-4f52-afb7-174eafd9ac0f	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-08 16:15:16.316516+00	2025-09-08 16:15:16.316516+00
8a0d152d-7b7c-49c7-bc3f-da2b9d61cc20	c45fc909-075e-4c68-8471-14e78f438149	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-11 06:28:35.116276+00	2025-09-11 06:28:35.116276+00
178a8e50-a1cc-4d5a-b58d-54b5b1abf2a3	0dda829d-8923-4b93-9f24-a728d198803d	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-12 06:22:09.459795+00	2025-09-12 06:22:09.459795+00
93b589e4-192a-473b-9a8a-ff9afcb44f71	37e8b9a1-5209-4428-804f-6a879d557bd6	INR	0.00	0.00	\N	\N	6dc39f1e-2af3-4b78-8488-317d90f4f538	\N	2025-09-12 12:17:08.941998+00	2025-09-12 12:17:08.941998+00
\.


--
-- Data for Name: project_discussions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.project_discussions (id, project_id, meeting_title, meeting_date, summary_notes, attendees, created_by, created_at, updated_at) FROM stdin;
4519ed57-67b1-4ac8-9a35-18ef2effcec5	d1a18682-04ed-45ac-88ab-c30aab9752dc	ABC	2025-09-05	AA	"[\\"86c310af-22d1-4831-8d2f-f89c06e7e218\\"]"	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 04:32:28.600142+00	2025-08-30 04:32:28.600142+00
9bfa24a1-724a-459a-8707-2ad5104710e3	f42f8463-7779-4439-9894-c237394ba57b	Title 1	2025-09-05	AA	"[\\"c49b018d-02a4-4d88-937b-ef9fcb466ac1\\",\\"c2c3d17b-567c-41c0-9127-feed6f30641f\\",\\"48987c8b-b451-41a2-8ac8-aeb698d45d6b\\"]"	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:49:27.973161+00	2025-08-30 12:49:27.973161+00
3096614b-325a-4eb8-955c-34b29830bc0d	2d4540b1-25cd-4424-84fe-ba343a042eeb	D1	2025-09-04	AA	[]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:16.300085+00	2025-09-02 12:58:16.300085+00
0ca5c12f-4d5a-4e88-bd76-ea7f0d699a32	2d4540b1-25cd-4424-84fe-ba343a042eeb	D1	2025-09-04	AA	[]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 12:58:16.501358+00	2025-09-02 12:58:16.501358+00
9cf0aa50-bd73-4b8b-84d1-dda9f81329d2	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	WE	2025-09-10		[]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 15:02:47.918205+00	2025-09-07 15:02:47.918205+00
3753c4e1-7c39-44ca-9b9e-1e44d460b9df	a6b6e575-6807-4e99-b9f9-1140fb1ccf57	SH Meeting	2025-09-17		["1e23878b-79ca-4382-ac9d-197652b32338"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:28:39.701133+00	2025-09-07 16:28:39.701133+00
02d851c7-4d14-409a-8694-e52ac0386e35	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Pilot Feedback on Cockpit Prototype	2025-09-01	Test pilots provided initial feedback on the digital display mock-up. Key issues include brightness levels under sunlight, button placement ergonomics, and workload during emergency scenarios. Next steps: incorporate adjustments into prototype v2 and schedule another pilot session	["26294eb1-5f9d-47af-b884-19c35a291c55", "67e2e881-ab7b-4840-a40d-f1349dabb340", "2a48457f-4228-4a33-9b45-446f935e0476"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:26:06.260949+00	2025-09-07 18:26:06.260949+00
392789fc-8c5c-4af3-8c82-6f14e040f2f0	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Certification Strategy Alignment	2025-07-30	Discussion on aligning modernization efforts with EASA and FAA requirements. The team debated certification pathways, documentation needs, and early engagement with regulators. Agreed action: organize a compliance workshop with Certification & Compliance Officer and external consultants	["f1318628-b66d-4bfc-9dfe-46a3374cef86", "2a48457f-4228-4a33-9b45-446f935e0476", "67e2e881-ab7b-4840-a40d-f1349dabb340", "3136e9de-f135-4682-a2db-8632e619e0f6", "26294eb1-5f9d-47af-b884-19c35a291c55"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:26:33.454991+00	2025-09-07 18:26:33.454991+00
4a70f6b7-a0af-4502-b3d4-908ead3d0edd	f4554466-37e2-4f52-afb7-174eafd9ac0f	Set up monitoring- P Stackholder	2025-09-16		["156c9b52-aa37-465f-9984-01d0358e70d3", "cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:19:08.639951+00	2025-09-08 16:19:08.639951+00
35e08024-6cc7-4a0a-8ed7-20ffd361b6c7	c45fc909-075e-4c68-8471-14e78f438149	Stackholder Discussion	2025-09-11		["9282cd32-6d1a-4999-89e4-a2dc4a36c1a4"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:33:45.880935+00	2025-09-11 06:33:45.880935+00
49be048e-26a3-4c18-88fe-66952b76964a	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	SM	2025-09-10		[]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:26:15.685697+00	2025-09-12 05:26:15.685697+00
f43391dc-e187-4d26-a52e-d5ea13611309	0dda829d-8923-4b93-9f24-a728d198803d	Stackholder Review meeting	2025-09-16		["bc4c355c-04fc-4184-83a8-f76dab9058b9"]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:24:49.92324+00	2025-09-12 06:24:49.92324+00
bd7a8a93-61c7-4120-b484-02eb5dd259a8	37e8b9a1-5209-4428-804f-6a879d557bd6	Stackholder Streeming 	2025-09-10		[]	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:27:44.147867+00	2025-09-12 12:27:44.147867+00
\.


--
-- Data for Name: project_members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.project_members (id, project_id, user_id, role, joined_at, department_id) FROM stdin;
\.


--
-- Data for Name: projects; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.projects (id, name, description, status, priority, start_date, end_date, created_by, created_at, updated_at, department_id) FROM stdin;
636c6d59-2c07-4e27-a789-9dd4f9db93d1	NextGen Cockpit Modernization	To modernize the Airbus cockpit architecture by integrating next-generation avionics, digital displays, and human-machine interface systems. The objective is to enhance pilot situational awareness, improve safety, reduce pilot workload, and ensure compliance with evolving aviation regulations, while preparing the aircraft for future operational and technological upgrades	planning	medium	2025-09-07	2025-12-06	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:12:35.588492+00	2025-09-07 18:12:35.588492+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
f4554466-37e2-4f52-afb7-174eafd9ac0f	PurpleCow Analytics Dashboard Enhancement	To improve project analytics and reporting by fixing existing issues, enhancing budget visibility, and providing actionable insights in the dashboard	planning	medium	2025-09-08	2025-12-07	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:08:41.651894+00	2025-09-08 16:08:41.651894+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
7f3ec8f9-3896-4cf3-9123-2ca3bb418418	Test Project	AA	planning	medium	2025-09-10	2025-12-09	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-10 12:50:45.617238+00	2025-09-10 12:50:45.617238+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
c45fc909-075e-4c68-8471-14e78f438149	Test Project 	Some Description	planning	medium	2025-09-11	2025-12-10	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:25:32.611315+00	2025-09-11 06:25:32.611315+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ABC	ABC	planning	medium	2025-09-12	2025-12-11	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:00.07765+00	2025-09-12 05:20:00.07765+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
0dda829d-8923-4b93-9f24-a728d198803d	SAO	AA	planning	medium	2025-09-12	2025-12-11	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:09.560849+00	2025-09-12 06:20:09.560849+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
37e8b9a1-5209-4428-804f-6a879d557bd6	Sysdops	Add some text	planning	medium	2025-09-12	2025-12-11	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:15:56.012856+00	2025-09-12 12:15:56.012856+00	3af3b0f4-adca-4f11-826c-20ed36b31d46
\.


--
-- Data for Name: retrospective_action_items; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.retrospective_action_items (id, retrospective_id, from_card_id, what_task, when_sprint, who_responsible, how_approach, backlog_ref_id, backlog_status, created_by, created_at, updated_at, converted_to_task, task_id, backlog_task_id) FROM stdin;
0b1ddb5c-6945-4366-a9ee-b8bc3f21658e	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	85c81658-bd42-4268-8d4a-dc2cd8ec8804	Avionics Integration & Testing	Q1 2024	Kiran	\N	\N	Open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:27:14.792877+00	2025-09-08 16:27:14.792877+00	f	\N	\N
d80b2d0c-9d88-4a5b-afeb-aff6a57bcf0b	4d93ac22-8886-4197-8485-c07c81b13a84	95e02384-eca3-4d72-b237-1c0534020ce1	I like eating	Sprint 1	Anita	\N	\N	Open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:40:37.425403+00	2025-09-11 06:40:37.425403+00	f	\N	\N
ebbc0853-ad51-49ad-b3ea-0f4ff8a3026f	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	71e94da6-8acd-4f2b-9b2f-654d5b35f6b4	Action 1 importnat 	Next Milestone 	Sagar	\N	\N	Open	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:30:26.293713+00	2025-09-12 06:30:26.293713+00	f	\N	\N
\.


--
-- Data for Name: retrospective_card_votes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.retrospective_card_votes (id, card_id, user_id, created_at, metadata) FROM stdin;
01f028da-3c69-4711-8830-0c5343256f80	217f3106-07d8-4ff0-b671-239610ee0495	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:25:10.827756+00	{}
3db96fb3-8003-4478-8f23-2d10f2d27242	85c81658-bd42-4268-8d4a-dc2cd8ec8804	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:26:51.783225+00	{}
d9a222a3-fcc2-49c7-9c55-bfb1877e7202	95e02384-eca3-4d72-b237-1c0534020ce1	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:40:05.414854+00	{}
82f62e94-24aa-45e1-bfe0-14ad9ff99d53	71e94da6-8acd-4f2b-9b2f-654d5b35f6b4	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:30:06.312672+00	{}
\.


--
-- Data for Name: retrospective_cards; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.retrospective_cards (id, column_id, text, votes, card_order, created_by, created_at, updated_at) FROM stdin;
217f3106-07d8-4ff0-b671-239610ee0495	ca296363-056b-43ce-9fc5-73df965cf45f	Some Discussion	0	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:25:06.665179+00	2025-09-08 16:25:14.227428+00
85c81658-bd42-4268-8d4a-dc2cd8ec8804	3594f7c2-91d3-4b0d-8967-c8b7ecd893ce	Avionics Integration & Testing	1	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:26:17.927342+00	2025-09-08 16:26:51.905708+00
e9334f3d-7119-4df3-b545-3934a43ba2ed	01a341c6-4799-418f-bf85-618942dc3eda	Some training	0	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:40:00.636338+00	2025-09-11 06:40:00.636338+00
95e02384-eca3-4d72-b237-1c0534020ce1	374b7450-bc4c-4eea-8cca-5a517eb11b67	I like eating	1	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:39:47.895235+00	2025-09-11 06:40:05.53009+00
71e94da6-8acd-4f2b-9b2f-654d5b35f6b4	a45a2bd5-3370-419e-bec7-54ac96e9e691	Action 1 importnat 	1	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:30:01.571309+00	2025-09-12 06:30:06.452916+00
\.


--
-- Data for Name: retrospective_columns; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.retrospective_columns (id, retrospective_id, title, subtitle, column_order, created_at, updated_at) FROM stdin;
ca296363-056b-43ce-9fc5-73df965cf45f	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	Keep	What should we continue doing?	0	2025-09-08 16:24:45.028364+00	2025-09-08 16:24:45.028364+00
3594f7c2-91d3-4b0d-8967-c8b7ecd893ce	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	Improve	What could be improved?	1	2025-09-08 16:24:45.028364+00	2025-09-08 16:24:45.028364+00
7f3de3e5-1493-4063-8d71-3ddbbfa7b32f	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	Start	What should we try next?	2	2025-09-08 16:24:45.028364+00	2025-09-08 16:24:45.028364+00
ba56b2f5-a5ff-4bb5-a5dd-2a480dc91f3a	40ac618a-7a6f-46b4-ad39-dcff102a7e7f	Stop	What should we avoid?	3	2025-09-08 16:24:45.028364+00	2025-09-08 16:24:45.028364+00
374b7450-bc4c-4eea-8cca-5a517eb11b67	4d93ac22-8886-4197-8485-c07c81b13a84	Liked	What did we like?	0	2025-09-11 06:39:30.137535+00	2025-09-11 06:39:30.137535+00
01a341c6-4799-418f-bf85-618942dc3eda	4d93ac22-8886-4197-8485-c07c81b13a84	Learned	What did we learn?	1	2025-09-11 06:39:30.137535+00	2025-09-11 06:39:30.137535+00
aac004d2-e8df-41d4-b6e0-4e60d7940e40	4d93ac22-8886-4197-8485-c07c81b13a84	Lacked	What was missing or lacking?	2	2025-09-11 06:39:30.137535+00	2025-09-11 06:39:30.137535+00
c69c2d6b-2600-4b92-b533-0d16b0effee7	4d93ac22-8886-4197-8485-c07c81b13a84	Longed For	What did we long for?	3	2025-09-11 06:39:30.137535+00	2025-09-11 06:39:30.137535+00
652e6cc0-e343-4c01-ba6d-ae868e40545a	7be3d165-e2db-40fc-90cf-0afc21f54bf5	Liked	What did we like?	0	2025-09-12 05:25:29.969085+00	2025-09-12 05:25:29.969085+00
56af00e8-3641-44e8-9db6-aee3244c8147	7be3d165-e2db-40fc-90cf-0afc21f54bf5	Learned	What did we learn?	1	2025-09-12 05:25:29.969085+00	2025-09-12 05:25:29.969085+00
ec640864-9aa0-4626-9144-17f3cbc6e372	7be3d165-e2db-40fc-90cf-0afc21f54bf5	Lacked	What was missing or lacking?	2	2025-09-12 05:25:29.969085+00	2025-09-12 05:25:29.969085+00
ef7b9bf8-884b-4d3c-8b34-588937ffd269	7be3d165-e2db-40fc-90cf-0afc21f54bf5	Longed For	What did we long for?	3	2025-09-12 05:25:29.969085+00	2025-09-12 05:25:29.969085+00
a45a2bd5-3370-419e-bec7-54ac96e9e691	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	Keep	What should we continue doing?	0	2025-09-12 06:29:42.158582+00	2025-09-12 06:29:42.158582+00
d51471fc-d183-4274-9032-9d9c5baaa33a	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	Improve	What could be improved?	1	2025-09-12 06:29:42.158582+00	2025-09-12 06:29:42.158582+00
49edc1ae-0194-4508-a9a4-9de67178194b	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	Start	What should we try next?	2	2025-09-12 06:29:42.158582+00	2025-09-12 06:29:42.158582+00
a34233d7-ac6c-461b-9612-1e0456225d14	87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	Stop	What should we avoid?	3	2025-09-12 06:29:42.158582+00	2025-09-12 06:29:42.158582+00
\.


--
-- Data for Name: retrospectives; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.retrospectives (id, iteration_id, framework, project_id, created_by, created_at, updated_at, department_id, status) FROM stdin;
40ac618a-7a6f-46b4-ad39-dcff102a7e7f	Q1 2024	kiss	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:24:44.900132+00	2025-09-08 16:24:44.900132+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	active
4d93ac22-8886-4197-8485-c07c81b13a84	Q1-it1	4ls	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:39:30.030946+00	2025-09-11 06:39:30.030946+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	active
7be3d165-e2db-40fc-90cf-0afc21f54bf5	Q1-I1	4ls	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:25:29.860009+00	2025-09-12 05:25:29.860009+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	active
87dd231c-54e4-4c6d-aa85-bdeaf6762ea7	Q1 It1	kiss	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:29:42.045445+00	2025-09-12 06:29:42.045445+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	active
\.


--
-- Data for Name: risk_register; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.risk_register (id, project_id, created_by, department_id, risk_code, title, description, category, cause, consequence, likelihood, impact, owner, response_strategy, mitigation_plan, contingency_plan, status, identified_date, last_updated, next_review_date, residual_likelihood, residual_impact, notes, created_at, updated_at) FROM stdin;
0f91894a-93a2-4c10-b2fb-7f52e1161103	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	R-001	Avionics Hardware Delivery Delays	Supplier lead-time issues may delay delivery of critical cockpit display units.	\N	Limited supplier base and global semiconductor shortage.	Project schedule slippage by 4–6 weeks.	3	4	Procurement Manager	Mitigate	{"Identify alternate vendors, expedite shipping, buffer stock."}	Reschedule integration activities, allocate temporary test units.	Open	2025-09-07	2025-09-07	2025-09-30	\N	\N	\N	2025-09-07 18:23:09.278515+00	2025-09-07 18:23:09.278515+00
b6f1c1fb-137b-4c82-875a-fc2a83815aaa	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	R-002	Certification Non-Compliance	New cockpit systems may fail to meet EASA/FAA certification standards.	\N	Design deviations from certified standards.	Rework effort, certification delays, cost increase.	4	4	Certification & Compliance Officer	Avoid	{"Early compliance checks, certification workshops, frequent audits."}	Allocate budget for redesign & documentation updates.	Open	2025-09-07	2025-09-07	2025-10-01	\N	\N	Regulatory	2025-09-07 18:24:49.08579+00	2025-09-07 18:24:49.08579+00
053881d9-2cc9-4656-87f5-b050e6b7b818	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	R1	Auth loop persists after fix	\N	Technical	\N	\N	4	3	Dev Lead	Avoid	{"Add fallback handling"}	\N	Closed	2025-09-08	2025-09-08	\N	\N	\N	\N	2025-09-08 16:17:33.030752+00	2025-09-08 16:18:09.319207+00
f8e2026e-17fc-45e7-aeea-f4e973f5842a	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	Roo1	Devlopment Dealy	\N	Technical	\N	\N	2	3	\N	Transfer	\N	\N	Open	2025-09-11	2025-09-11	2025-09-17	\N	\N	\N	2025-09-11 06:32:41.334589+00	2025-09-11 06:32:41.334589+00
cff9d2ab-4661-45c3-a0ad-0976bc6b837e	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	R001	Technical Debt	\N	Technical	\N	\N	3	3	\N	\N	{"Action 1"}	\N	In Progress	2025-09-12	2025-09-12	2025-09-19	\N	\N	\N	2025-09-12 06:23:54.88736+00	2025-09-12 06:23:54.88736+00
c8e37b5e-fa5c-48f7-8793-b4c8c29868ef	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46	R001	Development  Delay	Welcome on board!!!\n\nLet’s get you started with your new adventure within our company.\n\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.	Technical	Welcome on board!!!\n\nLet’s get you started with your new adventure within our company.\n\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.	Welcome on board!!!\n\nLet’s get you started with your new adventure within our company.\n\nYou will be soon joining us. You can already start the journey by connecting here to our employee portal.	3	3	\N	Transfer	{Action1}	\N	In Progress	2025-09-12	2025-09-12	2025-09-19	\N	\N	\N	2025-09-12 12:24:26.034064+00	2025-09-12 12:24:26.034064+00
\.


--
-- Data for Name: stakeholders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.stakeholders (id, project_id, name, email, department, raci, influence_level, notes, created_at, updated_at, created_by) FROM stdin;
2a48457f-4228-4a33-9b45-446f935e0476	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Chief Project Manager	\N	Program Management	Accountable	High	Oversees overall modernization project, budget, and deadlines.	2025-09-07 18:18:29.24515+00	2025-09-07 18:18:29.24515+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
67e2e881-ab7b-4840-a40d-f1349dabb340	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Lead Avionics Engineer	\N	Avionics & Electrical Systems	Responsible	High	\N	2025-09-07 18:18:49.916205+00	2025-09-07 18:18:49.916205+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
3136e9de-f135-4682-a2db-8632e619e0f6	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Certification & Compliance Officer	\N	: Airworthiness & Certification	Consulted	High	Ensures compliance with EASA/FAA standards for cockpit modernization.	2025-09-07 18:19:17.529909+00	2025-09-07 18:19:17.529909+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
26294eb1-5f9d-47af-b884-19c35a291c55	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Test Pilot	\N	Flight Operations	Consulted	Medium	Provides operational feedback during mock-up and test flights.	2025-09-07 18:19:50.384924+00	2025-09-07 18:19:50.384924+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
f1318628-b66d-4bfc-9dfe-46a3374cef86	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Quality Assurance Manager	\N	Quality & Testing	\N	Medium	Oversees testing protocols, risk assessments, and QA documentation.	2025-09-07 18:20:20.593917+00	2025-09-07 18:20:20.593917+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
8958c7c6-5f79-4b29-a809-c7a69ef5ef97	f4554466-37e2-4f52-afb7-174eafd9ac0f	Rahul	\N	ABC	Accountable	High	\N	2025-09-08 16:12:38.521678+00	2025-09-08 16:12:38.521678+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac	f4554466-37e2-4f52-afb7-174eafd9ac0f	Sneha	\N	DPA	Informed	Medium	\N	2025-09-08 16:13:02.232289+00	2025-09-08 16:13:02.232289+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
156c9b52-aa37-465f-9984-01d0358e70d3	f4554466-37e2-4f52-afb7-174eafd9ac0f	Kiran	\N	DPC	Informed	Critical	\N	2025-09-08 16:13:19.034478+00	2025-09-08 16:13:19.034478+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	c45fc909-075e-4c68-8471-14e78f438149	Anita	\N	DC	Accountable	Critical	\N	2025-09-11 06:27:07.68381+00	2025-09-11 06:27:07.68381+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
28a52e60-b35a-474f-a038-fb71d3ab8b23	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	Mrityunjay	\N	\N	Accountable	Critical	\N	2025-09-12 05:26:37.833828+00	2025-09-12 05:26:37.833828+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
bc4c355c-04fc-4184-83a8-f76dab9058b9	0dda829d-8923-4b93-9f24-a728d198803d	Sagar	\N	DPS	Accountable	High	\N	2025-09-12 06:21:34.458477+00	2025-09-12 06:21:34.458477+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
24c6d8d4-f8ec-4944-9788-4f1814227f68	37e8b9a1-5209-4428-804f-6a879d557bd6	Member1	\N	DPI	Accountable	High	\N	2025-09-12 12:19:05.283379+00	2025-09-12 12:19:05.283379+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
87a091f6-523a-430d-9854-3a94caf7bcc2	37e8b9a1-5209-4428-804f-6a879d557bd6	Member2	\N	Security	Informed	Medium	\N	2025-09-12 12:19:32.15969+00	2025-09-12 12:19:32.15969+00	6dc39f1e-2af3-4b78-8488-317d90f4f538
\.


--
-- Data for Name: task_backlog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_backlog (id, title, description, project_id, created_by, created_at, updated_at, priority, status, owner_id, target_date, source_type, source_id, department_id) FROM stdin;
462eecb1-fe01-4978-b98d-7279c9fac1f0	Allocate budget/time buffer for re-work if compliance gaps are identified.	compliance gaps are identified.	636c6d59-2c07-4e27-a789-9dd4f9db93d1	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:29:21.416606+00	2025-09-07 18:29:21.416606+00	high	backlog	\N	2025-10-24	manual	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
4e02f0d2-6b75-4719-8eec-0d1e87743996	Do we need to extend dashboard analytics (e.g., trendline view)?	Converted from action item - Discussion: Set up monitoring- P Stackholder	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:20:06.792009+00	2025-09-08 16:20:06.792009+00	medium	backlog	8958c7c6-5f79-4b29-a809-c7a69ef5ef97	2025-09-23	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
2e460757-15ca-4cde-8d91-b75a9c057775	Should we prioritize fixing login/auth or analytics first?	Converted from action item - Discussion: Set up monitoring- P Stackholder	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:20:07.206846+00	2025-09-08 16:20:07.206846+00	medium	backlog	cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac	2025-09-23	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
db3f7a2c-4d63-475d-b21d-ca7f1381bdc1	Avionics Integration & Testing	Created from retrospective action item.\n\nOriginal card: "Avionics Integration & Testing"\nWhen: Q1 2024\nWho: Kiran	f4554466-37e2-4f52-afb7-174eafd9ac0f	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:27:15.864755+00	2025-09-08 16:27:15.864755+00	medium	backlog	\N	\N	manual	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
f1349815-7d18-4c35-a63e-a42fc361d518	Plan A	Converted from action item - Discussion: Stackholder Discussion	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:35:05.532312+00	2025-09-11 06:35:05.532312+00	medium	backlog	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-17	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
40e38cd4-6e6a-4344-b172-f0e9f770af7d	Find  another developer	Converted from action item - Discussion: Stackholder Discussion	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:35:00.862497+00	2025-09-11 06:35:36.285079+00	medium	done	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-24	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
7b24906f-62c1-4600-9df6-77e3a194747f	I like eating	Created from retrospective action item.\n\nOriginal card: "I like eating"\nWhen: Sprint 1\nWho: Anita	c45fc909-075e-4c68-8471-14e78f438149	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:40:39.047346+00	2025-09-11 06:40:39.047346+00	medium	backlog	\N	\N	manual	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
fd7957f2-beb5-42fb-b7c5-2574cb089455	Action1	Converted from action item - Discussion: SM	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:27:05.224396+00	2025-09-12 05:28:29.387442+00	medium	done	28a52e60-b35a-474f-a038-fb71d3ab8b23	2025-09-25	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
59dbc29e-3e91-4d3f-9ff0-d7eca825c57d	Action 1 Derived from a meeting	Converted from action item - Discussion: Stackholder Review meeting	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:25:37.549951+00	2025-09-12 06:26:39.421698+00	medium	done	bc4c355c-04fc-4184-83a8-f76dab9058b9	2025-09-17	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
a709b230-bc99-48b3-a3a8-f5a366a081b6	Action 1 importnat 	Created from retrospective action item.\n\nOriginal card: "Action 1 importnat "\nWhen: Next Milestone \nWho: Sagar	0dda829d-8923-4b93-9f24-a728d198803d	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:30:27.603244+00	2025-09-12 06:30:57.284108+00	medium	done	\N	\N	manual	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
dd8985cf-179c-4396-bd45-fa4774d281e4	Action 1=> to do finance health  check 	Converted from action item - Discussion: Stackholder Streeming 	37e8b9a1-5209-4428-804f-6a879d557bd6	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:28:35.032564+00	2025-09-12 12:29:09.230727+00	medium	done	87a091f6-523a-430d-9854-3a94caf7bcc2	2025-09-19	action_item	\N	3af3b0f4-adca-4f11-826c-20ed36b31d46
\.


--
-- Data for Name: task_status_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_status_history (id, task_id, old_status, new_status, changed_by, changed_at, notes, created_at) FROM stdin;
35d500b8-f6f0-4d19-9a1b-d132c5310296	b27b01d0-c13a-4776-b61a-5941c67a249e	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:28:36.045172+00	\N	2025-08-27 15:28:36.045172+00
c9465fbc-6e47-47b2-9f47-b466473699a5	3575a8d5-5286-4737-8a06-ec6ab0a0c2a5	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:28:40.131732+00	\N	2025-08-27 15:28:40.131732+00
88082764-7ebe-4883-900f-fd8f13474d21	7664d5c3-6421-40e8-80a4-9756aac7d62b	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:30:25.404448+00	\N	2025-08-27 15:30:25.404448+00
f0b0b3e1-cb2e-4f77-83c3-c307b25cac43	8c3dea9f-d778-402e-8884-7e8b0b4f6cdf	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:30:39.118653+00	\N	2025-08-27 15:30:39.118653+00
5b6cd94a-d8f7-46cd-a9c0-d3f61ef0652f	3575a8d5-5286-4737-8a06-ec6ab0a0c2a5	in_progress	todo	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:35:24.179339+00	\N	2025-08-27 15:35:24.179339+00
2a20eeb5-4a43-4bdb-94b8-1a13c6fd36e6	7664d5c3-6421-40e8-80a4-9756aac7d62b	blocked	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:35:37.894434+00	\N	2025-08-27 15:35:37.894434+00
424921f8-1611-44df-9886-702d789bafc8	8f9d8999-60ac-4bad-bd20-119fe654bd43	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-27 15:35:48.640947+00	\N	2025-08-27 15:35:48.640947+00
856a0284-d731-442d-95b4-f58ca06f04f6	8f9d8999-60ac-4bad-bd20-119fe654bd43	blocked	todo	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 03:10:41.294026+00	\N	2025-08-30 03:10:41.294026+00
443b8628-4e04-4e01-b4f5-8baaba7b489a	b27b01d0-c13a-4776-b61a-5941c67a249e	blocked	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 03:10:48.440159+00	\N	2025-08-30 03:10:48.440159+00
ce88dc48-3537-49d9-8efc-3624d02e32a5	af38891f-8c2c-4ecd-acf4-a2df6abbd6af	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:36:05.532045+00	\N	2025-08-30 12:36:05.532045+00
39184847-d884-4636-b8eb-b7806d84bc45	e2264a07-dfed-4280-9e12-a277c8d37ec1	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:36:10.718116+00	\N	2025-08-30 12:36:10.718116+00
7344c134-5e38-431e-8365-e8c7d8ebb920	e58aab06-6e97-4270-8f31-cccd8af8b238	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 12:36:17.569552+00	\N	2025-08-30 12:36:17.569552+00
793964e3-92f6-42ec-a98f-9cf118e316ad	d006285d-1a0d-4ca9-a7b4-cfc654628185	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:07:08.853302+00	\N	2025-08-30 13:07:08.853302+00
38965274-1745-45c3-8327-a423f58e51af	bb4d81f2-a088-447f-96df-036b6490bb83	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:07:15.607936+00	\N	2025-08-30 13:07:15.607936+00
b86864ed-35ec-4ae7-a3e7-95f12aec2b6c	ddef89e5-02fd-4d6c-854c-e39f8caa1371	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:56.851456+00	\N	2025-09-07 16:26:56.851456+00
d57d3605-ae13-4968-b5d3-f653d30449f9	ddef89e5-02fd-4d6c-854c-e39f8caa1371	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:56.851456+00	\N	2025-09-07 16:26:56.851456+00
f6ec4252-5ece-407d-a8a2-b0147a81a8d9	ddef89e5-02fd-4d6c-854c-e39f8caa1371	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:56.961001+00	\N	2025-09-07 16:26:56.961001+00
1c60f452-8108-4806-a2e9-7eed470c1314	6ddeff4a-c9c8-4794-a31a-c34f69b80c65	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:58.707807+00	\N	2025-09-07 16:26:58.707807+00
a8b4b89c-9025-4354-9235-2c137b715463	6ddeff4a-c9c8-4794-a31a-c34f69b80c65	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:58.707807+00	\N	2025-09-07 16:26:58.707807+00
cf9aae7e-d1c5-48dd-a2b4-de9d58435b15	6ddeff4a-c9c8-4794-a31a-c34f69b80c65	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:26:58.793888+00	\N	2025-09-07 16:26:58.793888+00
cf209f32-02b1-4204-a41e-03e8e4266ec4	884f91f3-1ae7-4747-8b12-853c682b5a01	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:27:00.942151+00	\N	2025-09-07 16:27:00.942151+00
94118237-0283-408b-94b8-92ee649b7b1f	884f91f3-1ae7-4747-8b12-853c682b5a01	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:27:00.942151+00	\N	2025-09-07 16:27:00.942151+00
1c6afcfc-0141-4022-9a94-c334576ec1c7	884f91f3-1ae7-4747-8b12-853c682b5a01	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 16:27:01.035901+00	\N	2025-09-07 16:27:01.035901+00
f2195984-1500-4df7-973e-f64d00986be8	adf0d942-488a-4c35-8d64-08eaa79e8803	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 15:58:37.954923+00	\N	2025-09-08 15:58:37.954923+00
4d1cfac7-5dc6-4e9a-a091-80550497267b	adf0d942-488a-4c35-8d64-08eaa79e8803	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 15:58:37.954923+00	\N	2025-09-08 15:58:37.954923+00
4fe7f11d-d7b0-4996-848e-96ff064dc492	adf0d942-488a-4c35-8d64-08eaa79e8803	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 15:58:38.072218+00	\N	2025-09-08 15:58:38.072218+00
bb17bc97-40a0-4b1b-9bcf-dc8fedbf92df	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:08.869607+00	\N	2025-09-08 16:11:08.869607+00
8c2e7ef9-4c9d-4c5d-a99b-a97e7dc92d27	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:08.869607+00	\N	2025-09-08 16:11:08.869607+00
b010968c-9f9f-48a6-b8d2-ffecf2a2a3d1	1620f025-f7f8-4dc4-ad10-c6f141f9aabe	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:08.96959+00	\N	2025-09-08 16:11:08.96959+00
8619e73c-751c-468d-aa94-05759c094942	3e446909-6dbe-4652-aa71-67dc95545f22	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:18.574992+00	\N	2025-09-08 16:11:18.574992+00
64d3e167-8ff7-449e-9eb4-54945cbbba17	3e446909-6dbe-4652-aa71-67dc95545f22	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:18.574992+00	\N	2025-09-08 16:11:18.574992+00
cde04e27-058e-4deb-9070-5a22feeb5fbd	3e446909-6dbe-4652-aa71-67dc95545f22	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:18.712322+00	\N	2025-09-08 16:11:18.712322+00
568a57ee-9c63-42bc-977f-ff2abc93865e	4a67df02-3a16-4f9d-b627-d98c9c002a42	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:26.638946+00	\N	2025-09-08 16:11:26.638946+00
70b0231f-ce47-4397-b82e-109c2a054208	4a67df02-3a16-4f9d-b627-d98c9c002a42	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:26.638946+00	\N	2025-09-08 16:11:26.638946+00
04250174-79f8-425c-96ca-3f483e0b5cde	4a67df02-3a16-4f9d-b627-d98c9c002a42	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:26.753052+00	\N	2025-09-08 16:11:26.753052+00
64ad5533-58fd-41b5-b0c3-4d0348955c99	f3a36411-cf0f-45de-b73e-da75ea952966	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:31.789484+00	\N	2025-09-08 16:11:31.789484+00
1180d3bf-98a1-4649-a362-233f561c7be7	f3a36411-cf0f-45de-b73e-da75ea952966	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:31.789484+00	\N	2025-09-08 16:11:31.789484+00
f694757d-c251-441e-bbe6-17df76ccf269	f3a36411-cf0f-45de-b73e-da75ea952966	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:11:32.04158+00	\N	2025-09-08 16:11:32.04158+00
7b8b26eb-13ad-4e10-87b3-46eaddef4d23	7031474f-5c9f-43ab-acab-db50d2e2f068	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:28:49.586803+00	\N	2025-09-09 08:28:49.586803+00
2d514143-ae61-4272-8a5c-189d1dcac747	7031474f-5c9f-43ab-acab-db50d2e2f068	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:28:49.586803+00	\N	2025-09-09 08:28:49.586803+00
897499a3-e1c5-422a-8194-3efb47851a3f	7031474f-5c9f-43ab-acab-db50d2e2f068	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:28:50.087871+00	\N	2025-09-09 08:28:50.087871+00
a5a648ee-69a1-4b11-a556-04b866332080	4a67df02-3a16-4f9d-b627-d98c9c002a42	blocked	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:29:00.817436+00	\N	2025-09-09 08:29:00.817436+00
0e26dffe-a2e8-413b-801c-43243e6d17a2	4a67df02-3a16-4f9d-b627-d98c9c002a42	blocked	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:29:00.817436+00	\N	2025-09-09 08:29:00.817436+00
ec3c40df-97e1-4555-99c8-de717ea3b6d2	4a67df02-3a16-4f9d-b627-d98c9c002a42	blocked	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-09 08:29:00.996542+00	\N	2025-09-09 08:29:00.996542+00
6524cd0d-11f5-4527-becc-7b57ea32bd62	75bbef7c-7ab7-477e-835a-2fe96ff6b675	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:30:59.584871+00	\N	2025-09-11 06:30:59.584871+00
e71e22ab-b6e7-4c5a-8876-b14b7c7b09da	75bbef7c-7ab7-477e-835a-2fe96ff6b675	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:30:59.584871+00	\N	2025-09-11 06:30:59.584871+00
4b51ccbb-8aaa-4697-93d5-5ed8c1e8c4eb	75bbef7c-7ab7-477e-835a-2fe96ff6b675	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:30:59.689095+00	\N	2025-09-11 06:30:59.689095+00
d72bc74e-62e8-403b-a7f7-9c63adfd6e54	bb527d75-82a9-4eaa-9acc-4a7ff501c920	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:04.38751+00	\N	2025-09-11 06:31:04.38751+00
44d5065f-e346-4d2d-9289-0298f0034aa3	bb527d75-82a9-4eaa-9acc-4a7ff501c920	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:04.38751+00	\N	2025-09-11 06:31:04.38751+00
85906de3-d61e-408b-9d42-3d681f4634a4	bb527d75-82a9-4eaa-9acc-4a7ff501c920	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:04.741887+00	\N	2025-09-11 06:31:04.741887+00
1ef2376b-58cb-4b4a-9791-9b948d92f348	cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:08.125261+00	\N	2025-09-11 06:31:08.125261+00
edd429f4-d15a-46c5-873f-674711c308a6	cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:08.125261+00	\N	2025-09-11 06:31:08.125261+00
78529d64-87b4-419e-b891-1fc987d3c31f	cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:08.255309+00	\N	2025-09-11 06:31:08.255309+00
0f5817ad-d8fd-4c5f-aa4f-603cb4ba2bc2	75bbef7c-7ab7-477e-835a-2fe96ff6b675	in_progress	todo	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:15.083058+00	\N	2025-09-11 06:31:15.083058+00
a5c42daf-f0db-4937-b347-39b903b9bffb	75bbef7c-7ab7-477e-835a-2fe96ff6b675	in_progress	todo	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:15.083058+00	\N	2025-09-11 06:31:15.083058+00
25c6d5b9-261b-465d-9efb-2cbe8ed2866d	75bbef7c-7ab7-477e-835a-2fe96ff6b675	in_progress	todo	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:31:15.205657+00	\N	2025-09-11 06:31:15.205657+00
049b7e0a-329d-40e2-925b-f83e6284a547	fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:44.449455+00	\N	2025-09-12 05:20:44.449455+00
6d4e12af-575d-4810-be51-9b74afbb749f	fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:44.449455+00	\N	2025-09-12 05:20:44.449455+00
b8250e06-a8cf-418e-97e2-ef37f914fc45	fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:44.682786+00	\N	2025-09-12 05:20:44.682786+00
75ac92bd-d518-4e4d-8858-90e1c0a3aefa	6e8213b3-39a2-4da6-ad16-40e4dd875722	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:48.43948+00	\N	2025-09-12 05:20:48.43948+00
6ef014e6-9511-4e14-ae57-4899c5160568	6e8213b3-39a2-4da6-ad16-40e4dd875722	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:48.43948+00	\N	2025-09-12 05:20:48.43948+00
ff40d5a2-e068-47cf-857a-2a20e725adff	6e8213b3-39a2-4da6-ad16-40e4dd875722	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:48.543406+00	\N	2025-09-12 05:20:48.543406+00
bd658d3f-2577-4ac4-9736-307b1a64ee40	9d0c44cd-2183-43b2-8342-a52c1f70dfa9	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:52.038263+00	\N	2025-09-12 05:20:52.038263+00
3beb14c2-bc61-4f23-bd8e-78ceeadcbd88	9d0c44cd-2183-43b2-8342-a52c1f70dfa9	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:52.038263+00	\N	2025-09-12 05:20:52.038263+00
6fbe1a08-8a9e-4ba7-8c40-135e6dc2f1d0	9d0c44cd-2183-43b2-8342-a52c1f70dfa9	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:20:52.126925+00	\N	2025-09-12 05:20:52.126925+00
7a61cdd4-ed93-4cb0-83b7-260e4bd4ee75	ddaf31b2-4187-48b7-948d-9483efa03596	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:48.017892+00	\N	2025-09-12 06:20:48.017892+00
dfd7f48a-7b13-4904-ab8a-cca6582249cc	ddaf31b2-4187-48b7-948d-9483efa03596	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:48.017892+00	\N	2025-09-12 06:20:48.017892+00
7b2dc562-4150-4d11-9c32-86f3671694d4	ddaf31b2-4187-48b7-948d-9483efa03596	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:48.249841+00	\N	2025-09-12 06:20:48.249841+00
e830ba84-7e47-4752-a814-107152b8f412	f299b868-bfa1-4501-9cdb-4c0e18fdb630	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:51.762196+00	\N	2025-09-12 06:20:51.762196+00
866ce082-fe6e-44c3-81f1-d3843dccad30	f299b868-bfa1-4501-9cdb-4c0e18fdb630	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:51.762196+00	\N	2025-09-12 06:20:51.762196+00
10c4c710-eeec-4340-aa38-f594a29b187c	f299b868-bfa1-4501-9cdb-4c0e18fdb630	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:52.05183+00	\N	2025-09-12 06:20:52.05183+00
3a27f602-921c-40f9-baba-1fd24fa0705b	a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:54.735095+00	\N	2025-09-12 06:20:54.735095+00
43b18809-8466-4753-ad4b-fe4881a60309	a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:54.735095+00	\N	2025-09-12 06:20:54.735095+00
47123447-894f-4d29-a1c5-5ffd9634f3b9	a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 06:20:54.842613+00	\N	2025-09-12 06:20:54.842613+00
e0745a1a-3f29-42e6-9f64-352ec56740ee	e0c41d46-fdf8-42ae-a033-57cf0bac641b	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:30.508791+00	\N	2025-09-12 12:21:30.508791+00
30e7852d-3410-4523-bc22-aac6154543c0	e0c41d46-fdf8-42ae-a033-57cf0bac641b	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:30.508791+00	\N	2025-09-12 12:21:30.508791+00
5e1e322f-bda0-4a1b-afd0-cc6c69cd67cf	e0c41d46-fdf8-42ae-a033-57cf0bac641b	todo	blocked	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:30.72068+00	\N	2025-09-12 12:21:30.72068+00
7ae0f8b8-93f1-4c4c-bd32-993a7eab1b4b	3542740c-1d6f-491e-8ead-efdeff2f0a74	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:34.330219+00	\N	2025-09-12 12:21:34.330219+00
ded0d993-a33a-40fd-9a88-aa469f30b639	3542740c-1d6f-491e-8ead-efdeff2f0a74	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:34.330219+00	\N	2025-09-12 12:21:34.330219+00
595407ed-f7c3-4abf-8784-7b4dd43ae580	3542740c-1d6f-491e-8ead-efdeff2f0a74	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:34.420845+00	\N	2025-09-12 12:21:34.420845+00
f8cb01f5-d221-46e5-a455-ef21dcc890ee	602f01ca-8083-4691-af06-f90a25841f16	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:36.81859+00	\N	2025-09-12 12:21:36.81859+00
5b3780cd-151c-4e3f-9d13-5f8782f82ab2	602f01ca-8083-4691-af06-f90a25841f16	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:36.81859+00	\N	2025-09-12 12:21:36.81859+00
7e9e9c5e-da90-4e82-be6d-a9a17aca8eb0	602f01ca-8083-4691-af06-f90a25841f16	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:36.934689+00	\N	2025-09-12 12:21:36.934689+00
58d5fc6f-785b-434c-8fdf-6c27a45a9a6a	2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:39.713134+00	\N	2025-09-12 12:21:39.713134+00
0931de02-4229-47fc-9de9-c3c657ce0220	2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:39.713134+00	\N	2025-09-12 12:21:39.713134+00
02860d56-3eeb-4735-8865-f2cf0fefa937	2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	todo	completed	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:39.799633+00	\N	2025-09-12 12:21:39.799633+00
fba49a7a-00ff-4158-bca3-cfbb8252d971	99f58461-1d1c-46ad-87cd-151935a03678	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:42.403155+00	\N	2025-09-12 12:21:42.403155+00
390e4ff3-a8ad-4429-990d-e270502c25af	99f58461-1d1c-46ad-87cd-151935a03678	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:42.403155+00	\N	2025-09-12 12:21:42.403155+00
3d19c19d-d56c-44a0-80e7-a7ac200e07aa	99f58461-1d1c-46ad-87cd-151935a03678	todo	in_progress	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 12:21:42.517158+00	\N	2025-09-12 12:21:42.517158+00
\.


--
-- Data for Name: tasks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tasks (id, project_id, milestone_id, title, description, status, priority, owner_id, due_date, created_at, updated_at, created_by, department_id) FROM stdin;
2d7f8ba7-bdeb-4786-b761-83ab624983a3	636c6d59-2c07-4e27-a789-9dd4f9db93d1	029c0318-0ae0-4092-a988-44cbdfed136f	Requirements Gathering & Stakeholder Interviews	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-07 18:12:35.800041+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
d25c78bd-ab83-47dd-816f-5869317afd8f	636c6d59-2c07-4e27-a789-9dd4f9db93d1	029c0318-0ae0-4092-a988-44cbdfed136f	Baseline System Assessment	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-07 18:12:35.800041+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
d8755055-8bd1-41d5-91f0-b73164958be1	636c6d59-2c07-4e27-a789-9dd4f9db93d1	029c0318-0ae0-4092-a988-44cbdfed136f	Avionics Upgrade Architecture Design	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-07 18:12:35.800041+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
8c628328-fb3a-468c-b3ea-be5a076918a8	636c6d59-2c07-4e27-a789-9dd4f9db93d1	029c0318-0ae0-4092-a988-44cbdfed136f	Digital Display Prototype Development	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-07 18:12:35.800041+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
10a907f2-51de-4eb5-8f04-8a9ec686e70e	636c6d59-2c07-4e27-a789-9dd4f9db93d1	029c0318-0ae0-4092-a988-44cbdfed136f	Human-Machine Interface (HMI) Redesign	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-07 18:12:35.800041+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
1620f025-f7f8-4dc4-ad10-c6f141f9aabe	f4554466-37e2-4f52-afb7-174eafd9ac0f	6f6e9b56-0eca-4dba-aa2f-e89fd431b708	Draft Project Charter (scope, objectives, success criteria)	\N	in_progress	medium	cde6f1f6-d7d3-4ae4-9d7c-2ea960634cac	2025-11-01	2025-09-08 16:08:41.919612+00	2025-09-08 16:13:48.046193+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
f3a36411-cf0f-45de-b73e-da75ea952966	f4554466-37e2-4f52-afb7-174eafd9ac0f	3230a2f1-b8be-48d2-9582-a97ebee4ee13	Define WBS & High-Level Timeline	\N	completed	medium	8958c7c6-5f79-4b29-a809-c7a69ef5ef97	2025-11-05	2025-09-08 16:08:41.919612+00	2025-09-09 06:21:07.397153+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
7031474f-5c9f-43ab-acab-db50d2e2f068	f4554466-37e2-4f52-afb7-174eafd9ac0f	6f6e9b56-0eca-4dba-aa2f-e89fd431b708	Estimate Effort & Set Initial Backlog	\N	in_progress	medium	8958c7c6-5f79-4b29-a809-c7a69ef5ef97	2025-07-31	2025-09-08 16:08:41.919612+00	2025-09-09 08:28:49.586803+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
4a67df02-3a16-4f9d-b627-d98c9c002a42	f4554466-37e2-4f52-afb7-174eafd9ac0f	3230a2f1-b8be-48d2-9582-a97ebee4ee13	Set up Communication Plan (cadence, channels, owners)	\N	completed	medium	\N	2025-11-03	2025-09-08 16:08:41.919612+00	2025-09-09 08:29:00.817436+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
e83c6f30-f053-4947-a570-f80604dc3ff1	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	2371132c-5f0e-4168-bfd5-5190cf8d0b99	Define Acceptance Criteria	\N	todo	medium	\N	2025-12-16	2025-09-10 12:50:45.964095+00	2025-09-10 12:50:45.964095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3db89f35-2f48-475e-892a-79759b593d4b	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	2371132c-5f0e-4168-bfd5-5190cf8d0b99	Prepare Test Data & Environments	\N	todo	medium	\N	2025-09-24	2025-09-10 12:50:45.964095+00	2025-09-10 12:50:45.964095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
1d9069ae-408e-4171-a9ec-b1b493b5137f	636c6d59-2c07-4e27-a789-9dd4f9db93d1	23637ae1-94be-4671-bb77-c6363351156e	Supplier Evaluation & Component Procurement	\N	todo	medium	f1318628-b66d-4bfc-9dfe-46a3374cef86	2025-12-01	2025-09-07 18:12:35.800041+00	2025-09-08 15:44:14.968532+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
7b2bbde8-f735-4aad-925b-e47d9f1b6839	636c6d59-2c07-4e27-a789-9dd4f9db93d1	23637ae1-94be-4671-bb77-c6363351156e	ystem Integration Testing Plan	\N	todo	medium	f1318628-b66d-4bfc-9dfe-46a3374cef86	2025-12-01	2025-09-07 18:12:35.800041+00	2025-09-08 15:44:35.240591+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
e1938059-c60c-4ef7-a40b-b09c08b2540c	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	b5578fb4-4398-433e-accc-186bbaaf9807	Plan Defect Triage & Sign-off Process	\N	todo	medium	\N	2025-09-22	2025-09-10 12:50:45.964095+00	2025-09-10 12:50:45.964095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
1915c642-8c62-4107-b063-f62c671a0fa8	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	b5578fb4-4398-433e-accc-186bbaaf9807	Schedule UAT Window	\N	todo	medium	\N	2025-09-25	2025-09-10 12:50:45.964095+00	2025-09-10 12:50:45.964095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
92ae8c7f-7d96-4641-a68f-5cf13ad6984a	636c6d59-2c07-4e27-a789-9dd4f9db93d1	23637ae1-94be-4671-bb77-c6363351156e	Final Integration & Flight Testing	\N	todo	medium	\N	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-08 15:51:47.918948+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
0ffce15d-1782-482f-8a7b-e6487554f80f	636c6d59-2c07-4e27-a789-9dd4f9db93d1	23637ae1-94be-4671-bb77-c6363351156e	Cockpit Mock-Up Testing	\N	todo	medium	26294eb1-5f9d-47af-b884-19c35a291c55	2025-07-30	2025-09-07 18:12:35.800041+00	2025-09-08 15:57:45.341992+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
adf0d942-488a-4c35-8d64-08eaa79e8803	636c6d59-2c07-4e27-a789-9dd4f9db93d1	23637ae1-94be-4671-bb77-c6363351156e	Certification Compliance Review	\N	completed	medium	2a48457f-4228-4a33-9b45-446f935e0476	2025-12-06	2025-09-07 18:12:35.800041+00	2025-09-08 15:58:37.954923+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
e44f7a2a-f99a-4433-bc28-f68d228391dc	f4554466-37e2-4f52-afb7-174eafd9ac0f	3230a2f1-b8be-48d2-9582-a97ebee4ee13	Schedule Kickoff Meeting & Share Agenda	\N	todo	medium	\N	2025-12-07	2025-09-08 16:08:41.919612+00	2025-09-08 16:08:41.919612+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
1fe41f14-7657-4598-b3b5-80197762b217	f4554466-37e2-4f52-afb7-174eafd9ac0f	3230a2f1-b8be-48d2-9582-a97ebee4ee13	Capture Minutes & Decisions from Kickoff	\N	todo	medium	\N	2025-12-07	2025-09-08 16:08:41.919612+00	2025-09-08 16:08:41.919612+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
35f2a626-9813-4c25-bb7c-a32af2fdd295	f4554466-37e2-4f52-afb7-174eafd9ac0f	6f6e9b56-0eca-4dba-aa2f-e89fd431b708	Identify Stakeholders & Create RACI	\N	todo	medium	156c9b52-aa37-465f-9984-01d0358e70d3	2025-11-02	2025-09-08 16:08:41.919612+00	2025-09-08 16:13:31.565999+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3e446909-6dbe-4652-aa71-67dc95545f22	f4554466-37e2-4f52-afb7-174eafd9ac0f	6f6e9b56-0eca-4dba-aa2f-e89fd431b708	Create Risk Register & Initial Risk Assessment	\N	in_progress	medium	156c9b52-aa37-465f-9984-01d0358e70d3	2025-11-04	2025-09-08 16:08:41.919612+00	2025-09-08 16:13:41.330048+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
e500e976-35bd-439d-8a89-b43c50aa78f0	7f3ec8f9-3896-4cf3-9123-2ca3bb418418	70cabb31-a83f-4d36-919b-6f42a4a28652	Draft Test Cases & Assign Owners	\N	todo	medium	\N	2025-12-18	2025-09-10 12:50:45.964095+00	2025-09-10 12:50:45.964095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
63fb8045-fbad-47d6-88a3-8dddb6e09466	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Create Risk Register & Initial Risk Assessment	\N	todo	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:25:33.040778+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
223a9df7-4864-41fa-b9b6-be5615187867	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Schedule Kickoff Meeting & Share Agenda	\N	todo	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:25:33.040778+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
d25a0ec6-dc2f-4165-bff2-0f92310d7634	c45fc909-075e-4c68-8471-14e78f438149	692b3fad-d190-485f-8f2f-e5bc57bd69b8	My task	\N	todo	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:25:33.040778+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
6bbd0592-0aa1-45c3-b272-5c634d74ac93	c45fc909-075e-4c68-8471-14e78f438149	692b3fad-d190-485f-8f2f-e5bc57bd69b8	Set up Communication Plan (cadence, channels, owners)	\N	todo	medium	\N	2025-10-17	2025-09-11 06:25:33.040778+00	2025-09-11 06:25:33.040778+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
298be80e-7b9d-4b89-8e96-7956690014b3	c45fc909-075e-4c68-8471-14e78f438149	692b3fad-d190-485f-8f2f-e5bc57bd69b8	Define WBS & High-Level Timeline	\N	todo	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:25:33.040778+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
292a2d22-ef86-41b2-b6e7-8b54c6be1a77	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Draft Project Charter (scope, objectives, success criteria)	\N	todo	medium	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:27:37.800316+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
bb527d75-82a9-4eaa-9acc-4a7ff501c920	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Estimate Effort & Set Initial Backlog	\N	blocked	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:31:04.38751+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
cea2d2cc-3ccc-4fe3-934f-ec428a6b8995	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Capture Minutes & Decisions from Kickoff	\N	completed	medium	\N	2025-12-10	2025-09-11 06:25:33.040778+00	2025-09-11 06:31:08.125261+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
75bbef7c-7ab7-477e-835a-2fe96ff6b675	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Identify Stakeholders & Create RACI	\N	todo	medium	\N	2025-11-07	2025-09-11 06:25:33.040778+00	2025-09-11 06:31:15.083058+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3f72fae7-fa19-450b-8255-15543a466485	c45fc909-075e-4c68-8471-14e78f438149	352bc7fa-49b1-442a-84da-7b0535421418	Find  another developer	Converted from action item - Discussion: Stackholder Discussion	todo	medium	9282cd32-6d1a-4999-89e4-a2dc4a36c1a4	2025-09-24	2025-09-11 06:35:36.19677+00	2025-09-11 06:35:36.19677+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
abc19f9a-c627-43cb-bced-1b80d61f2457	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ba2c25e4-d361-4260-8df6-ff7b419350b4	Set up Communication Plan (cadence, channels, owners)	\N	todo	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:00.532764+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
fc93d488-7c0c-4fdc-84cb-42b41dfb9bf6	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ba2c25e4-d361-4260-8df6-ff7b419350b4	Draft Project Charter (scope, objectives, success criteria)	\N	in_progress	medium	\N	2025-11-05	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:44.449455+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
6e8213b3-39a2-4da6-ad16-40e4dd875722	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ba2c25e4-d361-4260-8df6-ff7b419350b4	Define WBS & High-Level Timeline	\N	blocked	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:48.43948+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
9d0c44cd-2183-43b2-8342-a52c1f70dfa9	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ba2c25e4-d361-4260-8df6-ff7b419350b4	Schedule Kickoff Meeting & Share Agenda	\N	completed	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:52.038263+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
a539e533-8453-482b-8567-eb0302e74118	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	62f55c4e-312a-488e-bc21-06968809d276	Capture Minutes & Decisions from Kickoff	\N	todo	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:00.532764+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
8aa42517-21aa-4b96-8a96-6ed23bc56856	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	62f55c4e-312a-488e-bc21-06968809d276	Identify Stakeholders & Create RACI	\N	todo	medium	\N	2025-12-09	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:00.532764+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
2e13d54a-b5c3-4317-add0-ab4a7663b379	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	2c4cde6c-f3df-4d15-bc4f-4b962306fd7f	Create Risk Register & Initial Risk Assessment	\N	todo	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:00.532764+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
f539a1e8-0205-4bb0-af97-33cfcec993de	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	2c4cde6c-f3df-4d15-bc4f-4b962306fd7f	Estimate Effort & Set Initial Backlog	\N	todo	medium	\N	2025-12-11	2025-09-12 05:20:00.532764+00	2025-09-12 05:20:00.532764+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
5c6675ee-b22e-498a-856f-0f06234b0daa	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	ba2c25e4-d361-4260-8df6-ff7b419350b4	Action1	Converted from action item - Discussion: SM	todo	medium	28a52e60-b35a-474f-a038-fb71d3ab8b23	2025-09-25	2025-09-12 05:28:29.277069+00	2025-09-12 05:28:29.277069+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
526b0030-904f-4811-99e2-ff280bb6a22a	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Set up Communication Plan (cadence, channels, owners)	\N	todo	medium	\N	2025-11-18	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
59f2430a-aff2-455d-92d9-5d522c676e28	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Schedule Kickoff Meeting & Share Agenda	\N	todo	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
c7a2e41f-cc02-4e81-834a-9de5f3e02747	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Capture Minutes & Decisions from Kickoff	\N	todo	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
5cb188d1-ab20-4473-bdd8-4a6111960ddd	0dda829d-8923-4b93-9f24-a728d198803d	4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	My Task	\N	todo	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3f7a2315-a128-4bb0-a17f-eb0ebe999de0	0dda829d-8923-4b93-9f24-a728d198803d	4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	Identify Stakeholders & Create RACI	\N	todo	medium	\N	2025-11-12	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
91c9f8be-c44c-4bd4-8e4a-07d99ba015ff	0dda829d-8923-4b93-9f24-a728d198803d	4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	Create Risk Register & Initial Risk Assessment	\N	todo	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:09.847486+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
ddaf31b2-4187-48b7-948d-9483efa03596	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Draft Project Charter	\N	in_progress	medium	\N	2025-11-04	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:48.017892+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
f299b868-bfa1-4501-9cdb-4c0e18fdb630	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Define WBS & High-Level Timeline	\N	blocked	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:51.762196+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
a641dea5-9f1b-42c0-b8e9-f9bd40a9e2e6	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Estimate Effort & Set Initial Backlog	\N	completed	medium	\N	2025-12-11	2025-09-12 06:20:09.847486+00	2025-09-12 06:20:54.735095+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
5b4ccc08-763f-4256-a899-258e0ee73905	0dda829d-8923-4b93-9f24-a728d198803d	4a2c7d14-cbe3-452f-ada0-5bf4e5272a9a	Action 1 importnat 	Created from retrospective action item.\n\nOriginal card: "Action 1 importnat "\nWhen: Next Milestone \nWho: Sagar	todo	medium	\N	\N	2025-09-12 06:30:57.176784+00	2025-09-12 06:30:57.176784+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
c74ef828-f1a2-407a-8850-107721692f94	0dda829d-8923-4b93-9f24-a728d198803d	6d244fcc-88d0-41be-b702-03534bea28c0	Action 1 Derived from a meeting	Converted from action item - Discussion: Stackholder Review meeting	todo	medium	bc4c355c-04fc-4184-83a8-f76dab9058b9	2025-07-22	2025-09-12 06:26:39.307531+00	2025-09-12 06:32:13.429299+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
eddcb093-f93b-440f-b017-27ea90b5df4e	37e8b9a1-5209-4428-804f-6a879d557bd6	6129b78b-32d1-46a7-be85-0f10fbb55d57	My defined Task	\N	todo	medium	\N	2025-12-11	2025-09-12 12:15:56.33609+00	2025-09-12 12:15:56.33609+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
528aeff6-5acf-47a7-a855-177373dd2097	37e8b9a1-5209-4428-804f-6a879d557bd6	6129b78b-32d1-46a7-be85-0f10fbb55d57	Estimate Effort & Set Initial Backlog	\N	todo	medium	\N	2025-12-11	2025-09-12 12:15:56.33609+00	2025-09-12 12:15:56.33609+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
8add20bb-8fbb-4c59-b4af-7166d8fdc791	37e8b9a1-5209-4428-804f-6a879d557bd6	c39f42d3-0f6e-4a75-9fb4-a60283b6a72a	Define WBS & High-Level Timeline	\N	todo	medium	\N	2025-12-11	2025-09-12 12:15:56.33609+00	2025-09-12 12:15:56.33609+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
e0c41d46-fdf8-42ae-a033-57cf0bac641b	37e8b9a1-5209-4428-804f-6a879d557bd6	b6ddd165-04ed-44df-9126-1825d665f2ed	Identify Stakeholders & Create RACI	\N	blocked	medium	\N	2025-11-05	2025-09-12 12:15:56.33609+00	2025-09-12 12:21:30.508791+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
3542740c-1d6f-491e-8ead-efdeff2f0a74	37e8b9a1-5209-4428-804f-6a879d557bd6	b6ddd165-04ed-44df-9126-1825d665f2ed	Capture Minutes & Decisions	\N	in_progress	medium	\N	2025-12-11	2025-09-12 12:15:56.33609+00	2025-09-12 12:21:34.330219+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
602f01ca-8083-4691-af06-f90a25841f16	37e8b9a1-5209-4428-804f-6a879d557bd6	6129b78b-32d1-46a7-be85-0f10fbb55d57	Create Risk Register & Initial Risk Assessment	\N	completed	medium	\N	2025-11-14	2025-09-12 12:15:56.33609+00	2025-09-12 12:21:36.81859+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
2d02c8c1-a97e-4948-b1af-e49b8ad5c8ec	37e8b9a1-5209-4428-804f-6a879d557bd6	c39f42d3-0f6e-4a75-9fb4-a60283b6a72a	Set up Communication Plan (cadence, channels, owners)	\N	completed	medium	\N	2025-11-05	2025-09-12 12:15:56.33609+00	2025-09-12 12:21:39.713134+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
99f58461-1d1c-46ad-87cd-151935a03678	37e8b9a1-5209-4428-804f-6a879d557bd6	c39f42d3-0f6e-4a75-9fb4-a60283b6a72a	Schedule Kickoff Meeting & Share Agenda	\N	in_progress	medium	\N	2025-12-11	2025-09-12 12:15:56.33609+00	2025-09-12 12:21:42.403155+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
bf6d6a44-c091-40e1-993b-3e7448dcd19b	37e8b9a1-5209-4428-804f-6a879d557bd6	b6ddd165-04ed-44df-9126-1825d665f2ed	Draft Project Charter (scope, objectives, success criteria)	\N	todo	medium	24c6d8d4-f8ec-4944-9788-4f1814227f68	2025-09-01	2025-09-12 12:15:56.33609+00	2025-09-12 12:22:15.398551+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
ea047681-ebff-4913-b0dd-123cd696e418	37e8b9a1-5209-4428-804f-6a879d557bd6	6129b78b-32d1-46a7-be85-0f10fbb55d57	Action 1=> to do finance health  check 	Converted from action item - Discussion: Stackholder Streeming 	todo	medium	87a091f6-523a-430d-9854-3a94caf7bcc2	2025-09-19	2025-09-12 12:29:09.13527+00	2025-09-12 12:29:09.13527+00	6dc39f1e-2af3-4b78-8488-317d90f4f538	3af3b0f4-adca-4f11-826c-20ed36b31d46
\.


--
-- Data for Name: team_capacity_iterations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_capacity_iterations (id, project_id, iteration_name, start_date, end_date, working_days, committed_story_points, created_by, created_at, updated_at, department_id, team_id) FROM stdin;
18e8b5c8-6a82-448a-b5aa-879da75acd82	d1a18682-04ed-45ac-88ab-c30aab9752dc	Sprint 01	2025-08-30	2025-09-06	5	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 05:57:22.579587+00	2025-08-30 05:57:22.579587+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
6d41308d-632d-475f-8927-8c5301c6bb6c	d1a18682-04ed-45ac-88ab-c30aab9752dc	Sprint 2	2025-09-06	2025-09-13	5	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 06:15:34.418402+00	2025-08-30 06:15:34.418402+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
a601de13-6a24-4638-b7b9-6f911f973fed	f42f8463-7779-4439-9894-c237394ba57b	Sprint 1	2025-08-30	2025-09-20	15	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:23:52.588163+00	2025-08-30 13:23:52.588163+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
4f75b495-8627-45e9-9618-383179950857	f42f8463-7779-4439-9894-c237394ba57b	Sprint 111	2025-08-30	2025-09-20	15	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 13:23:53.266278+00	2025-08-30 13:46:16.728321+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
c5f894d6-06b2-438e-933c-da68cf319436	2d4540b1-25cd-4424-84fe-ba343a042eeb	IT1	2025-09-04	2025-09-09	4	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 13:24:24.042937+00	2025-09-02 13:24:24.042937+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
42a2961a-3d1b-4b3c-b3e7-351523f1587d	2d4540b1-25cd-4424-84fe-ba343a042eeb	pp	2025-09-09	2025-09-16	6	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-02 16:26:24.837893+00	2025-09-02 16:26:24.837893+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
7486f6a5-431a-4e5b-9aef-2479fbaa3cd8	2d4540b1-25cd-4424-84fe-ba343a042eeb	TTT1	2025-09-12	2025-09-26	11	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-05 10:17:21.64749+00	2025-09-05 10:17:21.64749+00	3af3b0f4-adca-4f11-826c-20ed36b31d46	\N
\.


--
-- Data for Name: team_capacity_members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_capacity_members (id, iteration_id, member_name, role, work_mode, leaves, availability_percent, effective_capacity_days, created_by, created_at, updated_at, department_id, stakeholder_id, team_id, team_member_id) FROM stdin;
\.


--
-- Data for Name: team_capacity_settings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_capacity_settings (id, project_id, iteration_basis, work_week, office_weight, wfh_weight, hybrid_weight, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: team_definitions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_definitions (id, team_id, stakeholder_id, default_availability_percent, default_leaves, created_by, created_at, updated_at) FROM stdin;
39b2abb1-7588-4aa7-9a53-0215c4c0de20	e16ee4af-6ddd-4d89-9a06-3705dbc16cb7	2bd737ef-1518-4965-980f-40aa4aaec5d1	100	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 06:15:14.401274+00	2025-08-30 06:15:14.401274+00
07f9cd5d-edf9-4b14-a84b-acf0f5504f2c	e16ee4af-6ddd-4d89-9a06-3705dbc16cb7	4cb39d75-47c6-46a9-9a15-4db8e1bca73c	100	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 06:15:14.401274+00	2025-08-30 06:15:14.401274+00
be53a233-0617-42e5-b256-4ecb07b1ce47	e16ee4af-6ddd-4d89-9a06-3705dbc16cb7	98b27245-a57e-4def-9fd3-bb7373ffd67c	100	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 06:15:14.401274+00	2025-08-30 06:15:14.401274+00
0dd4215a-2c92-4ef3-b801-8a002ba5835d	e16ee4af-6ddd-4d89-9a06-3705dbc16cb7	9e8ba70d-d542-4004-83d1-fcd235b58458	100	0	6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-08-30 06:15:14.401274+00	2025-08-30 06:15:14.401274+00
\.


--
-- Data for Name: team_members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_members (id, team_id, display_name, role, email, work_mode, created_at, updated_at) FROM stdin;
3bd2eccd-76aa-4150-a52e-d5946e23d32f	8e85eab6-9502-4959-bd81-4ca332dcd720	Dr. Ananya Sharma	Chief Project Manager		office	2025-09-07 18:31:49.296747+00	2025-09-07 18:31:49.296747+00
455dcdb4-e3f3-4483-94a8-871e42bf20d2	8e85eab6-9502-4959-bd81-4ca332dcd720	Jean-Luc Martin	Lead Avionics Engineer		office	2025-09-07 18:31:50.056176+00	2025-09-07 18:31:50.056176+00
7d6aafa3-c155-4454-904c-0c7b320e03b0	8e85eab6-9502-4959-bd81-4ca332dcd720	Maria Fernandez	Certification & Compliance Officer		office	2025-09-07 18:31:50.577708+00	2025-09-07 18:31:50.577708+00
c8e4aa24-80a4-404a-b411-973e1d9e5ab8	8e85eab6-9502-4959-bd81-4ca332dcd720	Capt. Arjun Rao	Test Pilot		office	2025-09-07 18:31:51.064316+00	2025-09-07 18:31:51.064316+00
8784e80a-4b63-4a64-9230-19ec9b3d5b44	8e85eab6-9502-4959-bd81-4ca332dcd720	Sophie Müller	Human Factors Specialist		office	2025-09-07 18:31:51.719775+00	2025-09-07 18:31:51.719775+00
dbf131e7-7897-4a2c-bda5-00bcc4f82c0f	8e85eab6-9502-4959-bd81-4ca332dcd720	Rahul Mehta	Quality Assurance Manager		office	2025-09-07 18:31:52.212141+00	2025-09-07 18:31:52.212141+00
c70b1ba2-9e9e-4b58-9399-ce0286341456	8e85eab6-9502-4959-bd81-4ca332dcd720	Daniel Thompson	Procurement Manager		office	2025-09-07 18:31:52.867557+00	2025-09-07 18:31:52.867557+00
bf9bfae4-e77f-452e-8947-fcb6060e9201	8d1f91f2-b909-4240-ba19-e33f3ca1df87	Maria Fernandez	ertification & Compliance Officer		office	2025-09-08 16:22:11.326356+00	2025-09-08 16:22:11.326356+00
1d343068-5654-4218-93e7-002afda6f3c3	8d1f91f2-b909-4240-ba19-e33f3ca1df87	Capt. Arjun Rao	Test Pilot		office	2025-09-08 16:22:12.099248+00	2025-09-08 16:22:12.099248+00
08fd78f6-b161-4c94-bb9c-3a69b12be552	8d1f91f2-b909-4240-ba19-e33f3ca1df87	Sophie Müller	Human Factors Specialist		office	2025-09-08 16:22:12.729365+00	2025-09-08 16:22:12.729365+00
945ce44e-8c2c-440b-87b5-fb3f410706ef	3e97c539-3b12-4fea-b0fb-a09583c0d33e	Anita	PO		office	2025-09-11 06:36:55.454346+00	2025-09-11 06:36:55.454346+00
ccd62ef7-e74a-4ca1-ac49-8fd514fa347e	3e97c539-3b12-4fea-b0fb-a09583c0d33e	Member2	Developer		office	2025-09-11 06:36:56.214575+00	2025-09-11 06:36:56.214575+00
2bbdf85a-f972-49cf-81c4-606f6c6b0c6f	3e97c539-3b12-4fea-b0fb-a09583c0d33e	Sagar	PM		office	2025-09-11 06:36:57.161241+00	2025-09-11 06:36:57.161241+00
cea646af-43b4-481f-899e-1f857d68935e	81af0d12-183e-4a8e-b03b-77e5b27798d1	M1	Dev		office	2025-09-12 05:23:06.161919+00	2025-09-12 05:23:06.161919+00
9c35ed58-376e-418b-8c43-0eaca7917ae5	81af0d12-183e-4a8e-b03b-77e5b27798d1	M2	RTE		office	2025-09-12 05:23:07.100618+00	2025-09-12 05:23:07.100618+00
7b37e7c9-1acc-4da5-b26e-a2f2062b7dd6	81af0d12-183e-4a8e-b03b-77e5b27798d1	M3	Arc		office	2025-09-12 05:23:07.682184+00	2025-09-12 05:23:07.682184+00
8df01a73-09a2-4ac4-b3bd-cc5817edceaf	81af0d12-183e-4a8e-b03b-77e5b27798d1	M4	Dev		office	2025-09-12 05:23:08.370762+00	2025-09-12 05:23:08.370762+00
\.


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teams (id, project_id, name, description, created_by, created_at, updated_at) FROM stdin;
8e85eab6-9502-4959-bd81-4ca332dcd720	636c6d59-2c07-4e27-a789-9dd4f9db93d1	Cockpit Modernization Core Team		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-07 18:31:48.362977+00	2025-09-07 18:31:48.362977+00
8d1f91f2-b909-4240-ba19-e33f3ca1df87	f4554466-37e2-4f52-afb7-174eafd9ac0f	Dev		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-08 16:22:10.588234+00	2025-09-08 16:22:10.588234+00
3e97c539-3b12-4fea-b0fb-a09583c0d33e	c45fc909-075e-4c68-8471-14e78f438149	Falcon		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-11 06:36:54.347091+00	2025-09-11 06:36:54.347091+00
81af0d12-183e-4a8e-b03b-77e5b27798d1	c1b7c5c9-08b4-44bb-85f9-069aef2c8cf2	Dev		6dc39f1e-2af3-4b78-8488-317d90f4f538	2025-09-12 05:23:05.439312+00	2025-09-12 05:23:05.439312+00
\.


--
-- Data for Name: user_roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_roles (id, user_id, role, assigned_at) FROM stdin;
b4646075-ab17-42ef-8f4a-1fbfdf2ac72b	6dc39f1e-2af3-4b78-8488-317d90f4f538	project_coordinator	2025-08-26 17:31:16.026661+00
61657de7-edc8-449c-818d-c078128e403f	aa3ceb36-97df-4b82-856c-a74d2b233de3	project_coordinator	2025-08-26 17:41:13.68615+00
e1373b83-66a4-4637-9c61-213666b5aacb	48667d27-66e4-41e1-ad80-08005288ea08	admin	2025-08-26 17:43:22.18629+00
b6933e2d-d948-4a2d-a767-6fb25e463509	57e5b843-afee-400d-8cd5-6a0b362c6d93	project_coordinator	2025-08-30 08:37:25.763195+00
\.


--
-- Data for Name: weekly_availability; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.weekly_availability (id, iteration_week_id, team_member_id, availability_percent, calculated_days_present, calculated_days_total, notes, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: weekly_member_availability; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.weekly_member_availability (id, iteration_week_id, team_member_id, availability_percent, leaves, effective_capacity, notes, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.schema_migrations (version, inserted_at) FROM stdin;
20211116024918	2025-08-26 17:12:17
20211116045059	2025-08-26 17:12:17
20211116050929	2025-08-26 17:12:17
20211116051442	2025-08-26 17:12:17
20211116212300	2025-08-26 17:12:17
20211116213355	2025-08-26 17:12:18
20211116213934	2025-08-26 17:12:18
20211116214523	2025-08-26 17:12:18
20211122062447	2025-08-26 17:12:18
20211124070109	2025-08-26 17:12:18
20211202204204	2025-08-26 17:12:18
20211202204605	2025-08-26 17:12:18
20211210212804	2025-08-26 17:12:18
20211228014915	2025-08-26 17:12:18
20220107221237	2025-08-26 17:12:18
20220228202821	2025-08-26 17:12:18
20220312004840	2025-08-26 17:12:18
20220603231003	2025-08-26 17:12:18
20220603232444	2025-08-26 17:12:18
20220615214548	2025-08-26 17:12:18
20220712093339	2025-08-26 17:12:18
20220908172859	2025-08-26 17:12:18
20220916233421	2025-08-26 17:12:18
20230119133233	2025-08-26 17:12:18
20230128025114	2025-08-26 17:12:18
20230128025212	2025-08-26 17:12:18
20230227211149	2025-08-26 17:12:18
20230228184745	2025-08-26 17:12:18
20230308225145	2025-08-26 17:12:18
20230328144023	2025-08-26 17:12:18
20231018144023	2025-08-26 17:12:18
20231204144023	2025-08-26 17:12:18
20231204144024	2025-08-26 17:12:18
20231204144025	2025-08-26 17:12:18
20240108234812	2025-08-26 17:12:18
20240109165339	2025-08-26 17:12:18
20240227174441	2025-08-26 17:12:18
20240311171622	2025-08-26 17:12:18
20240321100241	2025-08-26 17:12:18
20240401105812	2025-08-26 17:12:18
20240418121054	2025-08-26 17:12:18
20240523004032	2025-08-26 17:12:18
20240618124746	2025-08-26 17:12:18
20240801235015	2025-08-26 17:12:18
20240805133720	2025-08-26 17:12:18
20240827160934	2025-08-26 17:12:18
20240919163303	2025-08-26 17:12:18
20240919163305	2025-08-26 17:12:18
20241019105805	2025-08-26 17:12:18
20241030150047	2025-08-26 17:12:18
20241108114728	2025-08-26 17:12:18
20241121104152	2025-08-26 17:12:18
20241130184212	2025-08-26 17:12:18
20241220035512	2025-08-26 17:12:19
20241220123912	2025-08-26 17:12:19
20241224161212	2025-08-26 17:12:19
20250107150512	2025-08-26 17:12:19
20250110162412	2025-08-26 17:12:19
20250123174212	2025-08-26 17:12:19
20250128220012	2025-08-26 17:12:19
20250506224012	2025-08-26 17:12:19
20250523164012	2025-08-26 17:12:19
20250714121412	2025-08-26 17:12:19
\.


--
-- Data for Name: subscription; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.subscription (id, subscription_id, entity, filters, claims, created_at) FROM stdin;
\.


--
-- Data for Name: buckets; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets (id, name, owner, created_at, updated_at, public, avif_autodetection, file_size_limit, allowed_mime_types, owner_id, type) FROM stdin;
\.


--
-- Data for Name: buckets_analytics; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets_analytics (id, type, format, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.migrations (id, name, hash, executed_at) FROM stdin;
0	create-migrations-table	e18db593bcde2aca2a408c4d1100f6abba2195df	2025-08-26 17:12:18.416108
1	initialmigration	6ab16121fbaa08bbd11b712d05f358f9b555d777	2025-08-26 17:12:18.421172
2	storage-schema	5c7968fd083fcea04050c1b7f6253c9771b99011	2025-08-26 17:12:18.425221
3	pathtoken-column	2cb1b0004b817b29d5b0a971af16bafeede4b70d	2025-08-26 17:12:18.443965
4	add-migrations-rls	427c5b63fe1c5937495d9c635c263ee7a5905058	2025-08-26 17:12:18.45605
5	add-size-functions	79e081a1455b63666c1294a440f8ad4b1e6a7f84	2025-08-26 17:12:18.460402
6	change-column-name-in-get-size	f93f62afdf6613ee5e7e815b30d02dc990201044	2025-08-26 17:12:18.465627
7	add-rls-to-buckets	e7e7f86adbc51049f341dfe8d30256c1abca17aa	2025-08-26 17:12:18.469995
8	add-public-to-buckets	fd670db39ed65f9d08b01db09d6202503ca2bab3	2025-08-26 17:12:18.474089
9	fix-search-function	3a0af29f42e35a4d101c259ed955b67e1bee6825	2025-08-26 17:12:18.479195
10	search-files-search-function	68dc14822daad0ffac3746a502234f486182ef6e	2025-08-26 17:12:18.48348
11	add-trigger-to-auto-update-updated_at-column	7425bdb14366d1739fa8a18c83100636d74dcaa2	2025-08-26 17:12:18.487379
12	add-automatic-avif-detection-flag	8e92e1266eb29518b6a4c5313ab8f29dd0d08df9	2025-08-26 17:12:18.491366
13	add-bucket-custom-limits	cce962054138135cd9a8c4bcd531598684b25e7d	2025-08-26 17:12:18.498185
14	use-bytes-for-max-size	941c41b346f9802b411f06f30e972ad4744dad27	2025-08-26 17:12:18.501827
15	add-can-insert-object-function	934146bc38ead475f4ef4b555c524ee5d66799e5	2025-08-26 17:12:18.518822
16	add-version	76debf38d3fd07dcfc747ca49096457d95b1221b	2025-08-26 17:12:18.522054
17	drop-owner-foreign-key	f1cbb288f1b7a4c1eb8c38504b80ae2a0153d101	2025-08-26 17:12:18.52613
18	add_owner_id_column_deprecate_owner	e7a511b379110b08e2f214be852c35414749fe66	2025-08-26 17:12:18.530825
19	alter-default-value-objects-id	02e5e22a78626187e00d173dc45f58fa66a4f043	2025-08-26 17:12:18.536034
20	list-objects-with-delimiter	cd694ae708e51ba82bf012bba00caf4f3b6393b7	2025-08-26 17:12:18.539743
21	s3-multipart-uploads	8c804d4a566c40cd1e4cc5b3725a664a9303657f	2025-08-26 17:12:18.546777
22	s3-multipart-uploads-big-ints	9737dc258d2397953c9953d9b86920b8be0cdb73	2025-08-26 17:12:18.559922
23	optimize-search-function	9d7e604cddc4b56a5422dc68c9313f4a1b6f132c	2025-08-26 17:12:18.568019
24	operation-function	8312e37c2bf9e76bbe841aa5fda889206d2bf8aa	2025-08-26 17:12:18.571376
25	custom-metadata	d974c6057c3db1c1f847afa0e291e6165693b990	2025-08-26 17:12:18.574708
26	objects-prefixes	ef3f7871121cdc47a65308e6702519e853422ae2	2025-08-30 18:40:09.119938
27	search-v2	33b8f2a7ae53105f028e13e9fcda9dc4f356b4a2	2025-08-30 18:40:09.324712
28	object-bucket-name-sorting	ba85ec41b62c6a30a3f136788227ee47f311c436	2025-08-30 18:40:09.612286
29	create-prefixes	a7b1a22c0dc3ab630e3055bfec7ce7d2045c5b7b	2025-08-30 18:40:09.721657
30	update-object-levels	6c6f6cc9430d570f26284a24cf7b210599032db7	2025-08-30 18:40:09.923481
31	objects-level-index	33f1fef7ec7fea08bb892222f4f0f5d79bab5eb8	2025-08-30 18:40:10.025955
32	backward-compatible-index-on-objects	2d51eeb437a96868b36fcdfb1ddefdf13bef1647	2025-08-30 18:40:10.31351
33	backward-compatible-index-on-prefixes	fe473390e1b8c407434c0e470655945b110507bf	2025-08-30 18:40:10.414527
34	optimize-search-function-v1	82b0e469a00e8ebce495e29bfa70a0797f7ebd2c	2025-08-30 18:40:10.520419
35	add-insert-trigger-prefixes	63bb9fd05deb3dc5e9fa66c83e82b152f0caf589	2025-08-30 18:40:11.324061
36	optimise-existing-functions	81cf92eb0c36612865a18016a38496c530443899	2025-08-30 18:40:11.51177
37	add-bucket-name-length-trigger	3944135b4e3e8b22d6d4cbb568fe3b0b51df15c1	2025-08-30 18:40:11.612092
38	iceberg-catalog-flag-on-buckets	19a8bd89d5dfa69af7f222a46c726b7c41e462c5	2025-08-30 18:40:11.620256
\.


--
-- Data for Name: objects; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.objects (id, bucket_id, name, owner, created_at, updated_at, last_accessed_at, metadata, version, owner_id, user_metadata, level) FROM stdin;
\.


--
-- Data for Name: prefixes; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.prefixes (bucket_id, name, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: s3_multipart_uploads; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads (id, in_progress_size, upload_signature, bucket_id, key, version, owner_id, created_at, user_metadata) FROM stdin;
\.


--
-- Data for Name: s3_multipart_uploads_parts; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads_parts (id, upload_id, size, part_number, bucket_id, key, etag, owner_id, version, created_at) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: supabase_migrations; Owner: postgres
--

COPY supabase_migrations.schema_migrations (version, statements, name, created_by, idempotency_key) FROM stdin;
20250826052024	{"-- Create user roles enum\nCREATE TYPE public.app_role AS ENUM ('admin', 'project_coordinator');\n\n-- Create profiles table\nCREATE TABLE public.profiles (\n    id UUID NOT NULL REFERENCES auth.users ON DELETE CASCADE,\n    email TEXT NOT NULL,\n    full_name TEXT,\n    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n    PRIMARY KEY (id)\n);\n\n-- Create user_roles table\nCREATE TABLE public.user_roles (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,\n    role app_role NOT NULL,\n    assigned_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    UNIQUE (user_id, role)\n);\n\n-- Create projects table\nCREATE TABLE public.projects (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    name TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'planning' CHECK (status IN ('planning', 'active', 'on_hold', 'completed', 'cancelled')),\n    priority TEXT DEFAULT 'medium' CHECK (priority IN ('low', 'medium', 'high', 'critical')),\n    start_date DATE,\n    end_date DATE,\n    created_by UUID REFERENCES auth.users(id) NOT NULL,\n    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create project_members table\nCREATE TABLE public.project_members (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    project_id UUID REFERENCES public.projects(id) ON DELETE CASCADE NOT NULL,\n    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,\n    role TEXT DEFAULT 'member' CHECK (role IN ('lead', 'member')),\n    joined_at TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    UNIQUE (project_id, user_id)\n);\n\n-- Enable RLS on all tables\nALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.user_roles ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.projects ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.project_members ENABLE ROW LEVEL SECURITY;\n\n-- Create security definer function to check roles\nCREATE OR REPLACE FUNCTION public.has_role(_user_id UUID, _role app_role)\nRETURNS BOOLEAN\nLANGUAGE SQL\nSTABLE\nSECURITY DEFINER\nAS $$\n    SELECT EXISTS (\n        SELECT 1\n        FROM public.user_roles\n        WHERE user_id = _user_id\n        AND role = _role\n    )\n$$;\n\n-- Create function to update timestamps\nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Create triggers for timestamp updates\nCREATE TRIGGER update_profiles_updated_at\n    BEFORE UPDATE ON public.profiles\n    FOR EACH ROW\n    EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_projects_updated_at\n    BEFORE UPDATE ON public.projects\n    FOR EACH ROW\n    EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create function to handle new user signups\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER SET search_path = public\nAS $$\nBEGIN\n    -- Insert into profiles\n    INSERT INTO public.profiles (id, email, full_name)\n    VALUES (\n        NEW.id, \n        NEW.email,\n        COALESCE(NEW.raw_user_meta_data ->> 'full_name', NEW.email)\n    );\n    \n    -- Assign Project Coordinator role by default (unless it's the admin email)\n    IF NEW.email = 'admin@admin.com' THEN\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'admin');\n    ELSE\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'project_coordinator');\n    END IF;\n    \n    RETURN NEW;\nEND;\n$$;\n\n-- Create trigger for new user handling\nCREATE TRIGGER on_auth_user_created\n    AFTER INSERT ON auth.users\n    FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();\n\n-- RLS Policies for profiles\nCREATE POLICY \\"Users can view their own profile\\"\n    ON public.profiles FOR SELECT\n    USING (auth.uid() = id);\n\nCREATE POLICY \\"Users can update their own profile\\"\n    ON public.profiles FOR UPDATE\n    USING (auth.uid() = id);\n\nCREATE POLICY \\"Admins can view all profiles\\"\n    ON public.profiles FOR SELECT\n    USING (public.has_role(auth.uid(), 'admin'));\n\nCREATE POLICY \\"Admins can update all profiles\\"\n    ON public.profiles FOR UPDATE\n    USING (public.has_role(auth.uid(), 'admin'));\n\n-- RLS Policies for user_roles\nCREATE POLICY \\"Users can view their own roles\\"\n    ON public.user_roles FOR SELECT\n    USING (auth.uid() = user_id);\n\nCREATE POLICY \\"Admins can view all user roles\\"\n    ON public.user_roles FOR SELECT\n    USING (public.has_role(auth.uid(), 'admin'));\n\nCREATE POLICY \\"Admins can manage user roles\\"\n    ON public.user_roles FOR ALL\n    USING (public.has_role(auth.uid(), 'admin'));\n\n-- RLS Policies for projects\nCREATE POLICY \\"Authenticated users can view projects\\"\n    ON public.projects FOR SELECT\n    TO authenticated\n    USING (true);\n\nCREATE POLICY \\"Authenticated users can create projects\\"\n    ON public.projects FOR INSERT\n    TO authenticated\n    WITH CHECK (auth.uid() = created_by);\n\nCREATE POLICY \\"Project creators and admins can update projects\\"\n    ON public.projects FOR UPDATE\n    TO authenticated\n    USING (\n        auth.uid() = created_by OR \n        public.has_role(auth.uid(), 'admin')\n    );\n\nCREATE POLICY \\"Admins can delete projects\\"\n    ON public.projects FOR DELETE\n    TO authenticated\n    USING (public.has_role(auth.uid(), 'admin'));\n\n-- RLS Policies for project_members\nCREATE POLICY \\"Users can view project memberships\\"\n    ON public.project_members FOR SELECT\n    TO authenticated\n    USING (true);\n\nCREATE POLICY \\"Project creators and admins can manage memberships\\"\n    ON public.project_members FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM public.projects \n            WHERE id = project_id \n            AND (created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'))\n        )\n    );"}		ms86100@gmail.com	\N
20250826053634	{"-- Ensure the signup trigger exists to automatically create profile and assign roles\n-- 1) Create/replace the trigger on auth.users to call public.handle_new_user\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\nCREATE TRIGGER on_auth_user_created\nAFTER INSERT ON auth.users\nFOR EACH ROW\nEXECUTE FUNCTION public.handle_new_user();\n\n-- 2) Backfill: if admin@admin.com already exists, ensure profile and admin role are present\nDO $$\nDECLARE\n  admin_user_id uuid;\n  admin_full_name text;\nBEGIN\n  SELECT id, COALESCE(raw_user_meta_data->>'full_name', 'Admin')\n    INTO admin_user_id, admin_full_name\n  FROM auth.users\n  WHERE email = 'admin@admin.com'\n  LIMIT 1;\n\n  IF admin_user_id IS NOT NULL THEN\n    -- Ensure profile exists\n    INSERT INTO public.profiles (id, email, full_name)\n    SELECT admin_user_id, 'admin@admin.com', admin_full_name\n    WHERE NOT EXISTS (\n      SELECT 1 FROM public.profiles p WHERE p.id = admin_user_id\n    );\n\n    -- Ensure admin role exists\n    INSERT INTO public.user_roles (user_id, role)\n    SELECT admin_user_id, 'admin'::public.app_role\n    WHERE NOT EXISTS (\n      SELECT 1 FROM public.user_roles ur WHERE ur.user_id = admin_user_id AND ur.role = 'admin'::public.app_role\n    );\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250826114316	{"-- Create departments table\nCREATE TABLE public.departments (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  name text NOT NULL UNIQUE,\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on departments\nALTER TABLE public.departments ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for departments\nCREATE POLICY \\"Everyone can view departments\\" \nON public.departments \nFOR SELECT \nUSING (true);\n\nCREATE POLICY \\"Admins can manage departments\\" \nON public.departments \nFOR ALL \nUSING (has_role(auth.uid(), 'admin'::app_role));\n\n-- Add department_id to profiles table\nALTER TABLE public.profiles \nADD COLUMN department_id uuid REFERENCES public.departments(id);\n\n-- Create trigger for department updated_at\nCREATE TRIGGER update_departments_updated_at\nBEFORE UPDATE ON public.departments\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250827053733	{"-- Create milestones table first\nCREATE TABLE public.milestones (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,\n  name TEXT NOT NULL,\n  description TEXT,\n  due_date DATE NOT NULL,\n  status TEXT NOT NULL DEFAULT 'planning',\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  created_by UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE\n);\n\n-- Create tasks table after milestones\nCREATE TABLE public.tasks (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,\n  milestone_id UUID REFERENCES public.milestones(id) ON DELETE SET NULL,\n  title TEXT NOT NULL,\n  description TEXT,\n  status TEXT NOT NULL DEFAULT 'todo',\n  priority TEXT DEFAULT 'medium',\n  owner_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,\n  due_date DATE,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  created_by UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE\n);\n\n-- Enable RLS on both tables\nALTER TABLE public.tasks ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.milestones ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for tasks\nCREATE POLICY \\"Users can view tasks in their projects\\"\nON public.tasks\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = tasks.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create tasks in their projects\\"\nON public.tasks\nFOR INSERT\nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = tasks.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n  AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can update tasks in their projects\\"\nON public.tasks\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = tasks.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can delete tasks in their projects\\"\nON public.tasks\nFOR DELETE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = tasks.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\n-- Create policies for milestones\nCREATE POLICY \\"Users can view milestones in their projects\\"\nON public.milestones\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = milestones.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create milestones in their projects\\"\nON public.milestones\nFOR INSERT\nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = milestones.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n  AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can update milestones in their projects\\"\nON public.milestones\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = milestones.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can delete milestones in their projects\\"\nON public.milestones\nFOR DELETE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = milestones.project_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\n-- Create triggers for updated_at columns\nCREATE TRIGGER update_tasks_updated_at\n  BEFORE UPDATE ON public.tasks\n  FOR EACH ROW\n  EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_milestones_updated_at\n  BEFORE UPDATE ON public.milestones\n  FOR EACH ROW\n  EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create indexes for better performance\nCREATE INDEX idx_tasks_project_id ON public.tasks(project_id);\nCREATE INDEX idx_tasks_milestone_id ON public.tasks(milestone_id);\nCREATE INDEX idx_tasks_owner_id ON public.tasks(owner_id);\nCREATE INDEX idx_tasks_status ON public.tasks(status);\nCREATE INDEX idx_milestones_project_id ON public.milestones(project_id);\nCREATE INDEX idx_milestones_due_date ON public.milestones(due_date);"}		ms86100@gmail.com	\N
20250827111020	{"-- 1) Add department_id to existing tables\nALTER TABLE public.projects        ADD COLUMN IF NOT EXISTS department_id uuid REFERENCES public.departments(id);\nALTER TABLE public.milestones      ADD COLUMN IF NOT EXISTS department_id uuid REFERENCES public.departments(id);\nALTER TABLE public.tasks           ADD COLUMN IF NOT EXISTS department_id uuid REFERENCES public.departments(id);\nALTER TABLE public.project_members ADD COLUMN IF NOT EXISTS department_id uuid REFERENCES public.departments(id);\n\n-- 2) Backfill existing rows from profiles where possible\nUPDATE public.projects p\nSET department_id = pr.department_id\nFROM public.profiles pr\nWHERE p.department_id IS NULL AND pr.id = p.created_by;\n\nUPDATE public.milestones m\nSET department_id = pr.department_id\nFROM public.profiles pr\nWHERE m.department_id IS NULL AND pr.id = m.created_by;\n\nUPDATE public.tasks t\nSET department_id = pr.department_id\nFROM public.profiles pr\nWHERE t.department_id IS NULL AND pr.id = t.created_by;\n\nUPDATE public.project_members pm\nSET department_id = pr.department_id\nFROM public.profiles pr\nWHERE pm.department_id IS NULL AND pr.id = pm.user_id;\n\n-- 3) Helper function to get a user's department\nCREATE OR REPLACE FUNCTION public.get_user_department(_user_id uuid)\nRETURNS uuid\nLANGUAGE sql\nSTABLE\nAS $$\n  SELECT department_id FROM public.profiles WHERE id = _user_id;\n$$;\n\n-- 4) Triggers to auto-populate department_id on INSERT\n-- Projects: use created_by\nCREATE OR REPLACE FUNCTION public.trg_projects_set_department()\nRETURNS trigger AS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$ LANGUAGE plpgsql;\n\nDROP TRIGGER IF EXISTS trg_projects_set_department ON public.projects;\nCREATE TRIGGER trg_projects_set_department\nBEFORE INSERT ON public.projects\nFOR EACH ROW EXECUTE FUNCTION public.trg_projects_set_department();\n\n-- Milestones: use created_by\nCREATE OR REPLACE FUNCTION public.trg_milestones_set_department()\nRETURNS trigger AS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$ LANGUAGE plpgsql;\n\nDROP TRIGGER IF EXISTS trg_milestones_set_department ON public.milestones;\nCREATE TRIGGER trg_milestones_set_department\nBEFORE INSERT ON public.milestones\nFOR EACH ROW EXECUTE FUNCTION public.trg_milestones_set_department();\n\n-- Tasks: use created_by\nCREATE OR REPLACE FUNCTION public.trg_tasks_set_department()\nRETURNS trigger AS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$ LANGUAGE plpgsql;\n\nDROP TRIGGER IF EXISTS trg_tasks_set_department ON public.tasks;\nCREATE TRIGGER trg_tasks_set_department\nBEFORE INSERT ON public.tasks\nFOR EACH ROW EXECUTE FUNCTION public.trg_tasks_set_department();\n\n-- Project members: use user_id\nCREATE OR REPLACE FUNCTION public.trg_project_members_set_department()\nRETURNS trigger AS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.user_id);\n  END IF;\n  RETURN NEW;\nEND;$$ LANGUAGE plpgsql;\n\nDROP TRIGGER IF EXISTS trg_project_members_set_department ON public.project_members;\nCREATE TRIGGER trg_project_members_set_department\nBEFORE INSERT ON public.project_members\nFOR EACH ROW EXECUTE FUNCTION public.trg_project_members_set_department();\n\n-- 5) Indexes for performance\nCREATE INDEX IF NOT EXISTS idx_projects_department_id        ON public.projects(department_id);\nCREATE INDEX IF NOT EXISTS idx_milestones_department_id      ON public.milestones(department_id);\nCREATE INDEX IF NOT EXISTS idx_tasks_department_id           ON public.tasks(department_id);\nCREATE INDEX IF NOT EXISTS idx_project_members_department_id ON public.project_members(department_id);"}		ms86100@gmail.com	\N
20250827111049	{"-- Fix security warnings by setting proper search paths for all functions\nCREATE OR REPLACE FUNCTION public.get_user_department(_user_id uuid)\nRETURNS uuid\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER \nSET search_path = public\nAS $$\n  SELECT department_id FROM public.profiles WHERE id = _user_id;\n$$;\n\nCREATE OR REPLACE FUNCTION public.trg_projects_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_milestones_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_tasks_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_project_members_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.user_id);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\n-- Fix existing functions that were missing search paths\nCREATE OR REPLACE FUNCTION public.has_role(_user_id uuid, _role app_role)\nRETURNS boolean\nLANGUAGE sql\nSTABLE \nSECURITY DEFINER\nSET search_path = public\nAS $$\n    SELECT EXISTS (\n        SELECT 1\n        FROM public.user_roles\n        WHERE user_id = _user_id\n        AND role = _role\n    )\n$$;\n\nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n    -- Insert into profiles\n    INSERT INTO public.profiles (id, email, full_name)\n    VALUES (\n        NEW.id, \n        NEW.email,\n        COALESCE(NEW.raw_user_meta_data ->> 'full_name', NEW.email)\n    );\n    \n    -- Assign Project Coordinator role by default (unless it's the admin email)\n    IF NEW.email = 'admin@admin.com' THEN\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'admin');\n    ELSE\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'project_coordinator');\n    END IF;\n    \n    RETURN NEW;\nEND;\n$$;"}		ms86100@gmail.com	\N
20250827111106	{"-- Fix security warnings by setting proper search paths for all functions\nCREATE OR REPLACE FUNCTION public.get_user_department(_user_id uuid)\nRETURNS uuid\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER \nSET search_path = public\nAS $$\n  SELECT department_id FROM public.profiles WHERE id = _user_id;\n$$;\n\nCREATE OR REPLACE FUNCTION public.trg_projects_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_milestones_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_tasks_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\nCREATE OR REPLACE FUNCTION public.trg_project_members_set_department()\nRETURNS trigger \nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.user_id);\n  END IF;\n  RETURN NEW;\nEND;$$;\n\n-- Fix existing functions that were missing search paths\nCREATE OR REPLACE FUNCTION public.has_role(_user_id uuid, _role app_role)\nRETURNS boolean\nLANGUAGE sql\nSTABLE \nSECURITY DEFINER\nSET search_path = public\nAS $$\n    SELECT EXISTS (\n        SELECT 1\n        FROM public.user_roles\n        WHERE user_id = _user_id\n        AND role = _role\n    )\n$$;\n\nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER \nSET search_path = public\nAS $$\nBEGIN\n    -- Insert into profiles\n    INSERT INTO public.profiles (id, email, full_name)\n    VALUES (\n        NEW.id, \n        NEW.email,\n        COALESCE(NEW.raw_user_meta_data ->> 'full_name', NEW.email)\n    );\n    \n    -- Assign Project Coordinator role by default (unless it's the admin email)\n    IF NEW.email = 'admin@admin.com' THEN\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'admin');\n    ELSE\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'project_coordinator');\n    END IF;\n    \n    RETURN NEW;\nEND;\n$$;"}		ms86100@gmail.com	\N
20250827120417	{"-- Create stakeholders table for project stakeholder management\nCREATE TABLE public.stakeholders (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,\n  name TEXT NOT NULL,\n  email TEXT,\n  department TEXT,\n  raci TEXT CHECK (raci IN ('Responsible', 'Accountable', 'Consulted', 'Informed')),\n  influence_level TEXT CHECK (influence_level IN ('Low', 'Medium', 'High', 'Critical')),\n  notes TEXT,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  created_by UUID NOT NULL REFERENCES auth.users(id)\n);\n\n-- Enable RLS\nALTER TABLE public.stakeholders ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for stakeholders\nCREATE POLICY \\"Users can view stakeholders in their projects\\" \nON public.stakeholders \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = stakeholders.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create stakeholders in their projects\\" \nON public.stakeholders \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = stakeholders.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update stakeholders in their projects\\" \nON public.stakeholders \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = stakeholders.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete stakeholders in their projects\\" \nON public.stakeholders \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = stakeholders.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Add trigger for updated_at\nCREATE TRIGGER update_stakeholders_updated_at\nBEFORE UPDATE ON public.stakeholders\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\n-- Update tasks table to reference stakeholders for task assignment\n-- First, make owner_id nullable if it isn't already\nALTER TABLE public.tasks ALTER COLUMN owner_id DROP NOT NULL;\n\n-- Add a reference to stakeholders table\n-- Note: We don't add a foreign key constraint because owner_id might reference \n-- either stakeholders.id or auth users directly for flexibility"}		ms86100@gmail.com	\N
20250827122128	{"-- First, clear any invalid owner_id values in tasks\nUPDATE tasks SET owner_id = NULL \nWHERE owner_id IS NOT NULL \nAND owner_id NOT IN (SELECT id FROM stakeholders);\n\n-- Drop the incorrect foreign key constraint\nALTER TABLE tasks DROP CONSTRAINT tasks_owner_id_fkey;\n\n-- Add the correct foreign key constraint to reference stakeholders\nALTER TABLE tasks ADD CONSTRAINT tasks_owner_id_fkey \nFOREIGN KEY (owner_id) REFERENCES stakeholders(id) ON DELETE SET NULL;"}		ms86100@gmail.com	\N
20250827032254	{"-- Create table for task status history\nCREATE TABLE public.task_status_history (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  task_id UUID NOT NULL,\n  old_status TEXT,\n  new_status TEXT NOT NULL,\n  changed_by UUID NOT NULL,\n  changed_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  notes TEXT,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable Row Level Security\nALTER TABLE public.task_status_history ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for task status history\nCREATE POLICY \\"Users can view task status history in their projects\\" \nON public.task_status_history \nFOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM public.tasks t\n    JOIN public.projects p ON t.project_id = p.id\n    WHERE t.id = task_status_history.task_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create status history for tasks in their projects\\" \nON public.task_status_history \nFOR INSERT \nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM public.tasks t\n    JOIN public.projects p ON t.project_id = p.id\n    WHERE t.id = task_status_history.task_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n  AND changed_by = auth.uid()\n);\n\n-- Create indexes for better performance\nCREATE INDEX idx_task_status_history_task_id ON public.task_status_history(task_id);\nCREATE INDEX idx_task_status_history_changed_at ON public.task_status_history(changed_at);\n\n-- Create function to automatically log status changes\nCREATE OR REPLACE FUNCTION public.log_task_status_change()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Only log if status actually changed\n  IF OLD.status IS DISTINCT FROM NEW.status THEN\n    INSERT INTO public.task_status_history (\n      task_id,\n      old_status,\n      new_status,\n      changed_by\n    ) VALUES (\n      NEW.id,\n      OLD.status,\n      NEW.status,\n      auth.uid()\n    );\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Create trigger to automatically log status changes\nCREATE TRIGGER task_status_change_trigger\n  AFTER UPDATE ON public.tasks\n  FOR EACH ROW\n  EXECUTE FUNCTION public.log_task_status_change();"}		ms86100@gmail.com	\N
20250827032735	{"-- Fix the trigger to handle system updates gracefully\nDROP TRIGGER IF EXISTS task_status_change_trigger ON public.tasks;\n\n-- Update the function to handle null auth context\nCREATE OR REPLACE FUNCTION public.log_task_status_change()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Only log if the status actually changed and we have a valid auth context\n  IF OLD.status IS DISTINCT FROM NEW.status AND auth.uid() IS NOT NULL THEN\n    INSERT INTO public.task_status_history (\n      task_id,\n      old_status,\n      new_status,\n      changed_by\n    ) VALUES (\n      NEW.id,\n      OLD.status,\n      NEW.status,\n      auth.uid()\n    );\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Recreate the trigger\nCREATE TRIGGER task_status_change_trigger\n  AFTER UPDATE ON public.tasks\n  FOR EACH ROW\n  EXECUTE FUNCTION public.log_task_status_change();\n\n-- Now clean up corrupted task statuses\nUPDATE public.tasks \nSET status = 'todo'\nWHERE status ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$';\n\n-- Ensure all tasks have valid statuses\nUPDATE public.tasks \nSET status = 'todo'\nWHERE status NOT IN ('todo', 'in_progress', 'in_review', 'blocked', 'completed');"}		ms86100@gmail.com	\N
20250827033422	{"-- Clean up corrupted status history entries\nDELETE FROM public.task_status_history \nWHERE old_status ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'\n   OR new_status ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$';\n\n-- Also clean up any invalid statuses that are not in our valid list\nDELETE FROM public.task_status_history \nWHERE new_status NOT IN ('todo', 'in_progress', 'in_review', 'blocked', 'completed')\n   OR (old_status IS NOT NULL AND old_status NOT IN ('todo', 'in_progress', 'in_review', 'blocked', 'completed'));"}		ms86100@gmail.com	\N
20250830032001	{"-- Create risk register table for project risks\nCREATE TABLE IF NOT EXISTS public.risk_register (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  project_id uuid NOT NULL,\n  created_by uuid NOT NULL,\n  department_id uuid,\n\n  -- Business fields\n  risk_code text NOT NULL,\n  title text NOT NULL,\n  description text,\n  category text,\n  cause text,\n  consequence text,\n\n  likelihood integer CHECK (likelihood BETWEEN 1 AND 5),\n  impact integer CHECK (impact BETWEEN 1 AND 5),\n  risk_score integer GENERATED ALWAYS AS (likelihood * impact) STORED,\n\n  owner text,\n  response_strategy text,\n  mitigation_plan text[],\n  contingency_plan text,\n\n  status text DEFAULT 'open',\n  identified_date date,\n  last_updated date,\n  next_review_date date,\n\n  residual_likelihood integer CHECK (residual_likelihood BETWEEN 1 AND 5),\n  residual_impact integer CHECK (residual_impact BETWEEN 1 AND 5),\n  residual_risk_score integer GENERATED ALWAYS AS (residual_likelihood * residual_impact) STORED,\n\n  notes text,\n\n  created_at timestamptz NOT NULL DEFAULT now(),\n  updated_at timestamptz NOT NULL DEFAULT now(),\n\n  CONSTRAINT uq_risk_code_per_project UNIQUE (project_id, risk_code)\n);\n\n-- Helpful indexes\nCREATE INDEX IF NOT EXISTS idx_risk_register_project ON public.risk_register(project_id);\nCREATE INDEX IF NOT EXISTS idx_risk_register_status ON public.risk_register(status);\nCREATE INDEX IF NOT EXISTS idx_risk_register_department ON public.risk_register(department_id);\n\n-- Enable Row Level Security\nALTER TABLE public.risk_register ENABLE ROW LEVEL SECURITY;\n\n-- Policies similar to tasks/stakeholders\nCREATE POLICY \\"Users can create risks in their projects\\"\nON public.risk_register\nFOR INSERT\nWITH CHECK (\n  (\n    EXISTS (\n      SELECT 1 FROM projects p\n      WHERE p.id = risk_register.project_id\n        AND (\n          p.created_by = auth.uid()\n          OR has_role(auth.uid(), 'admin'::app_role)\n          OR EXISTS (\n            SELECT 1 FROM project_members pm\n            WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n          )\n        )\n    )\n  )\n  AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can view risks in their projects\\"\nON public.risk_register\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = risk_register.project_id\n      AND (\n        p.created_by = auth.uid()\n        OR has_role(auth.uid(), 'admin'::app_role)\n        OR EXISTS (\n          SELECT 1 FROM project_members pm\n          WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n        )\n      )\n  )\n);\n\nCREATE POLICY \\"Users can update risks in their projects\\"\nON public.risk_register\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = risk_register.project_id\n      AND (\n        p.created_by = auth.uid()\n        OR has_role(auth.uid(), 'admin'::app_role)\n        OR EXISTS (\n          SELECT 1 FROM project_members pm\n          WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n        )\n      )\n  )\n);\n\nCREATE POLICY \\"Users can delete risks in their projects\\"\nON public.risk_register\nFOR DELETE\nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = risk_register.project_id\n      AND (\n        p.created_by = auth.uid()\n        OR has_role(auth.uid(), 'admin'::app_role)\n        OR EXISTS (\n          SELECT 1 FROM project_members pm\n          WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n        )\n      )\n  )\n);\n\n-- Trigger to auto-fill department_id from user profile on insert\nCREATE OR REPLACE FUNCTION public.trg_risk_register_set_department()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$$;\n\nCREATE TRIGGER set_risk_register_department\nBEFORE INSERT ON public.risk_register\nFOR EACH ROW EXECUTE FUNCTION public.trg_risk_register_set_department();\n\n-- Trigger to maintain updated_at\nCREATE TRIGGER update_risk_register_updated_at\nBEFORE UPDATE ON public.risk_register\nFOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250905081944	{"-- Update retrospectives table to make iteration_id a text field instead of UUID\n-- This allows users to enter any iteration name instead of being restricted to capacity iterations\n\n-- First, drop the existing foreign key constraint if it exists\nALTER TABLE retrospectives DROP CONSTRAINT IF EXISTS retrospectives_iteration_id_fkey;\n\n-- Change the iteration_id column to TEXT type\nALTER TABLE retrospectives ALTER COLUMN iteration_id TYPE TEXT;\n\n-- Make iteration_id nullable since some retrospectives might not have an iteration specified\nALTER TABLE retrospectives ALTER COLUMN iteration_id DROP NOT NULL;"}		ms86100@gmail.com	\N
20250830042424	{"-- Create project_discussions table\nCREATE TABLE public.project_discussions (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  meeting_title TEXT NOT NULL,\n  meeting_date DATE NOT NULL,\n  summary_notes TEXT,\n  attendees JSONB DEFAULT '[]'::jsonb,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create discussion_action_items table\nCREATE TABLE public.discussion_action_items (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  discussion_id UUID NOT NULL,\n  task_description TEXT NOT NULL,\n  owner_id UUID,\n  target_date DATE,\n  status TEXT NOT NULL DEFAULT 'open',\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create discussion_change_log table\nCREATE TABLE public.discussion_change_log (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  discussion_id UUID,\n  action_item_id UUID,\n  change_type TEXT NOT NULL,\n  field_name TEXT,\n  old_value TEXT,\n  new_value TEXT,\n  changed_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable Row Level Security\nALTER TABLE public.project_discussions ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.discussion_action_items ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.discussion_change_log ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for project_discussions\nCREATE POLICY \\"Users can view discussions in their projects\\" \nON public.project_discussions \nFOR SELECT \nUSING (EXISTS ( SELECT 1\n   FROM projects p\n  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\nCREATE POLICY \\"Users can create discussions in their projects\\" \nON public.project_discussions \nFOR INSERT \nWITH CHECK (EXISTS ( SELECT 1\n   FROM projects p\n  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))) AND (created_by = auth.uid()));\n\nCREATE POLICY \\"Users can update discussions in their projects\\" \nON public.project_discussions \nFOR UPDATE \nUSING (EXISTS ( SELECT 1\n   FROM projects p\n  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\nCREATE POLICY \\"Users can delete discussions in their projects\\" \nON public.project_discussions \nFOR DELETE \nUSING (EXISTS ( SELECT 1\n   FROM projects p\n  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\n-- Create policies for discussion_action_items\nCREATE POLICY \\"Users can view action items in their project discussions\\" \nON public.discussion_action_items \nFOR SELECT \nUSING (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\nCREATE POLICY \\"Users can create action items in their project discussions\\" \nON public.discussion_action_items \nFOR INSERT \nWITH CHECK (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))) AND (created_by = auth.uid()));\n\nCREATE POLICY \\"Users can update action items in their project discussions\\" \nON public.discussion_action_items \nFOR UPDATE \nUSING (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\nCREATE POLICY \\"Users can delete action items in their project discussions\\" \nON public.discussion_action_items \nFOR DELETE \nUSING (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\n-- Create policies for discussion_change_log\nCREATE POLICY \\"Users can view change log in their project discussions\\" \nON public.discussion_change_log \nFOR SELECT \nUSING (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_change_log.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))));\n\nCREATE POLICY \\"Users can create change log entries in their project discussions\\" \nON public.discussion_change_log \nFOR INSERT \nWITH CHECK (EXISTS ( SELECT 1\n   FROM project_discussions pd\n   JOIN projects p ON p.id = pd.project_id\n  WHERE ((pd.id = discussion_change_log.discussion_id) AND ((p.created_by = auth.uid()) OR has_role(auth.uid(), 'admin'::app_role) OR (EXISTS ( SELECT 1\n           FROM project_members pm\n          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))) AND (changed_by = auth.uid()));\n\n-- Add foreign key references\nALTER TABLE public.discussion_action_items \nADD CONSTRAINT discussion_action_items_discussion_id_fkey \nFOREIGN KEY (discussion_id) REFERENCES public.project_discussions(id) ON DELETE CASCADE;\n\n-- Add triggers for updated_at columns\nCREATE TRIGGER update_project_discussions_updated_at\nBEFORE UPDATE ON public.project_discussions\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_discussion_action_items_updated_at\nBEFORE UPDATE ON public.discussion_action_items\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create trigger function for change logging\nCREATE OR REPLACE FUNCTION public.log_discussion_changes()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  -- Log discussion changes\n  IF TG_TABLE_NAME = 'project_discussions' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.id, 'created', 'discussion', 'Discussion created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.meeting_title IS DISTINCT FROM NEW.meeting_title THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'meeting_title', OLD.meeting_title, NEW.meeting_title, auth.uid()\n        );\n      END IF;\n      IF OLD.summary_notes IS DISTINCT FROM NEW.summary_notes THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'summary_notes', OLD.summary_notes, NEW.summary_notes, auth.uid()\n        );\n      END IF;\n    END IF;\n  -- Log action item changes\n  ELSIF TG_TABLE_NAME = 'discussion_action_items' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.discussion_id, NEW.id, 'created', 'action_item', 'Action item created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.status IS DISTINCT FROM NEW.status THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, action_item_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.discussion_id, NEW.id, 'updated', 'status', OLD.status, NEW.status, auth.uid()\n        );\n      END IF;\n    ELSIF TG_OP = 'DELETE' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, old_value, changed_by\n      ) VALUES (\n        OLD.discussion_id, OLD.id, 'deleted', 'action_item', 'Action item deleted', auth.uid()\n      );\n    END IF;\n  END IF;\n  \n  IF TG_OP = 'DELETE' THEN\n    RETURN OLD;\n  ELSE\n    RETURN NEW;\n  END IF;\nEND;\n$$;\n\n-- Create triggers for change logging\nCREATE TRIGGER log_discussion_changes_trigger\nAFTER INSERT OR UPDATE ON public.project_discussions\nFOR EACH ROW\nEXECUTE FUNCTION public.log_discussion_changes();\n\nCREATE TRIGGER log_action_item_changes_trigger\nAFTER INSERT OR UPDATE OR DELETE ON public.discussion_action_items\nFOR EACH ROW\nEXECUTE FUNCTION public.log_discussion_changes();"}		ms86100@gmail.com	\N
20250830043812	{"-- Create task_backlog table to store action items converted to tasks\nCREATE TABLE public.task_backlog (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  title TEXT NOT NULL,\n  description TEXT,\n  project_id UUID NOT NULL,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  priority TEXT DEFAULT 'medium'::text,\n  status TEXT NOT NULL DEFAULT 'backlog'::text,\n  owner_id UUID,\n  target_date DATE,\n  source_type TEXT DEFAULT 'manual'::text, -- 'manual' or 'action_item'\n  source_id UUID, -- reference to discussion_action_items.id if converted from action item\n  department_id UUID\n);\n\n-- Enable Row Level Security\nALTER TABLE public.task_backlog ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for task backlog\nCREATE POLICY \\"Users can view backlog items in their projects\\" \nON public.task_backlog \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = task_backlog.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create backlog items in their projects\\" \nON public.task_backlog \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = task_backlog.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update backlog items in their projects\\" \nON public.task_backlog \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = task_backlog.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete backlog items in their projects\\" \nON public.task_backlog \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = task_backlog.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Create trigger for updating updated_at timestamp\nCREATE TRIGGER update_task_backlog_updated_at\nBEFORE UPDATE ON public.task_backlog\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create trigger to set department_id automatically\nCREATE OR REPLACE FUNCTION public.trg_task_backlog_set_department()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\nCREATE TRIGGER trg_task_backlog_set_department\nBEFORE INSERT ON public.task_backlog\nFOR EACH ROW\nEXECUTE FUNCTION public.trg_task_backlog_set_department();"}		ms86100@gmail.com	\N
20250830045826	{"-- Create team capacity settings table\nCREATE TABLE public.team_capacity_settings (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  iteration_basis TEXT NOT NULL DEFAULT 'days',\n  work_week INTEGER NOT NULL DEFAULT 5,\n  office_weight NUMERIC NOT NULL DEFAULT 1.0,\n  wfh_weight NUMERIC NOT NULL DEFAULT 0.9,\n  hybrid_weight NUMERIC NOT NULL DEFAULT 0.95,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create team capacity iterations table\nCREATE TABLE public.team_capacity_iterations (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  iteration_name TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  working_days INTEGER NOT NULL,\n  committed_story_points INTEGER NOT NULL DEFAULT 0,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  department_id UUID\n);\n\n-- Create team capacity members table\nCREATE TABLE public.team_capacity_members (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_id UUID NOT NULL,\n  member_name TEXT NOT NULL,\n  role TEXT NOT NULL,\n  work_mode TEXT NOT NULL CHECK (work_mode IN ('office', 'wfh', 'hybrid')),\n  leaves INTEGER NOT NULL DEFAULT 0,\n  availability_percent INTEGER NOT NULL DEFAULT 100 CHECK (availability_percent >= 0 AND availability_percent <= 100),\n  effective_capacity_days NUMERIC NOT NULL DEFAULT 0,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  department_id UUID\n);\n\n-- Enable Row Level Security\nALTER TABLE public.team_capacity_settings ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.team_capacity_iterations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.team_capacity_members ENABLE ROW LEVEL SECURITY;\n\n-- Create RLS policies for team_capacity_settings\nCREATE POLICY \\"Users can view capacity settings in their projects\\" \nON public.team_capacity_settings \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_settings.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create capacity settings in their projects\\" \nON public.team_capacity_settings \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_settings.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update capacity settings in their projects\\" \nON public.team_capacity_settings \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_settings.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete capacity settings in their projects\\" \nON public.team_capacity_settings \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_settings.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Create RLS policies for team_capacity_iterations\nCREATE POLICY \\"Users can view capacity iterations in their projects\\" \nON public.team_capacity_iterations \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_iterations.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create capacity iterations in their projects\\" \nON public.team_capacity_iterations \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_iterations.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update capacity iterations in their projects\\" \nON public.team_capacity_iterations \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_iterations.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete capacity iterations in their projects\\" \nON public.team_capacity_iterations \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM projects p \n  WHERE p.id = team_capacity_iterations.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Create RLS policies for team_capacity_members\nCREATE POLICY \\"Users can view capacity members in their projects\\" \nON public.team_capacity_members \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM team_capacity_iterations tci \n  JOIN projects p ON p.id = tci.project_id \n  WHERE tci.id = team_capacity_members.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create capacity members in their projects\\" \nON public.team_capacity_members \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM team_capacity_iterations tci \n  JOIN projects p ON p.id = tci.project_id \n  WHERE tci.id = team_capacity_members.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update capacity members in their projects\\" \nON public.team_capacity_members \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM team_capacity_iterations tci \n  JOIN projects p ON p.id = tci.project_id \n  WHERE tci.id = team_capacity_members.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete capacity members in their projects\\" \nON public.team_capacity_members \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM team_capacity_iterations tci \n  JOIN projects p ON p.id = tci.project_id \n  WHERE tci.id = team_capacity_members.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1 FROM project_members pm \n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Create triggers for department assignment\nCREATE TRIGGER trg_team_capacity_settings_set_department\n  BEFORE INSERT ON public.team_capacity_settings\n  FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();\n\nCREATE TRIGGER trg_team_capacity_iterations_set_department\n  BEFORE INSERT ON public.team_capacity_iterations\n  FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();\n\nCREATE TRIGGER trg_team_capacity_members_set_department\n  BEFORE INSERT ON public.team_capacity_members\n  FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();\n\n-- Create triggers for updated_at\nCREATE TRIGGER update_team_capacity_settings_updated_at\n  BEFORE UPDATE ON public.team_capacity_settings\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_team_capacity_iterations_updated_at\n  BEFORE UPDATE ON public.team_capacity_iterations\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_team_capacity_members_updated_at\n  BEFORE UPDATE ON public.team_capacity_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create a function to calculate effective capacity\nCREATE OR REPLACE FUNCTION public.calculate_effective_capacity(\n  working_days INTEGER,\n  leaves INTEGER,\n  availability_percent INTEGER,\n  work_mode TEXT,\n  office_weight NUMERIC DEFAULT 1.0,\n  wfh_weight NUMERIC DEFAULT 0.9,\n  hybrid_weight NUMERIC DEFAULT 0.95\n) RETURNS NUMERIC\nLANGUAGE plpgsql\nIMMUTABLE\nAS $$\nDECLARE\n  mode_weight NUMERIC;\nBEGIN\n  -- Get the weight based on work mode\n  CASE work_mode\n    WHEN 'office' THEN mode_weight := office_weight;\n    WHEN 'wfh' THEN mode_weight := wfh_weight;\n    WHEN 'hybrid' THEN mode_weight := hybrid_weight;\n    ELSE mode_weight := 1.0;\n  END CASE;\n  \n  -- Calculate effective capacity: (working_days - leaves) * (availability_percent/100) * mode_weight\n  RETURN (working_days - leaves) * (availability_percent::NUMERIC / 100.0) * mode_weight;\nEND;\n$$;"}		ms86100@gmail.com	\N
20250830050857	{"-- Add stakeholder_id to team_capacity_members to link to project stakeholders\nALTER TABLE public.team_capacity_members\nADD COLUMN IF NOT EXISTS stakeholder_id uuid REFERENCES public.stakeholders(id) ON DELETE SET NULL;\n\n-- Index for faster lookups\nCREATE INDEX IF NOT EXISTS idx_team_capacity_members_stakeholder_id\n  ON public.team_capacity_members(stakeholder_id);\n"}		ms86100@gmail.com	\N
20250830051250	{"-- Fix function search paths by adding SECURITY DEFINER SET search_path = 'public'\n-- for functions that need it\n\n-- Fix trg_risk_register_set_department function\nCREATE OR REPLACE FUNCTION public.trg_risk_register_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix trg_task_backlog_set_department function  \nCREATE OR REPLACE FUNCTION public.trg_task_backlog_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix trg_projects_set_department function\nCREATE OR REPLACE FUNCTION public.trg_projects_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix trg_milestones_set_department function\nCREATE OR REPLACE FUNCTION public.trg_milestones_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix trg_tasks_set_department function\nCREATE OR REPLACE FUNCTION public.trg_tasks_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix trg_project_members_set_department function\nCREATE OR REPLACE FUNCTION public.trg_project_members_set_department()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.user_id);\n  END IF;\n  RETURN NEW;\nEND;\n$function$;"}		ms86100@gmail.com	\N
20250830051511	{"-- Fix the remaining functions that need search_path\n\n-- Fix log_discussion_changes function\nCREATE OR REPLACE FUNCTION public.log_discussion_changes()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  -- Log discussion changes\n  IF TG_TABLE_NAME = 'project_discussions' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.id, 'created', 'discussion', 'Discussion created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.meeting_title IS DISTINCT FROM NEW.meeting_title THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'meeting_title', OLD.meeting_title, NEW.meeting_title, auth.uid()\n        );\n      END IF;\n      IF OLD.summary_notes IS DISTINCT FROM NEW.summary_notes THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'summary_notes', OLD.summary_notes, NEW.summary_notes, auth.uid()\n        );\n      END IF;\n    END IF;\n  -- Log action item changes\n  ELSIF TG_TABLE_NAME = 'discussion_action_items' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.discussion_id, NEW.id, 'created', 'action_item', 'Action item created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.status IS DISTINCT FROM NEW.status THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, action_item_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.discussion_id, NEW.id, 'updated', 'status', OLD.status, NEW.status, auth.uid()\n        );\n      END IF;\n    ELSIF TG_OP = 'DELETE' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, old_value, changed_by\n      ) VALUES (\n        OLD.discussion_id, OLD.id, 'deleted', 'action_item', 'Action item deleted', auth.uid()\n      );\n    END IF;\n  END IF;\n  \n  IF TG_OP = 'DELETE' THEN\n    RETURN OLD;\n  ELSE\n    RETURN NEW;\n  END IF;\nEND;\n$function$;\n\n-- Fix log_task_status_change function\nCREATE OR REPLACE FUNCTION public.log_task_status_change()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n  -- Only log if the status actually changed and we have a valid auth context\n  IF OLD.status IS DISTINCT FROM NEW.status AND auth.uid() IS NOT NULL THEN\n    INSERT INTO public.task_status_history (\n      task_id,\n      old_status,\n      new_status,\n      changed_by\n    ) VALUES (\n      NEW.id,\n      OLD.status,\n      NEW.status,\n      auth.uid()\n    );\n  END IF;\n  \n  RETURN NEW;\nEND;\n$function$;\n\n-- Fix handle_new_user function\nCREATE OR REPLACE FUNCTION public.handle_new_user()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n    -- Insert into profiles\n    INSERT INTO public.profiles (id, email, full_name)\n    VALUES (\n        NEW.id, \n        NEW.email,\n        COALESCE(NEW.raw_user_meta_data ->> 'full_name', NEW.email)\n    );\n    \n    -- Assign Project Coordinator role by default (unless it's the admin email)\n    IF NEW.email = 'admin@admin.com' THEN\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'admin');\n    ELSE\n        INSERT INTO public.user_roles (user_id, role)\n        VALUES (NEW.id, 'project_coordinator');\n    END IF;\n    \n    RETURN NEW;\nEND;\n$function$;"}		ms86100@gmail.com	\N
20250830051540	{"-- Fix the last function missing search_path - update_updated_at_column \nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$function$;"}		ms86100@gmail.com	\N
20250830051609	{"-- Fix calculate_effective_capacity function search path\nCREATE OR REPLACE FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric DEFAULT 1.0, wfh_weight numeric DEFAULT 0.9, hybrid_weight numeric DEFAULT 0.95)\n RETURNS numeric\n LANGUAGE plpgsql\n IMMUTABLE\n SECURITY DEFINER\n SET search_path = 'public'\nAS $function$\nDECLARE\n  mode_weight NUMERIC;\nBEGIN\n  -- Get the weight based on work mode\n  CASE work_mode\n    WHEN 'office' THEN mode_weight := office_weight;\n    WHEN 'wfh' THEN mode_weight := wfh_weight;\n    WHEN 'hybrid' THEN mode_weight := hybrid_weight;\n    ELSE mode_weight := 1.0;\n  END CASE;\n  \n  -- Calculate effective capacity: (working_days - leaves) * (availability_percent/100) * mode_weight\n  RETURN (working_days - leaves) * (availability_percent::NUMERIC / 100.0) * mode_weight;\nEND;\n$function$;"}		ms86100@gmail.com	\N
20250830054404	{"-- Create teams table for named team groups\nCREATE TABLE public.teams (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  team_name TEXT NOT NULL,\n  description TEXT,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on teams table\nALTER TABLE public.teams ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for teams\nCREATE POLICY \\"Users can view teams in their projects\\" \nON public.teams \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1\n  FROM projects p\n  WHERE p.id = teams.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create teams in their projects\\" \nON public.teams \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1\n  FROM projects p\n  WHERE p.id = teams.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update teams in their projects\\" \nON public.teams \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1\n  FROM projects p\n  WHERE p.id = teams.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete teams in their projects\\" \nON public.teams \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1\n  FROM projects p\n  WHERE p.id = teams.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Create team definitions table for default member settings\nCREATE TABLE public.team_definitions (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  team_id UUID NOT NULL,\n  stakeholder_id UUID NOT NULL,\n  default_availability_percent INTEGER NOT NULL DEFAULT 100,\n  default_leaves INTEGER NOT NULL DEFAULT 0,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(team_id, stakeholder_id)\n);\n\n-- Enable RLS on team_definitions table\nALTER TABLE public.team_definitions ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for team_definitions\nCREATE POLICY \\"Users can view team definitions in their projects\\" \nON public.team_definitions \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1\n  FROM teams t\n  JOIN projects p ON p.id = t.project_id\n  WHERE t.id = team_definitions.team_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can create team definitions in their projects\\" \nON public.team_definitions \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1\n  FROM teams t\n  JOIN projects p ON p.id = t.project_id\n  WHERE t.id = team_definitions.team_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update team definitions in their projects\\" \nON public.team_definitions \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1\n  FROM teams t\n  JOIN projects p ON p.id = t.project_id\n  WHERE t.id = team_definitions.team_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\nCREATE POLICY \\"Users can delete team definitions in their projects\\" \nON public.team_definitions \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1\n  FROM teams t\n  JOIN projects p ON p.id = t.project_id\n  WHERE t.id = team_definitions.team_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR EXISTS (\n    SELECT 1\n    FROM project_members pm\n    WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n  ))\n));\n\n-- Add team_id to team_capacity_members to track which team was used\nALTER TABLE public.team_capacity_members ADD COLUMN team_id UUID;\n\n-- Create trigger for updated_at on teams\nCREATE TRIGGER update_teams_updated_at\n  BEFORE UPDATE ON public.teams\n  FOR EACH ROW\n  EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create trigger for updated_at on team_definitions\nCREATE TRIGGER update_team_definitions_updated_at\n  BEFORE UPDATE ON public.team_definitions\n  FOR EACH ROW\n  EXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250830061833	{"-- Create retrospectives table\nCREATE TABLE public.retrospectives (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_id UUID NOT NULL,\n  framework TEXT NOT NULL DEFAULT 'Classic',\n  project_id UUID NOT NULL,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  department_id UUID,\n  status TEXT NOT NULL DEFAULT 'active'\n);\n\n-- Create retrospective columns table\nCREATE TABLE public.retrospective_columns (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  retrospective_id UUID NOT NULL,\n  title TEXT NOT NULL,\n  subtitle TEXT,\n  column_order INTEGER NOT NULL DEFAULT 0,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create retrospective cards table\nCREATE TABLE public.retrospective_cards (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  column_id UUID NOT NULL,\n  text TEXT NOT NULL,\n  votes INTEGER NOT NULL DEFAULT 0,\n  card_order INTEGER NOT NULL DEFAULT 0,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create retrospective action items table\nCREATE TABLE public.retrospective_action_items (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  retrospective_id UUID NOT NULL,\n  from_card_id UUID,\n  what_task TEXT NOT NULL,\n  when_sprint TEXT,\n  who_responsible TEXT,\n  how_approach TEXT,\n  backlog_ref_id TEXT,\n  backlog_status TEXT DEFAULT 'Open',\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS\nALTER TABLE public.retrospectives ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.retrospective_columns ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.retrospective_cards ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.retrospective_action_items ENABLE ROW LEVEL SECURITY;\n\n-- RLS Policies for retrospectives\nCREATE POLICY \\"Users can create retrospectives in their projects\\" \nON public.retrospectives FOR INSERT \nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM projects p \n    WHERE p.id = retrospectives.project_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  ) AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can view retrospectives in their projects\\" \nON public.retrospectives FOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p \n    WHERE p.id = retrospectives.project_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\nCREATE POLICY \\"Users can update retrospectives in their projects\\" \nON public.retrospectives FOR UPDATE \nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p \n    WHERE p.id = retrospectives.project_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\nCREATE POLICY \\"Users can delete retrospectives in their projects\\" \nON public.retrospectives FOR DELETE \nUSING (\n  EXISTS (\n    SELECT 1 FROM projects p \n    WHERE p.id = retrospectives.project_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\n-- RLS Policies for retrospective_columns\nCREATE POLICY \\"Users can manage columns in their retrospectives\\" \nON public.retrospective_columns FOR ALL \nUSING (\n  EXISTS (\n    SELECT 1 FROM retrospectives r \n    JOIN projects p ON p.id = r.project_id \n    WHERE r.id = retrospective_columns.retrospective_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\n-- RLS Policies for retrospective_cards\nCREATE POLICY \\"Users can create cards in their retrospectives\\" \nON public.retrospective_cards FOR INSERT \nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM retrospective_columns rc \n    JOIN retrospectives r ON r.id = rc.retrospective_id \n    JOIN projects p ON p.id = r.project_id \n    WHERE rc.id = retrospective_cards.column_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  ) AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can view cards in their retrospectives\\" \nON public.retrospective_cards FOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM retrospective_columns rc \n    JOIN retrospectives r ON r.id = rc.retrospective_id \n    JOIN projects p ON p.id = r.project_id \n    WHERE rc.id = retrospective_cards.column_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\nCREATE POLICY \\"Users can update cards in their retrospectives\\" \nON public.retrospective_cards FOR UPDATE \nUSING (\n  EXISTS (\n    SELECT 1 FROM retrospective_columns rc \n    JOIN retrospectives r ON r.id = rc.retrospective_id \n    JOIN projects p ON p.id = r.project_id \n    WHERE rc.id = retrospective_cards.column_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\nCREATE POLICY \\"Users can delete their own cards\\" \nON public.retrospective_cards FOR DELETE \nUSING (\n  created_by = auth.uid() OR EXISTS (\n    SELECT 1 FROM retrospective_columns rc \n    JOIN retrospectives r ON r.id = rc.retrospective_id \n    JOIN projects p ON p.id = r.project_id \n    WHERE rc.id = retrospective_cards.column_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role))\n  )\n);\n\n-- RLS Policies for retrospective_action_items\nCREATE POLICY \\"Users can manage action items in their retrospectives\\" \nON public.retrospective_action_items FOR ALL \nUSING (\n  EXISTS (\n    SELECT 1 FROM retrospectives r \n    JOIN projects p ON p.id = r.project_id \n    WHERE r.id = retrospective_action_items.retrospective_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n) WITH CHECK (\n  EXISTS (\n    SELECT 1 FROM retrospectives r \n    JOIN projects p ON p.id = r.project_id \n    WHERE r.id = retrospective_action_items.retrospective_id \n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  ) AND created_by = auth.uid()\n);\n\n-- Add triggers for department_id\nCREATE OR REPLACE FUNCTION public.trg_retrospectives_set_department()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.department_id IS NULL THEN\n    NEW.department_id := public.get_user_department(NEW.created_by);\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER SET search_path = public;\n\nCREATE TRIGGER retrospectives_set_department_trigger\n  BEFORE INSERT ON public.retrospectives\n  FOR EACH ROW EXECUTE FUNCTION public.trg_retrospectives_set_department();\n\n-- Add update triggers\nCREATE TRIGGER update_retrospectives_updated_at\n  BEFORE UPDATE ON public.retrospectives\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_retrospective_columns_updated_at\n  BEFORE UPDATE ON public.retrospective_columns\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_retrospective_cards_updated_at\n  BEFORE UPDATE ON public.retrospective_cards\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_retrospective_action_items_updated_at\n  BEFORE UPDATE ON public.retrospective_action_items\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250830063547	{"-- Fix RLS policies for retrospective cards to allow all project members to vote and move cards\n\n-- Drop existing policies that are too restrictive\nDROP POLICY IF EXISTS \\"Users can update cards in their retrospectives\\" ON retrospective_cards;\n\n-- Create new update policy that allows project members to update any card in their project retrospectives\nCREATE POLICY \\"Project members can update cards in retrospectives\\"\nON retrospective_cards \nFOR UPDATE \nUSING (\n  EXISTS (\n    SELECT 1\n    FROM retrospective_columns rc\n    JOIN retrospectives r ON r.id = rc.retrospective_id\n    JOIN projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 \n        FROM project_members pm \n        WHERE pm.project_id = p.id \n        AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);"}		ms86100@gmail.com	\N
20250830064408	{"-- Replace update policies for retrospective_cards with proper WITH CHECK\nDROP POLICY IF EXISTS \\"Project members can update cards in retrospectives\\" ON retrospective_cards;\nDROP POLICY IF EXISTS \\"Users can update cards in their retrospectives\\" ON retrospective_cards;\n\nCREATE POLICY \\"Members can update votes and move cards\\"\nON retrospective_cards\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1\n    FROM retrospective_columns rc\n    JOIN retrospectives r ON r.id = rc.retrospective_id\n    JOIN projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n      AND (\n        p.created_by = auth.uid()\n        OR has_role(auth.uid(), 'admin'::app_role)\n        OR EXISTS (\n          SELECT 1 FROM project_members pm\n          WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n        )\n      )\n  )\n)\nWITH CHECK (\n  EXISTS (\n    SELECT 1\n    FROM retrospective_columns rc\n    JOIN retrospectives r ON r.id = rc.retrospective_id\n    JOIN projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n      AND (\n        p.created_by = auth.uid()\n        OR has_role(auth.uid(), 'admin'::app_role)\n        OR EXISTS (\n          SELECT 1 FROM project_members pm\n          WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n        )\n      )\n  )\n);"}		ms86100@gmail.com	\N
20250830070618	{"-- Add table to track individual votes on retrospective cards\nCREATE TABLE public.retrospective_card_votes (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  card_id UUID NOT NULL REFERENCES public.retrospective_cards(id) ON DELETE CASCADE,\n  user_id UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS\nALTER TABLE public.retrospective_card_votes ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for card votes\nCREATE POLICY \\"Users can view votes in their retrospectives\\" \nON public.retrospective_card_votes \nFOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM retrospective_cards rc\n    JOIN retrospective_columns rcol ON rcol.id = rc.column_id\n    JOIN retrospectives r ON r.id = rcol.retrospective_id\n    JOIN projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_card_votes.card_id\n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\nCREATE POLICY \\"Users can vote in their retrospectives\\" \nON public.retrospective_card_votes \nFOR INSERT \nWITH CHECK (\n  user_id = auth.uid() AND\n  EXISTS (\n    SELECT 1 FROM retrospective_cards rc\n    JOIN retrospective_columns rcol ON rcol.id = rc.column_id\n    JOIN retrospectives r ON r.id = rcol.retrospective_id\n    JOIN projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_card_votes.card_id\n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n         EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n  )\n);\n\n-- Add unique constraint to prevent duplicate votes\nCREATE UNIQUE INDEX idx_retrospective_card_votes_unique ON public.retrospective_card_votes(card_id, user_id);\n\n-- Update retrospective_action_items to track conversion to tasks\nALTER TABLE public.retrospective_action_items \nADD COLUMN converted_to_task BOOLEAN DEFAULT FALSE,\nADD COLUMN task_id UUID REFERENCES public.task_backlog(id) ON DELETE SET NULL;"}		ms86100@gmail.com	\N
20250830081559	{"-- Create module permissions enum\nCREATE TYPE public.module_name AS ENUM (\n  'overview',\n  'tasks_milestones', \n  'roadmap',\n  'kanban',\n  'stakeholders',\n  'risk_register',\n  'discussions',\n  'task_backlog',\n  'team_capacity',\n  'retrospectives'\n);\n\n-- Create access level enum\nCREATE TYPE public.access_level AS ENUM ('read', 'write');\n\n-- Create module permissions table\nCREATE TABLE public.module_permissions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  project_id UUID NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,\n  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  module module_name NOT NULL,\n  access_level access_level NOT NULL DEFAULT 'read',\n  granted_by UUID NOT NULL REFERENCES auth.users(id),\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(project_id, user_id, module)\n);\n\n-- Enable RLS on module permissions\nALTER TABLE public.module_permissions ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for module permissions\nCREATE POLICY \\"Project owners and admins can manage module permissions\\"\nON public.module_permissions\nFOR ALL\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = module_permissions.project_id\n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role))\n  )\n);\n\nCREATE POLICY \\"Users can view their own module permissions\\"\nON public.module_permissions\nFOR SELECT\nUSING (user_id = auth.uid());\n\n-- Create audit log table for tracking changes\nCREATE TABLE public.audit_log (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  project_id UUID NOT NULL REFERENCES public.projects(id) ON DELETE CASCADE,\n  user_id UUID NOT NULL REFERENCES auth.users(id),\n  module module_name NOT NULL,\n  action TEXT NOT NULL,\n  entity_type TEXT NOT NULL,\n  entity_id UUID,\n  old_values JSONB,\n  new_values JSONB,\n  description TEXT,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on audit log\nALTER TABLE public.audit_log ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for audit log\nCREATE POLICY \\"Users can view audit log for their projects\\"\nON public.audit_log\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = audit_log.project_id\n    AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role)\n         OR EXISTS (\n           SELECT 1 FROM public.project_members pm\n           WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n         ))\n  )\n);\n\nCREATE POLICY \\"System can create audit log entries\\"\nON public.audit_log\nFOR INSERT\nWITH CHECK (true);\n\n-- Create function to check module permissions\nCREATE OR REPLACE FUNCTION public.has_module_permission(_user_id UUID, _project_id UUID, _module module_name, _required_access access_level)\nRETURNS BOOLEAN\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path = public\nAS $$\n  -- Project owner has full access\n  SELECT EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = _project_id AND p.created_by = _user_id\n  )\n  OR\n  -- Admin has full access\n  has_role(_user_id, 'admin'::app_role)\n  OR\n  -- Check specific module permission\n  EXISTS (\n    SELECT 1 FROM public.module_permissions mp\n    WHERE mp.project_id = _project_id \n    AND mp.user_id = _user_id \n    AND mp.module = _module\n    AND (mp.access_level = 'write' OR (_required_access = 'read' AND mp.access_level = 'read'))\n  );\n$$;\n\n-- Create trigger function for audit logging\nCREATE OR REPLACE FUNCTION public.log_audit_changes()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nDECLARE\n  _project_id UUID;\n  _module module_name;\n  _entity_type TEXT;\n  _action TEXT;\n  _description TEXT;\nBEGIN\n  -- Determine project_id and module based on table\n  CASE TG_TABLE_NAME\n    WHEN 'tasks' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'tasks_milestones';\n      _entity_type := 'task';\n    WHEN 'milestones' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'tasks_milestones';\n      _entity_type := 'milestone';\n    WHEN 'stakeholders' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'stakeholders';\n      _entity_type := 'stakeholder';\n    WHEN 'risk_register' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'risk_register';\n      _entity_type := 'risk';\n    WHEN 'project_discussions' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'discussions';\n      _entity_type := 'discussion';\n    WHEN 'task_backlog' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'task_backlog';\n      _entity_type := 'backlog_item';\n    WHEN 'retrospectives' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'retrospectives';\n      _entity_type := 'retrospective';\n    WHEN 'team_capacity_iterations' THEN\n      _project_id := COALESCE(NEW.project_id, OLD.project_id);\n      _module := 'team_capacity';\n      _entity_type := 'capacity_iteration';\n    ELSE\n      RETURN COALESCE(NEW, OLD);\n  END CASE;\n\n  -- Determine action\n  IF TG_OP = 'INSERT' THEN\n    _action := 'created';\n    _description := _entity_type || ' created';\n  ELSIF TG_OP = 'UPDATE' THEN\n    _action := 'updated';\n    _description := _entity_type || ' updated';\n  ELSIF TG_OP = 'DELETE' THEN\n    _action := 'deleted';\n    _description := _entity_type || ' deleted';\n  END IF;\n\n  -- Insert audit log entry\n  INSERT INTO public.audit_log (\n    project_id,\n    user_id,\n    module,\n    action,\n    entity_type,\n    entity_id,\n    old_values,\n    new_values,\n    description\n  ) VALUES (\n    _project_id,\n    auth.uid(),\n    _module,\n    _action,\n    _entity_type,\n    COALESCE(NEW.id, OLD.id),\n    CASE WHEN TG_OP != 'INSERT' THEN row_to_json(OLD) ELSE NULL END,\n    CASE WHEN TG_OP != 'DELETE' THEN row_to_json(NEW) ELSE NULL END,\n    _description\n  );\n\n  RETURN COALESCE(NEW, OLD);\nEND;\n$$;\n\n-- Create audit triggers for all relevant tables\nCREATE TRIGGER audit_tasks_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.tasks\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_milestones_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.milestones\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_stakeholders_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.stakeholders\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_risk_register_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.risk_register\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_discussions_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.project_discussions\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_backlog_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.task_backlog\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_retrospectives_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.retrospectives\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\nCREATE TRIGGER audit_capacity_changes\n  AFTER INSERT OR UPDATE OR DELETE ON public.team_capacity_iterations\n  FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();\n\n-- Add updated_at triggers for new tables\nCREATE TRIGGER update_module_permissions_updated_at\n  BEFORE UPDATE ON public.module_permissions\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250830083123	{"-- Clean up orphaned retrospective action items and add the foreign key constraint\nDELETE FROM retrospective_action_items \nWHERE retrospective_id NOT IN (SELECT id FROM retrospectives);\n\n-- Now add the foreign key constraint\nALTER TABLE retrospective_action_items \nADD CONSTRAINT fk_retrospective_action_items_retrospective_id \nFOREIGN KEY (retrospective_id) REFERENCES retrospectives(id) ON DELETE CASCADE;"}		ms86100@gmail.com	\N
20250830084052	{"-- Drop the overly permissive policy\nDROP POLICY IF EXISTS \\"Authenticated users can view projects\\" ON public.projects;\n\n-- Create a more restrictive policy that only allows users to see:\n-- 1. Projects they created\n-- 2. Projects they are members of\n-- 3. Projects they have module permissions for\nCREATE POLICY \\"Users can view their accessible projects\\" \nON public.projects \nFOR SELECT \nTO authenticated\nUSING (\n  -- User is the project creator\n  created_by = auth.uid() \n  OR \n  -- User is an admin\n  has_role(auth.uid(), 'admin'::app_role)\n  OR\n  -- User is a project member\n  EXISTS (\n    SELECT 1 FROM public.project_members pm\n    WHERE pm.project_id = projects.id \n    AND pm.user_id = auth.uid()\n  )\n  OR\n  -- User has module permissions for this project\n  EXISTS (\n    SELECT 1 FROM public.module_permissions mp\n    WHERE mp.project_id = projects.id \n    AND mp.user_id = auth.uid()\n  )\n);"}		ms86100@gmail.com	\N
20250830084323	{"-- Create helper functions to avoid RLS recursion\nCREATE OR REPLACE FUNCTION public.is_project_member(_user_id uuid, _project_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1 FROM public.project_members pm\n    WHERE pm.project_id = _project_id AND pm.user_id = _user_id\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1 FROM public.module_permissions mp\n    WHERE mp.project_id = _project_id AND mp.user_id = _user_id\n  );\n$$;\n\n-- Replace the projects SELECT policy to remove recursive references\nDROP POLICY IF EXISTS \\"Users can view their accessible projects\\" ON public.projects;\n\nCREATE POLICY \\"Users can view their accessible projects\\"\nON public.projects\nFOR SELECT\nTO authenticated\nUSING (\n  created_by = auth.uid()\n  OR has_role(auth.uid(), 'admin'::app_role)\n  OR public.is_project_member(auth.uid(), id)\n  OR public.has_project_module_permission(auth.uid(), id)\n);\n"}		ms86100@gmail.com	\N
20250830084640	{"-- Function to look up a user id by email bypassing RLS\nCREATE OR REPLACE FUNCTION public.find_user_by_email(_email text)\nRETURNS uuid\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT id FROM public.profiles WHERE lower(email) = lower(_email) LIMIT 1;\n$$;\n\nGRANT EXECUTE ON FUNCTION public.find_user_by_email(text) TO authenticated;"}		ms86100@gmail.com	\N
20250830085113	{"-- Function to get user email by ID bypassing RLS\nCREATE OR REPLACE FUNCTION public.get_user_email_by_id(_user_id uuid)\nRETURNS text\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT email FROM public.profiles WHERE id = _user_id LIMIT 1;\n$$;\n\n-- Function to get multiple user emails by IDs bypassing RLS\nCREATE OR REPLACE FUNCTION public.get_user_emails_by_ids(_user_ids uuid[])\nRETURNS TABLE(id uuid, email text)\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT profiles.id, profiles.email FROM public.profiles WHERE profiles.id = ANY(_user_ids);\n$$;\n\nGRANT EXECUTE ON FUNCTION public.get_user_email_by_id(uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.get_user_emails_by_ids(uuid[]) TO authenticated;"}		ms86100@gmail.com	\N
20250830085500	{"-- Fix the module permissions system to properly check admin role\nCREATE OR REPLACE FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module module_name, _required_access access_level)\nRETURNS boolean\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  -- Project owner has full access\n  SELECT EXISTS (\n    SELECT 1 FROM public.projects p\n    WHERE p.id = _project_id AND p.created_by = _user_id\n  )\n  OR\n  -- Admin has full access  \n  EXISTS (\n    SELECT 1 FROM public.user_roles ur\n    WHERE ur.user_id = _user_id AND ur.role = 'admin'\n  )\n  OR\n  -- Check specific module permission\n  EXISTS (\n    SELECT 1 FROM public.module_permissions mp\n    WHERE mp.project_id = _project_id \n    AND mp.user_id = _user_id \n    AND mp.module = _module\n    AND (mp.access_level = 'write' OR (_required_access = 'read' AND mp.access_level = 'read'))\n  );\n$$;\n\nGRANT EXECUTE ON FUNCTION public.has_module_permission_with_admin(uuid, uuid, module_name, access_level) TO authenticated;"}		ms86100@gmail.com	\N
20250830090327	{"-- Add audit logging for module access control\nCREATE TABLE IF NOT EXISTS public.module_access_audit (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL,\n  project_id UUID NOT NULL,\n  module module_name NOT NULL,\n  access_type TEXT NOT NULL, -- 'granted', 'revoked', 'accessed'\n  access_level access_level,\n  granted_by UUID,\n  timestamp TIMESTAMP WITH TIME ZONE DEFAULT now(),\n  metadata JSONB DEFAULT '{}'::jsonb\n);\n\n-- Enable RLS on audit table\nALTER TABLE public.module_access_audit ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for audit table\nCREATE POLICY \\"Project owners and admins can view access audit\\"\n  ON public.module_access_audit FOR SELECT\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM public.projects p\n      WHERE p.id = module_access_audit.project_id \n      AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role))\n    )\n  );\n\nCREATE POLICY \\"System can create audit entries\\"\n  ON public.module_access_audit FOR INSERT\n  TO authenticated\n  WITH CHECK (true);\n\n-- Create function to log module access\nCREATE OR REPLACE FUNCTION public.log_module_access(_user_id UUID, _project_id UUID, _module module_name, _access_type TEXT, _access_level access_level DEFAULT NULL, _granted_by UUID DEFAULT NULL)\nRETURNS VOID\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  INSERT INTO public.module_access_audit (user_id, project_id, module, access_type, access_level, granted_by)\n  VALUES (_user_id, _project_id, _module, _access_type, _access_level, _granted_by);\nEND;\n$$;\n\n-- Create trigger function for module permissions changes\nCREATE OR REPLACE FUNCTION public.trigger_log_module_permission_changes()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  IF TG_OP = 'INSERT' THEN\n    PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'granted', NEW.access_level, NEW.granted_by);\n    RETURN NEW;\n  ELSIF TG_OP = 'UPDATE' THEN\n    IF OLD.access_level IS DISTINCT FROM NEW.access_level THEN\n      PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'updated', NEW.access_level, NEW.granted_by);\n    END IF;\n    RETURN NEW;\n  ELSIF TG_OP = 'DELETE' THEN\n    PERFORM public.log_module_access(OLD.user_id, OLD.project_id, OLD.module, 'revoked', OLD.access_level, OLD.granted_by);\n    RETURN OLD;\n  END IF;\n  RETURN NULL;\nEND;\n$$;\n\n-- Create trigger for module permissions audit\nDROP TRIGGER IF EXISTS module_permission_audit_trigger ON public.module_permissions;\nCREATE TRIGGER module_permission_audit_trigger\n  AFTER INSERT OR UPDATE OR DELETE ON public.module_permissions\n  FOR EACH ROW EXECUTE FUNCTION public.trigger_log_module_permission_changes();"}		ms86100@gmail.com	\N
20250830090351	{"-- Fix security warnings by setting search_path for new functions\nCREATE OR REPLACE FUNCTION public.log_module_access(_user_id UUID, _project_id UUID, _module module_name, _access_type TEXT, _access_level access_level DEFAULT NULL, _granted_by UUID DEFAULT NULL)\nRETURNS VOID\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  INSERT INTO public.module_access_audit (user_id, project_id, module, access_type, access_level, granted_by)\n  VALUES (_user_id, _project_id, _module, _access_type, _access_level, _granted_by);\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.trigger_log_module_permission_changes()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  IF TG_OP = 'INSERT' THEN\n    PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'granted', NEW.access_level, NEW.granted_by);\n    RETURN NEW;\n  ELSIF TG_OP = 'UPDATE' THEN\n    IF OLD.access_level IS DISTINCT FROM NEW.access_level THEN\n      PERFORM public.log_module_access(NEW.user_id, NEW.project_id, NEW.module, 'updated', NEW.access_level, NEW.granted_by);\n    END IF;\n    RETURN NEW;\n  ELSIF TG_OP = 'DELETE' THEN\n    PERFORM public.log_module_access(OLD.user_id, OLD.project_id, OLD.module, 'revoked', OLD.access_level, OLD.granted_by);\n    RETURN OLD;\n  END IF;\n  RETURN NULL;\nEND;\n$$;"}		ms86100@gmail.com	\N
20250830091029	{"-- Add the user as a project member so they can see project data\nINSERT INTO public.project_members (\n  project_id, \n  user_id, \n  role,\n  joined_at\n) VALUES (\n  'd1a18682-04ed-45ac-88ab-c30aab9752dc',\n  '57e5b843-afee-400d-8cd5-6a0b362c6d93',\n  'member',\n  now()\n) ON CONFLICT (project_id, user_id) DO NOTHING;"}		ms86100@gmail.com	\N
20250830023444	{"-- Clean up orphaned columns first, then add foreign keys\n-- This will fix the nested select issue\n\n-- Step 1: Delete orphaned retrospective_columns (columns without parent retrospectives)\nDELETE FROM public.retrospective_columns rc\nWHERE NOT EXISTS (\n  SELECT 1 FROM public.retrospectives r WHERE r.id = rc.retrospective_id\n);\n\n-- Step 2: Delete orphaned retrospective_cards (cards without parent columns)  \nDELETE FROM public.retrospective_cards c\nWHERE NOT EXISTS (\n  SELECT 1 FROM public.retrospective_columns rc WHERE rc.id = c.column_id\n);\n\n-- Step 3: Add foreign key constraints to enable PostgREST nested selects\nALTER TABLE public.retrospective_columns \nADD CONSTRAINT fk_retrospective_columns_retrospective_id \nFOREIGN KEY (retrospective_id) REFERENCES public.retrospectives(id) ON DELETE CASCADE;\n\nALTER TABLE public.retrospective_cards \nADD CONSTRAINT fk_retrospective_cards_column_id \nFOREIGN KEY (column_id) REFERENCES public.retrospective_columns(id) ON DELETE CASCADE;"}		ms86100@gmail.com	\N
20250830030656	{"-- Fix RLS policies for retrospective_cards to allow proper card creation and management\n\n-- Drop existing problematic policies\nDROP POLICY IF EXISTS \\"Users can create cards in their retrospectives\\" ON public.retrospective_cards;\nDROP POLICY IF EXISTS \\"Members can update votes and move cards\\" ON public.retrospective_cards;\nDROP POLICY IF EXISTS \\"Users can delete their own cards\\" ON public.retrospective_cards;\nDROP POLICY IF EXISTS \\"Users can view cards in their retrospectives\\" ON public.retrospective_cards;\n\n-- Create new, more permissive policies for retrospective_cards\nCREATE POLICY \\"Users can view cards in accessible retrospectives\\" ON public.retrospective_cards\nFOR SELECT USING (\n  EXISTS (\n    SELECT 1 FROM public.retrospective_columns rc\n    JOIN public.retrospectives r ON r.id = rc.retrospective_id\n    JOIN public.projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create cards in accessible retrospectives\\" ON public.retrospective_cards\nFOR INSERT WITH CHECK (\n  EXISTS (\n    SELECT 1 FROM public.retrospective_columns rc\n    JOIN public.retrospectives r ON r.id = rc.retrospective_id\n    JOIN public.projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n  AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can update cards in accessible retrospectives\\" ON public.retrospective_cards\nFOR UPDATE USING (\n  EXISTS (\n    SELECT 1 FROM public.retrospective_columns rc\n    JOIN public.retrospectives r ON r.id = rc.retrospective_id\n    JOIN public.projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n) WITH CHECK (\n  EXISTS (\n    SELECT 1 FROM public.retrospective_columns rc\n    JOIN public.retrospectives r ON r.id = rc.retrospective_id\n    JOIN public.projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role) OR\n      EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can delete their own cards or project owners can delete any card\\" ON public.retrospective_cards\nFOR DELETE USING (\n  created_by = auth.uid() OR\n  EXISTS (\n    SELECT 1 FROM public.retrospective_columns rc\n    JOIN public.retrospectives r ON r.id = rc.retrospective_id\n    JOIN public.projects p ON p.id = r.project_id\n    WHERE rc.id = retrospective_cards.column_id\n    AND (\n      p.created_by = auth.uid() OR\n      has_role(auth.uid(), 'admin'::app_role)\n    )\n  )\n);"}		ms86100@gmail.com	\N
20250830031606	{"-- Enhance retrospective tables for better analytics and task conversion tracking\n\n-- Add backlog_task_id to retrospective_action_items to track conversions\nALTER TABLE public.retrospective_action_items \nADD COLUMN IF NOT EXISTS backlog_task_id uuid REFERENCES public.task_backlog(id);\n\n-- Add enhanced metadata to retrospective_card_votes for user tracking\nALTER TABLE public.retrospective_card_votes \nADD COLUMN IF NOT EXISTS metadata jsonb DEFAULT '{}';\n\n-- Create an index for better performance on retrospective analytics queries\nCREATE INDEX IF NOT EXISTS idx_retrospective_action_items_backlog_task \nON public.retrospective_action_items(backlog_task_id) WHERE backlog_task_id IS NOT NULL;\n\n-- Create an index for card votes analytics\nCREATE INDEX IF NOT EXISTS idx_retrospective_card_votes_card_user \nON public.retrospective_card_votes(card_id, user_id);\n\n-- Add a view for enhanced retrospective analytics\nCREATE OR REPLACE VIEW public.retrospective_analytics AS\nSELECT \n  r.id as retrospective_id,\n  r.project_id,\n  r.framework,\n  r.status,\n  r.created_at,\n  r.created_by,\n  COUNT(DISTINCT rc.id) as total_cards,\n  SUM(rc.votes) as total_votes,\n  COUNT(DISTINCT rai.id) as total_action_items,\n  COUNT(DISTINCT rai.id) FILTER (WHERE rai.backlog_task_id IS NOT NULL) as converted_to_tasks,\n  COUNT(DISTINCT rcv.id) as total_card_votes,\n  COUNT(DISTINCT rcv.user_id) as unique_voters\nFROM public.retrospectives r\nLEFT JOIN public.retrospective_columns rcol ON r.id = rcol.retrospective_id\nLEFT JOIN public.retrospective_cards rc ON rcol.id = rc.column_id\nLEFT JOIN public.retrospective_action_items rai ON r.id = rai.retrospective_id\nLEFT JOIN public.retrospective_card_votes rcv ON rc.id = rcv.card_id\nGROUP BY r.id, r.project_id, r.framework, r.status, r.created_at, r.created_by;"}		ms86100@gmail.com	\N
20250830031629	{"-- Fix security definer view by creating it as a regular view with proper RLS\nDROP VIEW IF EXISTS public.retrospective_analytics;\n\n-- Create a regular view that respects RLS policies\nCREATE VIEW public.retrospective_analytics AS\nSELECT \n  r.id as retrospective_id,\n  r.project_id,\n  r.framework,\n  r.status,\n  r.created_at,\n  r.created_by,\n  COUNT(DISTINCT rc.id) as total_cards,\n  SUM(rc.votes) as total_votes,\n  COUNT(DISTINCT rai.id) as total_action_items,\n  COUNT(DISTINCT rai.id) FILTER (WHERE rai.backlog_task_id IS NOT NULL) as converted_to_tasks,\n  COUNT(DISTINCT rcv.id) as total_card_votes,\n  COUNT(DISTINCT rcv.user_id) as unique_voters\nFROM public.retrospectives r\nLEFT JOIN public.retrospective_columns rcol ON r.id = rcol.retrospective_id\nLEFT JOIN public.retrospective_cards rc ON rcol.id = rc.column_id\nLEFT JOIN public.retrospective_action_items rai ON r.id = rai.retrospective_id\nLEFT JOIN public.retrospective_card_votes rcv ON rc.id = rcv.card_id\nGROUP BY r.id, r.project_id, r.framework, r.status, r.created_at, r.created_by;"}		ms86100@gmail.com	\N
20250902031216	{"-- Fix: create helper to set auth context so auth.uid() works with Node connections\ncreate or replace function public.set_current_user_id(_user_id uuid)\nreturns void\nlanguage plpgsql\nsecurity definer\nset search_path = public\nas $$\nbegin\n  perform set_config('request.jwt.claim.sub', _user_id::text, true);\n  perform set_config('request.jwt.claim.role', 'authenticated', true);\nend;\n$$;"}		ms86100@gmail.com	\N
20250902032003	{"-- First find and drop all triggers that depend on log_discussion_changes\nDROP TRIGGER IF EXISTS log_discussion_changes_trigger ON project_discussions;\nDROP TRIGGER IF EXISTS log_action_item_changes_trigger ON discussion_action_items;\nDROP TRIGGER IF EXISTS trigger_log_discussion_changes ON project_discussions;\nDROP TRIGGER IF EXISTS trigger_log_discussion_action_item_changes ON discussion_action_items;\n\n-- Now drop the function\nDROP FUNCTION IF EXISTS public.log_discussion_changes() CASCADE;\n\n-- Recreate the function to handle null changed_by gracefully\nCREATE OR REPLACE FUNCTION public.log_discussion_changes()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  -- Skip logging if we don't have auth context (e.g., from edge functions)\n  IF auth.uid() IS NULL THEN\n    RETURN COALESCE(NEW, OLD);\n  END IF;\n\n  -- Log discussion changes\n  IF TG_TABLE_NAME = 'project_discussions' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.id, 'created', 'discussion', 'Discussion created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.meeting_title IS DISTINCT FROM NEW.meeting_title THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'meeting_title', OLD.meeting_title, NEW.meeting_title, auth.uid()\n        );\n      END IF;\n      IF OLD.summary_notes IS DISTINCT FROM NEW.summary_notes THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.id, 'updated', 'summary_notes', OLD.summary_notes, NEW.summary_notes, auth.uid()\n        );\n      END IF;\n    END IF;\n  -- Log action item changes\n  ELSIF TG_TABLE_NAME = 'discussion_action_items' THEN\n    IF TG_OP = 'INSERT' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, new_value, changed_by\n      ) VALUES (\n        NEW.discussion_id, NEW.id, 'created', 'action_item', 'Action item created', auth.uid()\n      );\n    ELSIF TG_OP = 'UPDATE' THEN\n      IF OLD.status IS DISTINCT FROM NEW.status THEN\n        INSERT INTO public.discussion_change_log (\n          discussion_id, action_item_id, change_type, field_name, old_value, new_value, changed_by\n        ) VALUES (\n          NEW.discussion_id, NEW.id, 'updated', 'status', OLD.status, NEW.status, auth.uid()\n        );\n      END IF;\n    ELSIF TG_OP = 'DELETE' THEN\n      INSERT INTO public.discussion_change_log (\n        discussion_id, action_item_id, change_type, field_name, old_value, changed_by\n      ) VALUES (\n        OLD.discussion_id, OLD.id, 'deleted', 'action_item', 'Action item deleted', auth.uid()\n      );\n    END IF;\n  END IF;\n  \n  RETURN COALESCE(NEW, OLD);\nEND;\n$$;\n\n-- Recreate the triggers with consistent naming\nCREATE TRIGGER log_discussion_changes_trigger\n  AFTER INSERT OR UPDATE OR DELETE ON project_discussions\n  FOR EACH ROW EXECUTE FUNCTION log_discussion_changes();\n\nCREATE TRIGGER log_action_item_changes_trigger\n  AFTER INSERT OR UPDATE OR DELETE ON discussion_action_items\n  FOR EACH ROW EXECUTE FUNCTION log_discussion_changes();"}		ms86100@gmail.com	\N
20250905044042	{"-- Create budget management tables\n\n-- Admin-configurable budget types\nCREATE TABLE public.budget_type_config (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  code TEXT NOT NULL UNIQUE,\n  label TEXT NOT NULL,\n  enabled BOOLEAN NOT NULL DEFAULT true,\n  default_allocation_percent NUMERIC(5,2) NOT NULL DEFAULT 0,\n  dropdown_display_order INTEGER NOT NULL DEFAULT 0,\n  notes TEXT,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Project budgets\nCREATE TABLE public.project_budgets (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  currency TEXT NOT NULL DEFAULT 'INR',\n  total_budget_allocated NUMERIC(15,2) NOT NULL DEFAULT 0,\n  total_budget_received NUMERIC(15,2) NOT NULL DEFAULT 0,\n  start_date DATE,\n  end_date DATE,\n  created_by UUID NOT NULL,\n  department_id UUID,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Budget categories linked to budget types\nCREATE TABLE public.budget_categories (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_budget_id UUID NOT NULL,\n  budget_type_code TEXT NOT NULL,\n  name TEXT NOT NULL,\n  budget_allocated NUMERIC(15,2) NOT NULL DEFAULT 0,\n  budget_received NUMERIC(15,2) NOT NULL DEFAULT 0,\n  amount_spent NUMERIC(15,2) NOT NULL DEFAULT 0,\n  comments TEXT,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Spending transactions\nCREATE TABLE public.budget_spending (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  budget_category_id UUID NOT NULL,\n  date DATE NOT NULL,\n  vendor TEXT,\n  description TEXT NOT NULL,\n  invoice_id TEXT,\n  amount NUMERIC(15,2) NOT NULL,\n  payment_method TEXT,\n  approved_by UUID,\n  status TEXT NOT NULL DEFAULT 'pending',\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Budget receipts and income\nCREATE TABLE public.budget_receipts (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_budget_id UUID NOT NULL,\n  date DATE NOT NULL,\n  source TEXT NOT NULL,\n  amount NUMERIC(15,2) NOT NULL,\n  received_by UUID,\n  notes TEXT,\n  is_restricted BOOLEAN DEFAULT false,\n  restricted_to_category UUID,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Budget comments and notes\nCREATE TABLE public.budget_comments (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_budget_id UUID NOT NULL,\n  author UUID NOT NULL,\n  text TEXT NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Budget alert rules\nCREATE TABLE public.budget_alert_rules (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_budget_id UUID NOT NULL,\n  condition_type TEXT NOT NULL,\n  threshold_value NUMERIC(10,2),\n  severity TEXT NOT NULL DEFAULT 'medium',\n  message TEXT NOT NULL,\n  is_active BOOLEAN DEFAULT true,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS\nALTER TABLE public.budget_type_config ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.project_budgets ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.budget_categories ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.budget_spending ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.budget_receipts ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.budget_comments ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.budget_alert_rules ENABLE ROW LEVEL SECURITY;\n\n-- RLS Policies for budget_type_config (admin only for modifications)\nCREATE POLICY \\"Everyone can view budget types\\" \nON public.budget_type_config \nFOR SELECT \nUSING (true);\n\nCREATE POLICY \\"Admins can manage budget types\\" \nON public.budget_type_config \nFOR ALL \nUSING (has_role(auth.uid(), 'admin'::app_role));\n\n-- RLS Policies for project_budgets\nCREATE POLICY \\"Users can view budgets in their projects\\" \nON public.project_budgets \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = project_budgets.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can create budgets in their projects\\" \nON public.project_budgets \nFOR INSERT \nWITH CHECK (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = project_budgets.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n) AND created_by = auth.uid());\n\nCREATE POLICY \\"Users can update budgets in their projects\\" \nON public.project_budgets \nFOR UPDATE \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = project_budgets.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can delete budgets in their projects\\" \nON public.project_budgets \nFOR DELETE \nUSING (EXISTS (\n  SELECT 1 FROM projects p\n  WHERE p.id = project_budgets.project_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role))\n));\n\n-- RLS Policies for budget_categories\nCREATE POLICY \\"Users can view budget categories in their projects\\" \nON public.budget_categories \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_categories.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage budget categories in their projects\\" \nON public.budget_categories \nFOR ALL \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_categories.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n))\nWITH CHECK (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_categories.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n) AND created_by = auth.uid());\n\n-- Similar policies for spending, receipts, comments, and alert rules\nCREATE POLICY \\"Users can view budget spending in their projects\\" \nON public.budget_spending \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM budget_categories bc \n  JOIN project_budgets pb ON pb.id = bc.project_budget_id\n  JOIN projects p ON p.id = pb.project_id\n  WHERE bc.id = budget_spending.budget_category_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage budget spending in their projects\\" \nON public.budget_spending \nFOR ALL \nUSING (EXISTS (\n  SELECT 1 FROM budget_categories bc \n  JOIN project_budgets pb ON pb.id = bc.project_budget_id\n  JOIN projects p ON p.id = pb.project_id\n  WHERE bc.id = budget_spending.budget_category_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n))\nWITH CHECK (created_by = auth.uid());\n\n-- Apply similar patterns for receipts, comments, and alert rules\nCREATE POLICY \\"Users can view budget receipts in their projects\\" \nON public.budget_receipts \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_receipts.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage budget receipts in their projects\\" \nON public.budget_receipts \nFOR ALL \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_receipts.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n))\nWITH CHECK (created_by = auth.uid());\n\nCREATE POLICY \\"Users can view budget comments in their projects\\" \nON public.budget_comments \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_comments.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage budget comments in their projects\\" \nON public.budget_comments \nFOR ALL \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_comments.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n))\nWITH CHECK (author = auth.uid());\n\nCREATE POLICY \\"Users can view budget alert rules in their projects\\" \nON public.budget_alert_rules \nFOR SELECT \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_alert_rules.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage budget alert rules in their projects\\" \nON public.budget_alert_rules \nFOR ALL \nUSING (EXISTS (\n  SELECT 1 FROM project_budgets pb JOIN projects p ON p.id = pb.project_id\n  WHERE pb.id = budget_alert_rules.project_budget_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n))\nWITH CHECK (created_by = auth.uid());\n\n-- Add triggers for updated_at\nCREATE TRIGGER update_budget_type_config_updated_at\nBEFORE UPDATE ON public.budget_type_config\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_project_budgets_updated_at\nBEFORE UPDATE ON public.project_budgets\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_budget_categories_updated_at\nBEFORE UPDATE ON public.budget_categories\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_budget_spending_updated_at\nBEFORE UPDATE ON public.budget_spending\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_budget_receipts_updated_at\nBEFORE UPDATE ON public.budget_receipts\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_budget_alert_rules_updated_at\nBEFORE UPDATE ON public.budget_alert_rules\nFOR EACH ROW\nEXECUTE FUNCTION public.update_updated_at_column();\n\n-- Insert default budget types\nINSERT INTO public.budget_type_config (code, label, enabled, default_allocation_percent, dropdown_display_order, notes) VALUES\n('obsolescence', 'Obsolescence & Decommissioning', true, 2.0, 1, 'Budget for safe retirement, data migration and disposal.'),\n('preventive_maintenance', 'Preventive Maintenance', true, 3.0, 2, 'Routine maintenance to prevent failures (tests, cleanup).'),\n('perfective_maintenance', 'Perfective Maintenance', true, 4.0, 3, 'Improvements to performance/usability based on feedback.'),\n('development', 'Development', true, 40.0, 4, 'Core development work and feature implementation.'),\n('bug_fixing', 'Bug Fixing & Defect Resolution', true, 5.0, 5, 'Bug fixes and defect resolution activities.'),\n('security', 'Security & Vulnerability Management', true, 6.0, 6, 'Security audits, vulnerability fixes, and compliance.'),\n('export_control', 'Export Control & Compliance', true, 2.0, 7, 'Legal compliance and export control requirements.'),\n('adaptive_maintenance', 'Adaptive Maintenance', true, 10.0, 8, 'Adaptation to changing environments and requirements.'),\n('infrastructure', 'Infrastructure & Hosting', true, 20.0, 9, 'Hosting, cloud services, and infrastructure costs.'),\n('licensing', 'Licenses & Subscriptions', true, 3.0, 10, 'Third-party licenses and subscription services.'),\n('contingency', 'Contingency / Risk Reserve', true, 5.0, 11, 'Emergency budget for unexpected costs and risks.');"}		ms86100@gmail.com	\N
20250905081105	{"-- Test data for project budget\nINSERT INTO project_budgets (project_id, currency, total_budget_allocated, total_budget_received, created_by)\nVALUES ('2d4540b1-25cd-4424-84fe-ba343a042eeb', 'INR', 2200, 0, '6dc39f1e-2af3-4b78-8488-317d90f4f538');\n\n-- Get the project budget ID for categories\nINSERT INTO budget_categories (project_budget_id, budget_type_code, name, budget_allocated, budget_received, amount_spent, created_by)\nSELECT \n  pb.id,\n  'development',\n  'AAAAWWW',\n  200,\n  0,\n  0,\n  '6dc39f1e-2af3-4b78-8488-317d90f4f538'\nFROM project_budgets pb \nWHERE pb.project_id = '2d4540b1-25cd-4424-84fe-ba343a042eeb';\n\nINSERT INTO budget_categories (project_budget_id, budget_type_code, name, budget_allocated, budget_received, amount_spent, created_by)\nSELECT \n  pb.id,\n  'perfective_maintenance',\n  'pp title',\n  2000,\n  0,\n  0,\n  '6dc39f1e-2af3-4b78-8488-317d90f4f538'\nFROM project_budgets pb \nWHERE pb.project_id = '2d4540b1-25cd-4424-84fe-ba343a042eeb';"}		ms86100@gmail.com	\N
20250905100956	{"-- Create weekly availability tracking tables\nCREATE TABLE IF NOT EXISTS public.iteration_weeks (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_id UUID NOT NULL REFERENCES public.team_capacity_iterations(id) ON DELETE CASCADE,\n  week_number INTEGER NOT NULL,\n  week_start_date DATE NOT NULL,\n  week_end_date DATE NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS for iteration_weeks\nALTER TABLE public.iteration_weeks ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for iteration_weeks\nCREATE POLICY \\"Users can view iteration weeks in their projects\\" \nON public.iteration_weeks \nFOR SELECT \nUSING (EXISTS ( SELECT 1\n  FROM team_capacity_iterations tci\n  JOIN projects p ON p.id = tci.project_id\n  WHERE tci.id = iteration_weeks.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage iteration weeks in their projects\\" \nON public.iteration_weeks \nFOR ALL \nUSING (EXISTS ( SELECT 1\n  FROM team_capacity_iterations tci\n  JOIN projects p ON p.id = tci.project_id\n  WHERE tci.id = iteration_weeks.iteration_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\n-- Create weekly member availability table using team_capacity_members\nCREATE TABLE IF NOT EXISTS public.weekly_member_availability (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_week_id UUID NOT NULL REFERENCES public.iteration_weeks(id) ON DELETE CASCADE,\n  team_member_id UUID NOT NULL REFERENCES public.team_capacity_members(id) ON DELETE CASCADE,\n  availability_percent INTEGER NOT NULL DEFAULT 100,\n  leaves INTEGER NOT NULL DEFAULT 0,\n  effective_capacity NUMERIC,\n  notes TEXT,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(iteration_week_id, team_member_id)\n);\n\n-- Enable RLS for weekly_member_availability\nALTER TABLE public.weekly_member_availability ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for weekly_member_availability\nCREATE POLICY \\"Users can view weekly availability in their projects\\" \nON public.weekly_member_availability \nFOR SELECT \nUSING (EXISTS ( SELECT 1\n  FROM iteration_weeks iw\n  JOIN team_capacity_iterations tci ON tci.id = iw.iteration_id\n  JOIN projects p ON p.id = tci.project_id\n  WHERE iw.id = weekly_member_availability.iteration_week_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\nCREATE POLICY \\"Users can manage weekly availability in their projects\\" \nON public.weekly_member_availability \nFOR ALL \nUSING (EXISTS ( SELECT 1\n  FROM iteration_weeks iw\n  JOIN team_capacity_iterations tci ON tci.id = iw.iteration_id\n  JOIN projects p ON p.id = tci.project_id\n  WHERE iw.id = weekly_member_availability.iteration_week_id \n  AND (p.created_by = auth.uid() OR has_role(auth.uid(), 'admin'::app_role) OR \n       EXISTS (SELECT 1 FROM project_members pm WHERE pm.project_id = p.id AND pm.user_id = auth.uid()))\n));\n\n-- Add team_id to team_capacity_iterations table\nALTER TABLE public.team_capacity_iterations \nADD COLUMN IF NOT EXISTS team_id UUID REFERENCES public.teams(id);\n\n-- Add triggers for automatic timestamp updates\nCREATE TRIGGER update_iteration_weeks_updated_at\n  BEFORE UPDATE ON public.iteration_weeks\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\nCREATE TRIGGER update_weekly_member_availability_updated_at\n  BEFORE UPDATE ON public.weekly_member_availability\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Create function to calculate effective capacity for weekly availability\nCREATE OR REPLACE FUNCTION public.calculate_weekly_effective_capacity()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nDECLARE\n  member_work_mode TEXT;\nBEGIN\n  -- Get the team member's work mode\n  SELECT work_mode INTO member_work_mode\n  FROM team_capacity_members\n  WHERE id = NEW.team_member_id;\n  \n  -- Calculate effective capacity based on 5 working days per week\n  NEW.effective_capacity := public.calculate_effective_capacity(\n    5, -- 5 working days per week\n    NEW.leaves,\n    NEW.availability_percent,\n    COALESCE(member_work_mode, 'office')\n  );\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Add trigger to automatically calculate effective capacity\nCREATE TRIGGER trg_calculate_weekly_effective_capacity\n  BEFORE INSERT OR UPDATE ON public.weekly_member_availability\n  FOR EACH ROW EXECUTE FUNCTION public.calculate_weekly_effective_capacity();"}		ms86100@gmail.com	\N
20250905110855	{"-- Retry: create team_members and link safely (skip bad rows)\n\n-- 1) Create team_members table if missing\nCREATE TABLE IF NOT EXISTS public.team_members (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  team_id UUID NOT NULL REFERENCES public.teams(id) ON DELETE CASCADE,\n  member_name TEXT NOT NULL,\n  role TEXT,\n  email TEXT,\n  skills TEXT[] DEFAULT '{}'::text[],\n  work_mode TEXT DEFAULT 'office' CHECK (work_mode IN ('office','wfh','hybrid')),\n  default_availability_percent INTEGER DEFAULT 100 CHECK (default_availability_percent >= 0 AND default_availability_percent <= 100),\n  created_by UUID NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- updated_at trigger\nDROP TRIGGER IF EXISTS trg_team_members_updated_at ON public.team_members;\nCREATE TRIGGER trg_team_members_updated_at\n  BEFORE UPDATE ON public.team_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Enable RLS\nALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can view team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can view team members in their projects\\"\n    ON public.team_members FOR SELECT USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can manage team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can manage team members in their projects\\"\n    ON public.team_members FOR ALL USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    ) WITH CHECK (created_by = auth.uid());\n  END IF;\nEND $$;\n\n-- 2) Add team_member_id to team_capacity_members if missing\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM information_schema.columns \n    WHERE table_schema='public' AND table_name='team_capacity_members' AND column_name='team_member_id'\n  ) THEN\n    ALTER TABLE public.team_capacity_members ADD COLUMN team_member_id UUID;\n  END IF;\nEND $$;\n\nCREATE INDEX IF NOT EXISTS idx_team_capacity_members_team_member_id ON public.team_capacity_members(team_member_id);\n\n-- 3) Backfill only for valid rows (non-null team_id, member_name, created_by)\nWITH need_link AS (\n  SELECT DISTINCT tcm.team_id, tcm.member_name, tcm.role, COALESCE(tcm.work_mode,'office') as work_mode,\n         COALESCE(tcm.availability_percent,100) as default_availability_percent, tcm.created_by\n  FROM public.team_capacity_members tcm\n  LEFT JOIN public.team_members tm ON tm.team_id = tcm.team_id AND tm.member_name = tcm.member_name\n  WHERE tcm.team_member_id IS NULL\n    AND tcm.team_id IS NOT NULL\n    AND tcm.created_by IS NOT NULL\n    AND tcm.member_name IS NOT NULL AND btrim(tcm.member_name) <> ''\n    AND tm.id IS NULL\n), inserted AS (\n  INSERT INTO public.team_members (team_id, member_name, role, work_mode, default_availability_percent, created_by)\n  SELECT team_id, member_name, role, work_mode, default_availability_percent, created_by\n  FROM need_link\n  RETURNING id, team_id, member_name\n)\nUPDATE public.team_capacity_members tcm\nSET team_member_id = tm.id\nFROM public.team_members tm\nWHERE tcm.team_member_id IS NULL\n  AND tcm.team_id IS NOT NULL\n  AND tm.team_id = tcm.team_id\n  AND tm.member_name = tcm.member_name;\n\n-- 4) Unique per (iteration, team_member) when present\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='uniq_tcm_iteration_member'\n  ) THEN\n    CREATE UNIQUE INDEX uniq_tcm_iteration_member \n      ON public.team_capacity_members(iteration_id, team_member_id) \n      WHERE team_member_id IS NOT NULL;\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250905110941	{"-- Retry: create team_members and link safely (skip bad rows)\n\n-- 1) Create team_members table if missing\nCREATE TABLE IF NOT EXISTS public.team_members (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  team_id UUID NOT NULL REFERENCES public.teams(id) ON DELETE CASCADE,\n  member_name TEXT NOT NULL,\n  role TEXT,\n  email TEXT,\n  skills TEXT[] DEFAULT '{}'::text[],\n  work_mode TEXT DEFAULT 'office' CHECK (work_mode IN ('office','wfh','hybrid')),\n  default_availability_percent INTEGER DEFAULT 100 CHECK (default_availability_percent >= 0 AND default_availability_percent <= 100),\n  created_by UUID NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- updated_at trigger\nDROP TRIGGER IF EXISTS trg_team_members_updated_at ON public.team_members;\nCREATE TRIGGER trg_team_members_updated_at\n  BEFORE UPDATE ON public.team_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Enable RLS\nALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can view team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can view team members in their projects\\"\n    ON public.team_members FOR SELECT USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can manage team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can manage team members in their projects\\"\n    ON public.team_members FOR ALL USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    ) WITH CHECK (created_by = auth.uid());\n  END IF;\nEND $$;\n\n-- 2) Add team_member_id to team_capacity_members if missing\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM information_schema.columns \n    WHERE table_schema='public' AND table_name='team_capacity_members' AND column_name='team_member_id'\n  ) THEN\n    ALTER TABLE public.team_capacity_members ADD COLUMN team_member_id UUID;\n  END IF;\nEND $$;\n\nCREATE INDEX IF NOT EXISTS idx_team_capacity_members_team_member_id ON public.team_capacity_members(team_member_id);\n\n-- 3) Backfill only for valid rows (non-null team_id, member_name, created_by)\nWITH need_link AS (\n  SELECT DISTINCT tcm.team_id, tcm.member_name, tcm.role, COALESCE(tcm.work_mode,'office') as work_mode,\n         COALESCE(tcm.availability_percent,100) as default_availability_percent, tcm.created_by\n  FROM public.team_capacity_members tcm\n  LEFT JOIN public.team_members tm ON tm.team_id = tcm.team_id AND tm.member_name = tcm.member_name\n  WHERE tcm.team_member_id IS NULL\n    AND tcm.team_id IS NOT NULL\n    AND tcm.created_by IS NOT NULL\n    AND tcm.member_name IS NOT NULL AND btrim(tcm.member_name) <> ''\n    AND tm.id IS NULL\n), inserted AS (\n  INSERT INTO public.team_members (team_id, member_name, role, work_mode, default_availability_percent, created_by)\n  SELECT team_id, member_name, role, work_mode, default_availability_percent, created_by\n  FROM need_link\n  RETURNING id, team_id, member_name\n)\nUPDATE public.team_capacity_members tcm\nSET team_member_id = tm.id\nFROM public.team_members tm\nWHERE tcm.team_member_id IS NULL\n  AND tcm.team_id IS NOT NULL\n  AND tm.team_id = tcm.team_id\n  AND tm.member_name = tcm.member_name;\n\n-- 4) Unique per (iteration, team_member) when present\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='uniq_tcm_iteration_member'\n  ) THEN\n    CREATE UNIQUE INDEX uniq_tcm_iteration_member \n      ON public.team_capacity_members(iteration_id, team_member_id) \n      WHERE team_member_id IS NOT NULL;\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250905111005	{"-- Retry: create team_members and link safely (skip bad rows)\n\n-- 1) Create team_members table if missing\nCREATE TABLE IF NOT EXISTS public.team_members (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  team_id UUID NOT NULL REFERENCES public.teams(id) ON DELETE CASCADE,\n  member_name TEXT NOT NULL,\n  role TEXT,\n  email TEXT,\n  skills TEXT[] DEFAULT '{}'::text[],\n  work_mode TEXT DEFAULT 'office' CHECK (work_mode IN ('office','wfh','hybrid')),\n  default_availability_percent INTEGER DEFAULT 100 CHECK (default_availability_percent >= 0 AND default_availability_percent <= 100),\n  created_by UUID NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- updated_at trigger\nDROP TRIGGER IF EXISTS trg_team_members_updated_at ON public.team_members;\nCREATE TRIGGER trg_team_members_updated_at\n  BEFORE UPDATE ON public.team_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Enable RLS\nALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can view team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can view team members in their projects\\"\n    ON public.team_members FOR SELECT USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can manage team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can manage team members in their projects\\"\n    ON public.team_members FOR ALL USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    ) WITH CHECK (created_by = auth.uid());\n  END IF;\nEND $$;\n\n-- 2) Add team_member_id to team_capacity_members if missing\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM information_schema.columns \n    WHERE table_schema='public' AND table_name='team_capacity_members' AND column_name='team_member_id'\n  ) THEN\n    ALTER TABLE public.team_capacity_members ADD COLUMN team_member_id UUID;\n  END IF;\nEND $$;\n\nCREATE INDEX IF NOT EXISTS idx_team_capacity_members_team_member_id ON public.team_capacity_members(team_member_id);\n\n-- 3) Backfill only for valid rows (non-null team_id, member_name, created_by)\nWITH need_link AS (\n  SELECT DISTINCT tcm.team_id, tcm.member_name, tcm.role, COALESCE(tcm.work_mode,'office') as work_mode,\n         COALESCE(tcm.availability_percent,100) as default_availability_percent, tcm.created_by\n  FROM public.team_capacity_members tcm\n  LEFT JOIN public.team_members tm ON tm.team_id = tcm.team_id AND tm.member_name = tcm.member_name\n  WHERE tcm.team_member_id IS NULL\n    AND tcm.team_id IS NOT NULL\n    AND tcm.created_by IS NOT NULL\n    AND tcm.member_name IS NOT NULL AND btrim(tcm.member_name) <> ''\n    AND tm.id IS NULL\n), inserted AS (\n  INSERT INTO public.team_members (team_id, member_name, role, work_mode, default_availability_percent, created_by)\n  SELECT team_id, member_name, role, work_mode, default_availability_percent, created_by\n  FROM need_link\n  RETURNING id, team_id, member_name\n)\nUPDATE public.team_capacity_members tcm\nSET team_member_id = tm.id\nFROM public.team_members tm\nWHERE tcm.team_member_id IS NULL\n  AND tcm.team_id IS NOT NULL\n  AND tm.team_id = tcm.team_id\n  AND tm.member_name = tcm.member_name;\n\n-- 4) Unique per (iteration, team_member) when present\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='uniq_tcm_iteration_member'\n  ) THEN\n    CREATE UNIQUE INDEX uniq_tcm_iteration_member \n      ON public.team_capacity_members(iteration_id, team_member_id) \n      WHERE team_member_id IS NOT NULL;\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250905111028	{"-- Retry: create team_members and link safely (skip bad rows)\n\n-- 1) Create team_members table if missing\nCREATE TABLE IF NOT EXISTS public.team_members (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  team_id UUID NOT NULL REFERENCES public.teams(id) ON DELETE CASCADE,\n  member_name TEXT NOT NULL,\n  role TEXT,\n  email TEXT,\n  skills TEXT[] DEFAULT '{}'::text[],\n  work_mode TEXT DEFAULT 'office' CHECK (work_mode IN ('office','wfh','hybrid')),\n  default_availability_percent INTEGER DEFAULT 100 CHECK (default_availability_percent >= 0 AND default_availability_percent <= 100),\n  created_by UUID NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- updated_at trigger\nDROP TRIGGER IF EXISTS trg_team_members_updated_at ON public.team_members;\nCREATE TRIGGER trg_team_members_updated_at\n  BEFORE UPDATE ON public.team_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();\n\n-- Enable RLS\nALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can view team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can view team members in their projects\\"\n    ON public.team_members FOR SELECT USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies WHERE schemaname='public' AND tablename='team_members' AND policyname='Users can manage team members in their projects'\n  ) THEN\n    CREATE POLICY \\"Users can manage team members in their projects\\"\n    ON public.team_members FOR ALL USING (\n      EXISTS (\n        SELECT 1 FROM public.teams t\n        JOIN public.projects p ON p.id = t.project_id\n        LEFT JOIN public.project_members pm ON pm.project_id = p.id\n        WHERE t.id = team_members.team_id\n          AND (p.created_by = auth.uid() OR public.has_role(auth.uid(), 'admin'::app_role) OR pm.user_id = auth.uid())\n      )\n    ) WITH CHECK (created_by = auth.uid());\n  END IF;\nEND $$;\n\n-- 2) Add team_member_id to team_capacity_members if missing\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM information_schema.columns \n    WHERE table_schema='public' AND table_name='team_capacity_members' AND column_name='team_member_id'\n  ) THEN\n    ALTER TABLE public.team_capacity_members ADD COLUMN team_member_id UUID;\n  END IF;\nEND $$;\n\nCREATE INDEX IF NOT EXISTS idx_team_capacity_members_team_member_id ON public.team_capacity_members(team_member_id);\n\n-- 3) Backfill only for valid rows (non-null team_id, member_name, created_by)\nWITH need_link AS (\n  SELECT DISTINCT tcm.team_id, tcm.member_name, tcm.role, COALESCE(tcm.work_mode,'office') as work_mode,\n         COALESCE(tcm.availability_percent,100) as default_availability_percent, tcm.created_by\n  FROM public.team_capacity_members tcm\n  LEFT JOIN public.team_members tm ON tm.team_id = tcm.team_id AND tm.member_name = tcm.member_name\n  WHERE tcm.team_member_id IS NULL\n    AND tcm.team_id IS NOT NULL\n    AND tcm.created_by IS NOT NULL\n    AND tcm.member_name IS NOT NULL AND btrim(tcm.member_name) <> ''\n    AND tm.id IS NULL\n), inserted AS (\n  INSERT INTO public.team_members (team_id, member_name, role, work_mode, default_availability_percent, created_by)\n  SELECT team_id, member_name, role, work_mode, default_availability_percent, created_by\n  FROM need_link\n  RETURNING id, team_id, member_name\n)\nUPDATE public.team_capacity_members tcm\nSET team_member_id = tm.id\nFROM public.team_members tm\nWHERE tcm.team_member_id IS NULL\n  AND tcm.team_id IS NOT NULL\n  AND tm.team_id = tcm.team_id\n  AND tm.member_name = tcm.member_name;\n\n-- 4) Unique per (iteration, team_member) when present\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_indexes WHERE schemaname='public' AND indexname='uniq_tcm_iteration_member'\n  ) THEN\n    CREATE UNIQUE INDEX uniq_tcm_iteration_member \n      ON public.team_capacity_members(iteration_id, team_member_id) \n      WHERE team_member_id IS NOT NULL;\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250905124309	{"-- Create weekly availability table if it doesn't exist\nCREATE TABLE IF NOT EXISTS public.weekly_availability (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_week_id UUID NOT NULL REFERENCES public.iteration_weeks(id) ON DELETE CASCADE,\n  team_member_id UUID NOT NULL REFERENCES public.team_members(id) ON DELETE CASCADE,\n  availability_percent INTEGER NOT NULL DEFAULT 100 CHECK (availability_percent >= 0 AND availability_percent <= 100),\n  calculated_days_present NUMERIC NOT NULL DEFAULT 0,\n  calculated_days_total NUMERIC NOT NULL DEFAULT 5,\n  notes TEXT,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(iteration_week_id, team_member_id)\n);\n\n-- Enable RLS\nALTER TABLE public.weekly_availability ENABLE ROW LEVEL SECURITY;\n\n-- Create policies\nCREATE POLICY \\"Users can manage weekly availability in their projects\\" \nON public.weekly_availability \nFOR ALL \nUSING (\n  EXISTS (\n    SELECT 1 FROM public.iteration_weeks iw\n    JOIN public.team_capacity_iterations tci ON iw.iteration_id = tci.id\n    JOIN public.projects p ON tci.project_id = p.id\n    WHERE iw.id = weekly_availability.iteration_week_id\n    AND (\n      p.created_by = auth.uid() OR \n      has_role(auth.uid(), 'admin'::app_role) OR \n      EXISTS (\n        SELECT 1 FROM public.project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n)\nWITH CHECK (\n  created_by = auth.uid() AND\n  EXISTS (\n    SELECT 1 FROM public.iteration_weeks iw\n    JOIN public.team_capacity_iterations tci ON iw.iteration_id = tci.id\n    JOIN public.projects p ON tci.project_id = p.id\n    WHERE iw.id = weekly_availability.iteration_week_id\n    AND (\n      p.created_by = auth.uid() OR \n      has_role(auth.uid(), 'admin'::app_role) OR \n      EXISTS (\n        SELECT 1 FROM public.project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\n-- Create trigger for updated_at\nCREATE TRIGGER update_weekly_availability_updated_at\n    BEFORE UPDATE ON public.weekly_availability\n    FOR EACH ROW\n    EXECUTE FUNCTION public.update_updated_at_column();"}		ms86100@gmail.com	\N
20250907104601	{"-- Create trigger to log task status changes\nCREATE TRIGGER trg_log_task_status_changes\n    BEFORE UPDATE ON public.tasks\n    FOR EACH ROW\n    EXECUTE FUNCTION public.log_task_status_change();\n\n-- Ensure task_status_history table has proper RLS policies\nALTER TABLE public.task_status_history ENABLE ROW LEVEL SECURITY;\n\n-- Drop existing policies if they exist\nDROP POLICY IF EXISTS \\"Users can view task status history in their projects\\" ON public.task_status_history;\nDROP POLICY IF EXISTS \\"System can log task status changes\\" ON public.task_status_history;\n\n-- Users can view task status history for tasks in their projects\nCREATE POLICY \\"Users can view task status history in their projects\\" \nON public.task_status_history \nFOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM public.tasks t\n    JOIN public.projects p ON p.id = t.project_id\n    WHERE t.id = task_status_history.task_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM public.project_members pm\n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\n-- System can create task status history entries\nCREATE POLICY \\"System can log task status changes\\" \nON public.task_status_history \nFOR INSERT \nWITH CHECK (true);"}		ms86100@gmail.com	\N
20250907104658	{"-- Make status history logging work even when auth.uid() is null (e.g., via service role updates)\nCREATE OR REPLACE FUNCTION public.log_task_status_change()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF OLD.status IS DISTINCT FROM NEW.status THEN\n    INSERT INTO public.task_status_history (\n      task_id,\n      old_status,\n      new_status,\n      changed_by\n    ) VALUES (\n      NEW.id,\n      OLD.status,\n      NEW.status,\n      COALESCE(auth.uid(), NEW.created_by)\n    );\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER SET search_path = public;"}		ms86100@gmail.com	\N
20250907121936	{"-- Insert sample budget data for the project\nINSERT INTO project_budgets (id, project_id, total_budget_allocated, total_budget_received, currency, start_date, end_date, created_by, department_id) \nVALUES (\n  gen_random_uuid(),\n  '67c23315-401b-4c4d-9992-5bc3424e824a',\n  50000,\n  45000,\n  'INR',\n  '2025-09-01',\n  '2025-12-31',\n  '6dc39f1e-2af3-4b78-8488-317d90f4f538',\n  '3af3b0f4-adca-4f11-826c-20ed36b31d46'\n);\n\n-- Insert budget categories\nINSERT INTO budget_categories (id, project_budget_id, name, budget_allocated, budget_received, amount_spent, budget_type_code, comments, created_by)\nSELECT \n  gen_random_uuid(),\n  pb.id,\n  category_name,\n  allocated,\n  received,\n  spent,\n  type_code,\n  comment_text,\n  '6dc39f1e-2af3-4b78-8488-317d90f4f538'\nFROM project_budgets pb,\n(VALUES \n  ('Development', 20000, 18000, 15000, 'DEV', 'Software development costs'),\n  ('Infrastructure', 15000, 15000, 8000, 'INFRA', 'Server and hosting costs'),\n  ('Marketing', 10000, 8000, 5000, 'MKT', 'Marketing and promotion'),\n  ('Operations', 5000, 4000, 2000, 'OPS', 'General operations')\n) AS categories(category_name, allocated, received, spent, type_code, comment_text)\nWHERE pb.project_id = '67c23315-401b-4c4d-9992-5bc3424e824a';\n\n-- Update some existing tasks to completed status\nUPDATE tasks \nSET status = 'completed', updated_at = now()\nWHERE project_id = '67c23315-401b-4c4d-9992-5bc3424e824a' \nAND id IN (\n  SELECT id FROM tasks \n  WHERE project_id = '67c23315-401b-4c4d-9992-5bc3424e824a' \n  LIMIT 3\n);"}		ms86100@gmail.com	\N
20250907024114	{"-- Fix budget-service relations and enum for cloud without affecting localhost\n\n-- 1) Ensure FK between budget_categories and project_budgets so PostgREST can infer relationships\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint WHERE conname = 'fk_budget_categories_project_budget'\n  ) THEN\n    ALTER TABLE public.budget_categories\n    ADD CONSTRAINT fk_budget_categories_project_budget\n    FOREIGN KEY (project_budget_id)\n    REFERENCES public.project_budgets(id)\n    ON DELETE CASCADE;\n  END IF;\nEND $$;\n\n-- Helpful index for relationship\nCREATE INDEX IF NOT EXISTS idx_budget_categories_project_budget_id\n  ON public.budget_categories(project_budget_id);\n\n-- 2) Ensure FK between budget_spending and budget_categories\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint WHERE conname = 'fk_budget_spending_category'\n  ) THEN\n    ALTER TABLE public.budget_spending\n    ADD CONSTRAINT fk_budget_spending_category\n    FOREIGN KEY (budget_category_id)\n    REFERENCES public.budget_categories(id)\n    ON DELETE CASCADE;\n  END IF;\nEND $$;\n\nCREATE INDEX IF NOT EXISTS idx_budget_spending_category_id\n  ON public.budget_spending(budget_category_id);\n\n-- 3) (Optional but consistent) FKs for other budget tables used by service\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint WHERE conname = 'fk_budget_receipts_project_budget'\n  ) THEN\n    ALTER TABLE public.budget_receipts\n    ADD CONSTRAINT fk_budget_receipts_project_budget\n    FOREIGN KEY (project_budget_id)\n    REFERENCES public.project_budgets(id)\n    ON DELETE CASCADE;\n  END IF;\nEND $$;\n\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint WHERE conname = 'fk_budget_comments_project_budget'\n  ) THEN\n    ALTER TABLE public.budget_comments\n    ADD CONSTRAINT fk_budget_comments_project_budget\n    FOREIGN KEY (project_budget_id)\n    REFERENCES public.project_budgets(id)\n    ON DELETE CASCADE;\n  END IF;\nEND $$;\n\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint WHERE conname = 'fk_budget_alert_rules_project_budget'\n  ) THEN\n    ALTER TABLE public.budget_alert_rules\n    ADD CONSTRAINT fk_budget_alert_rules_project_budget\n    FOREIGN KEY (project_budget_id)\n    REFERENCES public.project_budgets(id)\n    ON DELETE CASCADE;\n  END IF;\nEND $$;\n\n-- Optional index helpers\nCREATE INDEX IF NOT EXISTS idx_budget_receipts_project_budget_id\n  ON public.budget_receipts(project_budget_id);\nCREATE INDEX IF NOT EXISTS idx_budget_comments_project_budget_id\n  ON public.budget_comments(project_budget_id);\nCREATE INDEX IF NOT EXISTS idx_budget_alert_rules_project_budget_id\n  ON public.budget_alert_rules(project_budget_id);\n\n-- 4) Add missing enum value for module_name used by access audit ('budget')\nDO $$ BEGIN\n  IF NOT EXISTS (\n    SELECT 1\n    FROM pg_type t\n    JOIN pg_enum e ON t.oid = e.enumtypid\n    WHERE t.typname = 'module_name' AND e.enumlabel = 'budget'\n  ) THEN\n    ALTER TYPE public.module_name ADD VALUE 'budget';\n  END IF;\nEND $$;"}		ms86100@gmail.com	\N
20250907031041	{"-- Check if teams table exists and create it with proper schema\nDROP TABLE IF EXISTS teams CASCADE;\nDROP TABLE IF EXISTS team_members CASCADE;\nDROP TABLE IF EXISTS iterations CASCADE;\nDROP TABLE IF EXISTS iteration_weeks CASCADE;\nDROP TABLE IF EXISTS member_weekly_availability CASCADE;\n\n-- Create teams table with proper schema\nCREATE TABLE public.teams (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  name TEXT NOT NULL,\n  description TEXT,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create team_members table\nCREATE TABLE public.team_members (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  team_id UUID NOT NULL REFERENCES teams(id) ON DELETE CASCADE,\n  display_name TEXT NOT NULL,\n  role TEXT,\n  email TEXT,\n  work_mode TEXT DEFAULT 'office',\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create iterations table\nCREATE TABLE public.iterations (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  project_id UUID NOT NULL,\n  team_id UUID NOT NULL REFERENCES teams(id) ON DELETE CASCADE,\n  name TEXT NOT NULL,\n  type TEXT NOT NULL,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  weeks_count INTEGER NOT NULL,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create iteration_weeks table\nCREATE TABLE public.iteration_weeks (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_id UUID NOT NULL REFERENCES iterations(id) ON DELETE CASCADE,\n  week_index INTEGER NOT NULL,\n  week_start DATE NOT NULL,\n  week_end DATE NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create member_weekly_availability table\nCREATE TABLE public.member_weekly_availability (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  iteration_week_id UUID NOT NULL REFERENCES iteration_weeks(id) ON DELETE CASCADE,\n  team_member_id UUID NOT NULL REFERENCES team_members(id) ON DELETE CASCADE,\n  leaves INTEGER DEFAULT 0,\n  availability_percent INTEGER DEFAULT 100,\n  effective_capacity NUMERIC DEFAULT 0,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(iteration_week_id, team_member_id)\n);\n\n-- Enable RLS on all tables\nALTER TABLE public.teams ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.iterations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.iteration_weeks ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.member_weekly_availability ENABLE ROW LEVEL SECURITY;\n\n-- Create RLS policies for teams\nCREATE POLICY \\"Users can view teams in their projects\\" ON teams\nFOR SELECT USING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = teams.project_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create teams in their projects\\" ON teams\nFOR INSERT WITH CHECK (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = teams.project_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n  AND created_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can update teams in their projects\\" ON teams\nFOR UPDATE USING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = teams.project_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can delete teams in their projects\\" ON teams\nFOR DELETE USING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = teams.project_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n    )\n  )\n);\n\n-- Create similar policies for other tables\nCREATE POLICY \\"Users can manage team members\\" ON team_members\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM teams t\n    JOIN projects p ON p.id = t.project_id\n    WHERE t.id = team_members.team_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can manage iterations\\" ON iterations\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM projects p\n    WHERE p.id = iterations.project_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can manage iteration weeks\\" ON iteration_weeks\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM iterations i\n    JOIN projects p ON p.id = i.project_id\n    WHERE i.id = iteration_weeks.iteration_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can manage availability\\" ON member_weekly_availability\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM iteration_weeks iw\n    JOIN iterations i ON i.id = iw.iteration_id\n    JOIN projects p ON p.id = i.project_id\n    WHERE iw.id = member_weekly_availability.iteration_week_id \n    AND (\n      p.created_by = auth.uid() \n      OR has_role(auth.uid(), 'admin'::app_role)\n      OR EXISTS (\n        SELECT 1 FROM project_members pm \n        WHERE pm.project_id = p.id AND pm.user_id = auth.uid()\n      )\n    )\n  )\n);\n\n-- Create triggers for updated_at\nCREATE TRIGGER update_teams_updated_at\n  BEFORE UPDATE ON teams\n  FOR EACH ROW\n  EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_team_members_updated_at\n  BEFORE UPDATE ON team_members\n  FOR EACH ROW\n  EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_iterations_updated_at\n  BEFORE UPDATE ON iterations\n  FOR EACH ROW\n  EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_iteration_weeks_updated_at\n  BEFORE UPDATE ON iteration_weeks\n  FOR EACH ROW\n  EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_availability_updated_at\n  BEFORE UPDATE ON member_weekly_availability\n  FOR EACH ROW\n  EXECUTE FUNCTION update_updated_at_column();"}		ms86100@gmail.com	\N
20250910125201	{"-- Fix member_weekly_availability table structure to match what the UI expects\n\n-- Check if calculated_days_present column exists and add it if missing\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'member_weekly_availability' \n        AND column_name = 'calculated_days_present'\n    ) THEN\n        ALTER TABLE member_weekly_availability \n        ADD COLUMN calculated_days_present INTEGER DEFAULT 5;\n    END IF;\nEND $$;\n\n-- Check if calculated_days_total column exists and add it if missing\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'member_weekly_availability' \n        AND column_name = 'calculated_days_total'\n    ) THEN\n        ALTER TABLE member_weekly_availability \n        ADD COLUMN calculated_days_total INTEGER DEFAULT 5;\n    END IF;\nEND $$;\n\n-- Add notes column if it doesn't exist\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'member_weekly_availability' \n        AND column_name = 'notes'\n    ) THEN\n        ALTER TABLE member_weekly_availability \n        ADD COLUMN notes TEXT;\n    END IF;\nEND $$;\n\n-- Update calculated columns based on existing data\nUPDATE member_weekly_availability \nSET \n    calculated_days_present = GREATEST(0, 5 - COALESCE(leaves, 0)),\n    calculated_days_total = 5\nWHERE calculated_days_present IS NULL OR calculated_days_total IS NULL;"}		ms86100@gmail.com	\N
\.


--
-- Data for Name: secrets; Type: TABLE DATA; Schema: vault; Owner: supabase_admin
--

COPY vault.secrets (id, name, description, secret, key_id, nonce, created_at, updated_at) FROM stdin;
\.


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE SET; Schema: auth; Owner: supabase_auth_admin
--

SELECT pg_catalog.setval('auth.refresh_tokens_id_seq', 221, true);


--
-- Name: subscription_id_seq; Type: SEQUENCE SET; Schema: realtime; Owner: supabase_admin
--

SELECT pg_catalog.setval('realtime.subscription_id_seq', 1, false);


--
-- Name: mfa_amr_claims amr_id_pk; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT amr_id_pk PRIMARY KEY (id);


--
-- Name: audit_log_entries audit_log_entries_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.audit_log_entries
    ADD CONSTRAINT audit_log_entries_pkey PRIMARY KEY (id);


--
-- Name: flow_state flow_state_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.flow_state
    ADD CONSTRAINT flow_state_pkey PRIMARY KEY (id);


--
-- Name: identities identities_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_pkey PRIMARY KEY (id);


--
-- Name: identities identities_provider_id_provider_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_provider_id_provider_unique UNIQUE (provider_id, provider);


--
-- Name: instances instances_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.instances
    ADD CONSTRAINT instances_pkey PRIMARY KEY (id);


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_authentication_method_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_authentication_method_pkey UNIQUE (session_id, authentication_method);


--
-- Name: mfa_challenges mfa_challenges_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_pkey PRIMARY KEY (id);


--
-- Name: mfa_factors mfa_factors_last_challenged_at_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_last_challenged_at_key UNIQUE (last_challenged_at);


--
-- Name: mfa_factors mfa_factors_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_pkey PRIMARY KEY (id);


--
-- Name: oauth_clients oauth_clients_client_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_client_id_key UNIQUE (client_id);


--
-- Name: oauth_clients oauth_clients_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_pkey PRIMARY KEY (id);


--
-- Name: one_time_tokens one_time_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_token_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_token_unique UNIQUE (token);


--
-- Name: saml_providers saml_providers_entity_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_entity_id_key UNIQUE (entity_id);


--
-- Name: saml_providers saml_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_pkey PRIMARY KEY (id);


--
-- Name: saml_relay_states saml_relay_states_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: sso_domains sso_domains_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_pkey PRIMARY KEY (id);


--
-- Name: sso_providers sso_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_providers
    ADD CONSTRAINT sso_providers_pkey PRIMARY KEY (id);


--
-- Name: users users_phone_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: audit_log audit_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_log
    ADD CONSTRAINT audit_log_pkey PRIMARY KEY (id);


--
-- Name: budget_alert_rules budget_alert_rules_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_alert_rules
    ADD CONSTRAINT budget_alert_rules_pkey PRIMARY KEY (id);


--
-- Name: budget_categories budget_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_categories
    ADD CONSTRAINT budget_categories_pkey PRIMARY KEY (id);


--
-- Name: budget_comments budget_comments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_comments
    ADD CONSTRAINT budget_comments_pkey PRIMARY KEY (id);


--
-- Name: budget_receipts budget_receipts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_receipts
    ADD CONSTRAINT budget_receipts_pkey PRIMARY KEY (id);


--
-- Name: budget_spending budget_spending_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_spending
    ADD CONSTRAINT budget_spending_pkey PRIMARY KEY (id);


--
-- Name: budget_type_config budget_type_config_code_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_type_config
    ADD CONSTRAINT budget_type_config_code_key UNIQUE (code);


--
-- Name: budget_type_config budget_type_config_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_type_config
    ADD CONSTRAINT budget_type_config_pkey PRIMARY KEY (id);


--
-- Name: departments departments_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.departments
    ADD CONSTRAINT departments_name_key UNIQUE (name);


--
-- Name: departments departments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.departments
    ADD CONSTRAINT departments_pkey PRIMARY KEY (id);


--
-- Name: discussion_action_items discussion_action_items_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discussion_action_items
    ADD CONSTRAINT discussion_action_items_pkey PRIMARY KEY (id);


--
-- Name: discussion_change_log discussion_change_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discussion_change_log
    ADD CONSTRAINT discussion_change_log_pkey PRIMARY KEY (id);


--
-- Name: iteration_weeks iteration_weeks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iteration_weeks
    ADD CONSTRAINT iteration_weeks_pkey PRIMARY KEY (id);


--
-- Name: iterations iterations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iterations
    ADD CONSTRAINT iterations_pkey PRIMARY KEY (id);


--
-- Name: member_weekly_availability member_weekly_availability_iteration_week_id_team_member_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.member_weekly_availability
    ADD CONSTRAINT member_weekly_availability_iteration_week_id_team_member_id_key UNIQUE (iteration_week_id, team_member_id);


--
-- Name: member_weekly_availability member_weekly_availability_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.member_weekly_availability
    ADD CONSTRAINT member_weekly_availability_pkey PRIMARY KEY (id);


--
-- Name: milestones milestones_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.milestones
    ADD CONSTRAINT milestones_pkey PRIMARY KEY (id);


--
-- Name: module_access_audit module_access_audit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_access_audit
    ADD CONSTRAINT module_access_audit_pkey PRIMARY KEY (id);


--
-- Name: module_permissions module_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_permissions
    ADD CONSTRAINT module_permissions_pkey PRIMARY KEY (id);


--
-- Name: module_permissions module_permissions_project_id_user_id_module_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_permissions
    ADD CONSTRAINT module_permissions_project_id_user_id_module_key UNIQUE (project_id, user_id, module);


--
-- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY (id);


--
-- Name: project_budgets project_budgets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_budgets
    ADD CONSTRAINT project_budgets_pkey PRIMARY KEY (id);


--
-- Name: project_discussions project_discussions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_discussions
    ADD CONSTRAINT project_discussions_pkey PRIMARY KEY (id);


--
-- Name: project_members project_members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_members
    ADD CONSTRAINT project_members_pkey PRIMARY KEY (id);


--
-- Name: project_members project_members_project_id_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_members
    ADD CONSTRAINT project_members_project_id_user_id_key UNIQUE (project_id, user_id);


--
-- Name: projects projects_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);


--
-- Name: retrospective_action_items retrospective_action_items_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_action_items
    ADD CONSTRAINT retrospective_action_items_pkey PRIMARY KEY (id);


--
-- Name: retrospective_card_votes retrospective_card_votes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_card_votes
    ADD CONSTRAINT retrospective_card_votes_pkey PRIMARY KEY (id);


--
-- Name: retrospective_cards retrospective_cards_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_cards
    ADD CONSTRAINT retrospective_cards_pkey PRIMARY KEY (id);


--
-- Name: retrospective_columns retrospective_columns_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_columns
    ADD CONSTRAINT retrospective_columns_pkey PRIMARY KEY (id);


--
-- Name: retrospectives retrospectives_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospectives
    ADD CONSTRAINT retrospectives_pkey PRIMARY KEY (id);


--
-- Name: risk_register risk_register_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.risk_register
    ADD CONSTRAINT risk_register_pkey PRIMARY KEY (id);


--
-- Name: stakeholders stakeholders_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stakeholders
    ADD CONSTRAINT stakeholders_pkey PRIMARY KEY (id);


--
-- Name: task_backlog task_backlog_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_backlog
    ADD CONSTRAINT task_backlog_pkey PRIMARY KEY (id);


--
-- Name: task_status_history task_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_status_history
    ADD CONSTRAINT task_status_history_pkey PRIMARY KEY (id);


--
-- Name: tasks tasks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_pkey PRIMARY KEY (id);


--
-- Name: team_capacity_iterations team_capacity_iterations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_capacity_iterations
    ADD CONSTRAINT team_capacity_iterations_pkey PRIMARY KEY (id);


--
-- Name: team_capacity_members team_capacity_members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_capacity_members
    ADD CONSTRAINT team_capacity_members_pkey PRIMARY KEY (id);


--
-- Name: team_capacity_settings team_capacity_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_capacity_settings
    ADD CONSTRAINT team_capacity_settings_pkey PRIMARY KEY (id);


--
-- Name: team_definitions team_definitions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_definitions
    ADD CONSTRAINT team_definitions_pkey PRIMARY KEY (id);


--
-- Name: team_definitions team_definitions_team_id_stakeholder_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_definitions
    ADD CONSTRAINT team_definitions_team_id_stakeholder_id_key UNIQUE (team_id, stakeholder_id);


--
-- Name: team_members team_members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_pkey PRIMARY KEY (id);


--
-- Name: teams teams_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_pkey PRIMARY KEY (id);


--
-- Name: risk_register uq_risk_code_per_project; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.risk_register
    ADD CONSTRAINT uq_risk_code_per_project UNIQUE (project_id, risk_code);


--
-- Name: user_roles user_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (id);


--
-- Name: user_roles user_roles_user_id_role_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT user_roles_user_id_role_key UNIQUE (user_id, role);


--
-- Name: weekly_availability weekly_availability_iteration_week_id_team_member_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.weekly_availability
    ADD CONSTRAINT weekly_availability_iteration_week_id_team_member_id_key UNIQUE (iteration_week_id, team_member_id);


--
-- Name: weekly_availability weekly_availability_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.weekly_availability
    ADD CONSTRAINT weekly_availability_pkey PRIMARY KEY (id);


--
-- Name: weekly_member_availability weekly_member_availability_iteration_week_id_team_member_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.weekly_member_availability
    ADD CONSTRAINT weekly_member_availability_iteration_week_id_team_member_id_key UNIQUE (iteration_week_id, team_member_id);


--
-- Name: weekly_member_availability weekly_member_availability_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.weekly_member_availability
    ADD CONSTRAINT weekly_member_availability_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE ONLY realtime.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: subscription pk_subscription; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.subscription
    ADD CONSTRAINT pk_subscription PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: buckets_analytics buckets_analytics_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets_analytics
    ADD CONSTRAINT buckets_analytics_pkey PRIMARY KEY (id);


--
-- Name: buckets buckets_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets
    ADD CONSTRAINT buckets_pkey PRIMARY KEY (id);


--
-- Name: migrations migrations_name_key; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_name_key UNIQUE (name);


--
-- Name: migrations migrations_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: objects objects_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT objects_pkey PRIMARY KEY (id);


--
-- Name: prefixes prefixes_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT prefixes_pkey PRIMARY KEY (bucket_id, level, name);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_pkey PRIMARY KEY (id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_idempotency_key_key; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_idempotency_key_key UNIQUE (idempotency_key);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: audit_logs_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id);


--
-- Name: confirmation_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_current_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_new_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text);


--
-- Name: factor_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at);


--
-- Name: flow_state_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC);


--
-- Name: identities_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops);


--
-- Name: INDEX identities_email_idx; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.identities_email_idx IS 'Auth: Ensures indexed queries on the email column';


--
-- Name: identities_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id);


--
-- Name: idx_auth_code; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code);


--
-- Name: idx_user_id_auth_method; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method);


--
-- Name: mfa_challenge_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC);


--
-- Name: mfa_factors_user_friendly_name_unique; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text);


--
-- Name: mfa_factors_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id);


--
-- Name: oauth_clients_client_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_client_id_idx ON auth.oauth_clients USING btree (client_id);


--
-- Name: oauth_clients_deleted_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at);


--
-- Name: one_time_tokens_relates_to_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to);


--
-- Name: one_time_tokens_token_hash_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash);


--
-- Name: one_time_tokens_user_id_token_type_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type);


--
-- Name: reauthentication_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: recovery_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: refresh_tokens_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id);


--
-- Name: refresh_tokens_instance_id_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id);


--
-- Name: refresh_tokens_parent_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent);


--
-- Name: refresh_tokens_session_id_revoked_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked);


--
-- Name: refresh_tokens_updated_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC);


--
-- Name: saml_providers_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id);


--
-- Name: saml_relay_states_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC);


--
-- Name: saml_relay_states_for_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email);


--
-- Name: saml_relay_states_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id);


--
-- Name: sessions_not_after_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC);


--
-- Name: sessions_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id);


--
-- Name: sso_domains_domain_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain));


--
-- Name: sso_domains_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id);


--
-- Name: sso_providers_resource_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id));


--
-- Name: sso_providers_resource_id_pattern_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops);


--
-- Name: unique_phone_factor_per_user; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone);


--
-- Name: user_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at);


--
-- Name: users_email_partial_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false);


--
-- Name: INDEX users_email_partial_key; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.users_email_partial_key IS 'Auth: A partial unique index that applies only when is_sso_user is false';


--
-- Name: users_instance_id_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text));


--
-- Name: users_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id);


--
-- Name: users_is_anonymous_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous);


--
-- Name: idx_budget_alert_rules_project_budget_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_budget_alert_rules_project_budget_id ON public.budget_alert_rules USING btree (project_budget_id);


--
-- Name: idx_budget_categories_project_budget_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_budget_categories_project_budget_id ON public.budget_categories USING btree (project_budget_id);


--
-- Name: idx_budget_comments_project_budget_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_budget_comments_project_budget_id ON public.budget_comments USING btree (project_budget_id);


--
-- Name: idx_budget_receipts_project_budget_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_budget_receipts_project_budget_id ON public.budget_receipts USING btree (project_budget_id);


--
-- Name: idx_budget_spending_category_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_budget_spending_category_id ON public.budget_spending USING btree (budget_category_id);


--
-- Name: idx_milestones_department_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_milestones_department_id ON public.milestones USING btree (department_id);


--
-- Name: idx_milestones_due_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_milestones_due_date ON public.milestones USING btree (due_date);


--
-- Name: idx_milestones_project_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_milestones_project_id ON public.milestones USING btree (project_id);


--
-- Name: idx_project_members_department_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_project_members_department_id ON public.project_members USING btree (department_id);


--
-- Name: idx_projects_department_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_projects_department_id ON public.projects USING btree (department_id);


--
-- Name: idx_retrospective_action_items_backlog_task; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_retrospective_action_items_backlog_task ON public.retrospective_action_items USING btree (backlog_task_id) WHERE (backlog_task_id IS NOT NULL);


--
-- Name: idx_retrospective_card_votes_card_user; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_retrospective_card_votes_card_user ON public.retrospective_card_votes USING btree (card_id, user_id);


--
-- Name: idx_retrospective_card_votes_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_retrospective_card_votes_unique ON public.retrospective_card_votes USING btree (card_id, user_id);


--
-- Name: idx_risk_register_department; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_risk_register_department ON public.risk_register USING btree (department_id);


--
-- Name: idx_risk_register_project; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_risk_register_project ON public.risk_register USING btree (project_id);


--
-- Name: idx_risk_register_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_risk_register_status ON public.risk_register USING btree (status);


--
-- Name: idx_task_status_history_changed_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_task_status_history_changed_at ON public.task_status_history USING btree (changed_at);


--
-- Name: idx_task_status_history_task_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_task_status_history_task_id ON public.task_status_history USING btree (task_id);


--
-- Name: idx_tasks_department_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tasks_department_id ON public.tasks USING btree (department_id);


--
-- Name: idx_tasks_milestone_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tasks_milestone_id ON public.tasks USING btree (milestone_id);


--
-- Name: idx_tasks_owner_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tasks_owner_id ON public.tasks USING btree (owner_id);


--
-- Name: idx_tasks_project_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tasks_project_id ON public.tasks USING btree (project_id);


--
-- Name: idx_tasks_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tasks_status ON public.tasks USING btree (status);


--
-- Name: idx_team_capacity_members_stakeholder_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_team_capacity_members_stakeholder_id ON public.team_capacity_members USING btree (stakeholder_id);


--
-- Name: idx_team_capacity_members_team_member_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_team_capacity_members_team_member_id ON public.team_capacity_members USING btree (team_member_id);


--
-- Name: uniq_tcm_iteration_member; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX uniq_tcm_iteration_member ON public.team_capacity_members USING btree (iteration_id, team_member_id) WHERE (team_member_id IS NOT NULL);


--
-- Name: ix_realtime_subscription_entity; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE INDEX ix_realtime_subscription_entity ON realtime.subscription USING btree (entity);


--
-- Name: subscription_subscription_id_entity_filters_key; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE UNIQUE INDEX subscription_subscription_id_entity_filters_key ON realtime.subscription USING btree (subscription_id, entity, filters);


--
-- Name: bname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name);


--
-- Name: bucketid_objname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name);


--
-- Name: idx_multipart_uploads_list; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at);


--
-- Name: idx_name_bucket_level_unique; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE "C", bucket_id, level);


--
-- Name: idx_objects_bucket_id_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE "C");


--
-- Name: idx_objects_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level);


--
-- Name: idx_prefixes_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops);


--
-- Name: name_prefix_search; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops);


--
-- Name: objects_bucket_id_level_idx; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE "C");


--
-- Name: users on_auth_user_created; Type: TRIGGER; Schema: auth; Owner: supabase_auth_admin
--

CREATE TRIGGER on_auth_user_created AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();


--
-- Name: task_backlog audit_backlog_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_backlog_changes AFTER INSERT OR DELETE OR UPDATE ON public.task_backlog FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: team_capacity_iterations audit_capacity_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_capacity_changes AFTER INSERT OR DELETE OR UPDATE ON public.team_capacity_iterations FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: project_discussions audit_discussions_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_discussions_changes AFTER INSERT OR DELETE OR UPDATE ON public.project_discussions FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: milestones audit_milestones_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_milestones_changes AFTER INSERT OR DELETE OR UPDATE ON public.milestones FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: retrospectives audit_retrospectives_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_retrospectives_changes AFTER INSERT OR DELETE OR UPDATE ON public.retrospectives FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: risk_register audit_risk_register_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_risk_register_changes AFTER INSERT OR DELETE OR UPDATE ON public.risk_register FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: stakeholders audit_stakeholders_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_stakeholders_changes AFTER INSERT OR DELETE OR UPDATE ON public.stakeholders FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: tasks audit_tasks_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_tasks_changes AFTER INSERT OR DELETE OR UPDATE ON public.tasks FOR EACH ROW EXECUTE FUNCTION public.log_audit_changes();


--
-- Name: discussion_action_items log_action_item_changes_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_action_item_changes_trigger AFTER INSERT OR DELETE OR UPDATE ON public.discussion_action_items FOR EACH ROW EXECUTE FUNCTION public.log_discussion_changes();


--
-- Name: project_discussions log_discussion_changes_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_discussion_changes_trigger AFTER INSERT OR DELETE OR UPDATE ON public.project_discussions FOR EACH ROW EXECUTE FUNCTION public.log_discussion_changes();


--
-- Name: module_permissions module_permission_audit_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER module_permission_audit_trigger AFTER INSERT OR DELETE OR UPDATE ON public.module_permissions FOR EACH ROW EXECUTE FUNCTION public.trigger_log_module_permission_changes();


--
-- Name: retrospectives retrospectives_set_department_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER retrospectives_set_department_trigger BEFORE INSERT ON public.retrospectives FOR EACH ROW EXECUTE FUNCTION public.trg_retrospectives_set_department();


--
-- Name: risk_register set_risk_register_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER set_risk_register_department BEFORE INSERT ON public.risk_register FOR EACH ROW EXECUTE FUNCTION public.trg_risk_register_set_department();


--
-- Name: tasks task_status_change_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER task_status_change_trigger AFTER UPDATE ON public.tasks FOR EACH ROW EXECUTE FUNCTION public.log_task_status_change();


--
-- Name: weekly_member_availability trg_calculate_weekly_effective_capacity; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_calculate_weekly_effective_capacity BEFORE INSERT OR UPDATE ON public.weekly_member_availability FOR EACH ROW EXECUTE FUNCTION public.calculate_weekly_effective_capacity();


--
-- Name: tasks trg_log_task_status_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_log_task_status_changes BEFORE UPDATE ON public.tasks FOR EACH ROW EXECUTE FUNCTION public.log_task_status_change();


--
-- Name: milestones trg_milestones_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_milestones_set_department BEFORE INSERT ON public.milestones FOR EACH ROW EXECUTE FUNCTION public.trg_milestones_set_department();


--
-- Name: project_members trg_project_members_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_project_members_set_department BEFORE INSERT ON public.project_members FOR EACH ROW EXECUTE FUNCTION public.trg_project_members_set_department();


--
-- Name: projects trg_projects_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_projects_set_department BEFORE INSERT ON public.projects FOR EACH ROW EXECUTE FUNCTION public.trg_projects_set_department();


--
-- Name: task_backlog trg_task_backlog_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_task_backlog_set_department BEFORE INSERT ON public.task_backlog FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();


--
-- Name: tasks trg_tasks_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_tasks_set_department BEFORE INSERT ON public.tasks FOR EACH ROW EXECUTE FUNCTION public.trg_tasks_set_department();


--
-- Name: team_capacity_iterations trg_team_capacity_iterations_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_team_capacity_iterations_set_department BEFORE INSERT ON public.team_capacity_iterations FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();


--
-- Name: team_capacity_members trg_team_capacity_members_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_team_capacity_members_set_department BEFORE INSERT ON public.team_capacity_members FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();


--
-- Name: team_capacity_settings trg_team_capacity_settings_set_department; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_team_capacity_settings_set_department BEFORE INSERT ON public.team_capacity_settings FOR EACH ROW EXECUTE FUNCTION public.trg_task_backlog_set_department();


--
-- Name: member_weekly_availability update_availability_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_availability_updated_at BEFORE UPDATE ON public.member_weekly_availability FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: budget_alert_rules update_budget_alert_rules_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_budget_alert_rules_updated_at BEFORE UPDATE ON public.budget_alert_rules FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: budget_categories update_budget_categories_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_budget_categories_updated_at BEFORE UPDATE ON public.budget_categories FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: budget_receipts update_budget_receipts_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_budget_receipts_updated_at BEFORE UPDATE ON public.budget_receipts FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: budget_spending update_budget_spending_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_budget_spending_updated_at BEFORE UPDATE ON public.budget_spending FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: budget_type_config update_budget_type_config_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_budget_type_config_updated_at BEFORE UPDATE ON public.budget_type_config FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: departments update_departments_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_departments_updated_at BEFORE UPDATE ON public.departments FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: discussion_action_items update_discussion_action_items_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_discussion_action_items_updated_at BEFORE UPDATE ON public.discussion_action_items FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: iteration_weeks update_iteration_weeks_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_iteration_weeks_updated_at BEFORE UPDATE ON public.iteration_weeks FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: iterations update_iterations_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_iterations_updated_at BEFORE UPDATE ON public.iterations FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: milestones update_milestones_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_milestones_updated_at BEFORE UPDATE ON public.milestones FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: module_permissions update_module_permissions_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_module_permissions_updated_at BEFORE UPDATE ON public.module_permissions FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: profiles update_profiles_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_profiles_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: project_budgets update_project_budgets_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_project_budgets_updated_at BEFORE UPDATE ON public.project_budgets FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: project_discussions update_project_discussions_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_project_discussions_updated_at BEFORE UPDATE ON public.project_discussions FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: projects update_projects_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_projects_updated_at BEFORE UPDATE ON public.projects FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: retrospective_action_items update_retrospective_action_items_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_retrospective_action_items_updated_at BEFORE UPDATE ON public.retrospective_action_items FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: retrospective_cards update_retrospective_cards_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_retrospective_cards_updated_at BEFORE UPDATE ON public.retrospective_cards FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: retrospective_columns update_retrospective_columns_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_retrospective_columns_updated_at BEFORE UPDATE ON public.retrospective_columns FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: retrospectives update_retrospectives_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_retrospectives_updated_at BEFORE UPDATE ON public.retrospectives FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: risk_register update_risk_register_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_risk_register_updated_at BEFORE UPDATE ON public.risk_register FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: stakeholders update_stakeholders_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_stakeholders_updated_at BEFORE UPDATE ON public.stakeholders FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: task_backlog update_task_backlog_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_task_backlog_updated_at BEFORE UPDATE ON public.task_backlog FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: tasks update_tasks_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_tasks_updated_at BEFORE UPDATE ON public.tasks FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: team_capacity_iterations update_team_capacity_iterations_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_team_capacity_iterations_updated_at BEFORE UPDATE ON public.team_capacity_iterations FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: team_capacity_members update_team_capacity_members_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_team_capacity_members_updated_at BEFORE UPDATE ON public.team_capacity_members FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: team_capacity_settings update_team_capacity_settings_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_team_capacity_settings_updated_at BEFORE UPDATE ON public.team_capacity_settings FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: team_definitions update_team_definitions_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_team_definitions_updated_at BEFORE UPDATE ON public.team_definitions FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: team_members update_team_members_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_team_members_updated_at BEFORE UPDATE ON public.team_members FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: teams update_teams_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_teams_updated_at BEFORE UPDATE ON public.teams FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: weekly_availability update_weekly_availability_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_weekly_availability_updated_at BEFORE UPDATE ON public.weekly_availability FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: weekly_member_availability update_weekly_member_availability_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_weekly_member_availability_updated_at BEFORE UPDATE ON public.weekly_member_availability FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: subscription tr_check_filters; Type: TRIGGER; Schema: realtime; Owner: supabase_admin
--

CREATE TRIGGER tr_check_filters BEFORE INSERT OR UPDATE ON realtime.subscription FOR EACH ROW EXECUTE FUNCTION realtime.subscription_check_filters();


--
-- Name: buckets enforce_bucket_name_length_trigger; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER enforce_bucket_name_length_trigger BEFORE INSERT OR UPDATE OF name ON storage.buckets FOR EACH ROW EXECUTE FUNCTION storage.enforce_bucket_name_length();


--
-- Name: objects objects_delete_delete_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_delete_delete_prefix AFTER DELETE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects objects_insert_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_insert_create_prefix BEFORE INSERT ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.objects_insert_prefix_trigger();


--
-- Name: objects objects_update_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_update_create_prefix BEFORE UPDATE ON storage.objects FOR EACH ROW WHEN (((new.name <> old.name) OR (new.bucket_id <> old.bucket_id))) EXECUTE FUNCTION storage.objects_update_prefix_trigger();


--
-- Name: prefixes prefixes_create_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_create_hierarchy BEFORE INSERT ON storage.prefixes FOR EACH ROW WHEN ((pg_trigger_depth() < 1)) EXECUTE FUNCTION storage.prefixes_insert_trigger();


--
-- Name: prefixes prefixes_delete_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_delete_hierarchy AFTER DELETE ON storage.prefixes FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects update_objects_updated_at; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER update_objects_updated_at BEFORE UPDATE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.update_updated_at_column();


--
-- Name: identities identities_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: mfa_challenges mfa_challenges_auth_factor_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_auth_factor_id_fkey FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE;


--
-- Name: mfa_factors mfa_factors_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: one_time_tokens one_time_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: refresh_tokens refresh_tokens_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: saml_providers saml_providers_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_flow_state_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_flow_state_id_fkey FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: sessions sessions_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: sso_domains sso_domains_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: audit_log audit_log_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_log
    ADD CONSTRAINT audit_log_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: audit_log audit_log_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_log
    ADD CONSTRAINT audit_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- Name: discussion_action_items discussion_action_items_discussion_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discussion_action_items
    ADD CONSTRAINT discussion_action_items_discussion_id_fkey FOREIGN KEY (discussion_id) REFERENCES public.project_discussions(id) ON DELETE CASCADE;


--
-- Name: budget_alert_rules fk_budget_alert_rules_project_budget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_alert_rules
    ADD CONSTRAINT fk_budget_alert_rules_project_budget FOREIGN KEY (project_budget_id) REFERENCES public.project_budgets(id) ON DELETE CASCADE;


--
-- Name: budget_categories fk_budget_categories_project_budget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_categories
    ADD CONSTRAINT fk_budget_categories_project_budget FOREIGN KEY (project_budget_id) REFERENCES public.project_budgets(id) ON DELETE CASCADE;


--
-- Name: budget_comments fk_budget_comments_project_budget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_comments
    ADD CONSTRAINT fk_budget_comments_project_budget FOREIGN KEY (project_budget_id) REFERENCES public.project_budgets(id) ON DELETE CASCADE;


--
-- Name: budget_receipts fk_budget_receipts_project_budget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_receipts
    ADD CONSTRAINT fk_budget_receipts_project_budget FOREIGN KEY (project_budget_id) REFERENCES public.project_budgets(id) ON DELETE CASCADE;


--
-- Name: budget_spending fk_budget_spending_category; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.budget_spending
    ADD CONSTRAINT fk_budget_spending_category FOREIGN KEY (budget_category_id) REFERENCES public.budget_categories(id) ON DELETE CASCADE;


--
-- Name: retrospective_action_items fk_retrospective_action_items_retrospective_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_action_items
    ADD CONSTRAINT fk_retrospective_action_items_retrospective_id FOREIGN KEY (retrospective_id) REFERENCES public.retrospectives(id) ON DELETE CASCADE;


--
-- Name: retrospective_cards fk_retrospective_cards_column_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_cards
    ADD CONSTRAINT fk_retrospective_cards_column_id FOREIGN KEY (column_id) REFERENCES public.retrospective_columns(id) ON DELETE CASCADE;


--
-- Name: retrospective_columns fk_retrospective_columns_retrospective_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_columns
    ADD CONSTRAINT fk_retrospective_columns_retrospective_id FOREIGN KEY (retrospective_id) REFERENCES public.retrospectives(id) ON DELETE CASCADE;


--
-- Name: iteration_weeks iteration_weeks_iteration_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iteration_weeks
    ADD CONSTRAINT iteration_weeks_iteration_id_fkey FOREIGN KEY (iteration_id) REFERENCES public.iterations(id) ON DELETE CASCADE;


--
-- Name: iterations iterations_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iterations
    ADD CONSTRAINT iterations_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: member_weekly_availability member_weekly_availability_iteration_week_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.member_weekly_availability
    ADD CONSTRAINT member_weekly_availability_iteration_week_id_fkey FOREIGN KEY (iteration_week_id) REFERENCES public.iteration_weeks(id) ON DELETE CASCADE;


--
-- Name: member_weekly_availability member_weekly_availability_team_member_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.member_weekly_availability
    ADD CONSTRAINT member_weekly_availability_team_member_id_fkey FOREIGN KEY (team_member_id) REFERENCES public.team_members(id) ON DELETE CASCADE;


--
-- Name: milestones milestones_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.milestones
    ADD CONSTRAINT milestones_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: milestones milestones_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.milestones
    ADD CONSTRAINT milestones_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id);


--
-- Name: milestones milestones_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.milestones
    ADD CONSTRAINT milestones_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: module_permissions module_permissions_granted_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_permissions
    ADD CONSTRAINT module_permissions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES auth.users(id);


--
-- Name: module_permissions module_permissions_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_permissions
    ADD CONSTRAINT module_permissions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: module_permissions module_permissions_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.module_permissions
    ADD CONSTRAINT module_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: profiles profiles_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id);


--
-- Name: profiles profiles_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: project_members project_members_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_members
    ADD CONSTRAINT project_members_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id);


--
-- Name: project_members project_members_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_members
    ADD CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: project_members project_members_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.project_members
    ADD CONSTRAINT project_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: projects projects_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);


--
-- Name: projects projects_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.projects
    ADD CONSTRAINT projects_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id);


--
-- Name: retrospective_action_items retrospective_action_items_backlog_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_action_items
    ADD CONSTRAINT retrospective_action_items_backlog_task_id_fkey FOREIGN KEY (backlog_task_id) REFERENCES public.task_backlog(id);


--
-- Name: retrospective_action_items retrospective_action_items_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_action_items
    ADD CONSTRAINT retrospective_action_items_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task_backlog(id) ON DELETE SET NULL;


--
-- Name: retrospective_card_votes retrospective_card_votes_card_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.retrospective_card_votes
    ADD CONSTRAINT retrospective_card_votes_card_id_fkey FOREIGN KEY (card_id) REFERENCES public.retrospective_cards(id) ON DELETE CASCADE;


--
-- Name: stakeholders stakeholders_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stakeholders
    ADD CONSTRAINT stakeholders_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);


--
-- Name: stakeholders stakeholders_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stakeholders
    ADD CONSTRAINT stakeholders_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: tasks tasks_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: tasks tasks_department_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id);


--
-- Name: tasks tasks_milestone_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_milestone_id_fkey FOREIGN KEY (milestone_id) REFERENCES public.milestones(id) ON DELETE SET NULL;


--
-- Name: tasks tasks_owner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.stakeholders(id) ON DELETE SET NULL;


--
-- Name: tasks tasks_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tasks
    ADD CONSTRAINT tasks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id) ON DELETE CASCADE;


--
-- Name: team_capacity_members team_capacity_members_stakeholder_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_capacity_members
    ADD CONSTRAINT team_capacity_members_stakeholder_id_fkey FOREIGN KEY (stakeholder_id) REFERENCES public.stakeholders(id) ON DELETE SET NULL;


--
-- Name: team_members team_members_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: user_roles user_roles_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: weekly_member_availability weekly_member_availability_team_member_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.weekly_member_availability
    ADD CONSTRAINT weekly_member_availability_team_member_id_fkey FOREIGN KEY (team_member_id) REFERENCES public.team_capacity_members(id) ON DELETE CASCADE;


--
-- Name: objects objects_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT "objects_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: prefixes prefixes_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT "prefixes_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_upload_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE;


--
-- Name: audit_log_entries; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.audit_log_entries ENABLE ROW LEVEL SECURITY;

--
-- Name: flow_state; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.flow_state ENABLE ROW LEVEL SECURITY;

--
-- Name: identities; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.identities ENABLE ROW LEVEL SECURITY;

--
-- Name: instances; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.instances ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_amr_claims; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_amr_claims ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_challenges; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_challenges ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_factors; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_factors ENABLE ROW LEVEL SECURITY;

--
-- Name: one_time_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.one_time_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: refresh_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.refresh_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_relay_states; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_relay_states ENABLE ROW LEVEL SECURITY;

--
-- Name: schema_migrations; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.schema_migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: sessions; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sessions ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_domains; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_domains ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

--
-- Name: projects Admins can delete projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can delete projects" ON public.projects FOR DELETE TO authenticated USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: budget_type_config Admins can manage budget types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can manage budget types" ON public.budget_type_config USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: departments Admins can manage departments; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can manage departments" ON public.departments USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: user_roles Admins can manage user roles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can manage user roles" ON public.user_roles USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: profiles Admins can update all profiles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can update all profiles" ON public.profiles FOR UPDATE USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: profiles Admins can view all profiles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can view all profiles" ON public.profiles FOR SELECT USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: user_roles Admins can view all user roles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can view all user roles" ON public.user_roles FOR SELECT USING (public.has_role(auth.uid(), 'admin'::public.app_role));


--
-- Name: projects Authenticated users can create projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Authenticated users can create projects" ON public.projects FOR INSERT TO authenticated WITH CHECK ((auth.uid() = created_by));


--
-- Name: budget_type_config Everyone can view budget types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Everyone can view budget types" ON public.budget_type_config FOR SELECT USING (true);


--
-- Name: departments Everyone can view departments; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Everyone can view departments" ON public.departments FOR SELECT USING (true);


--
-- Name: project_members Project creators and admins can manage memberships; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Project creators and admins can manage memberships" ON public.project_members TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.projects
  WHERE ((projects.id = project_members.project_id) AND ((projects.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role))))));


--
-- Name: projects Project creators and admins can update projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Project creators and admins can update projects" ON public.projects FOR UPDATE TO authenticated USING (((auth.uid() = created_by) OR public.has_role(auth.uid(), 'admin'::public.app_role)));


--
-- Name: module_permissions Project owners and admins can manage module permissions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Project owners and admins can manage module permissions" ON public.module_permissions USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = module_permissions.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role))))));


--
-- Name: module_access_audit Project owners and admins can view access audit; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Project owners and admins can view access audit" ON public.module_access_audit FOR SELECT TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = module_access_audit.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role))))));


--
-- Name: module_access_audit System can create audit entries; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "System can create audit entries" ON public.module_access_audit FOR INSERT TO authenticated WITH CHECK (true);


--
-- Name: audit_log System can create audit log entries; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "System can create audit log entries" ON public.audit_log FOR INSERT WITH CHECK (true);


--
-- Name: task_status_history System can log task status changes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "System can log task status changes" ON public.task_status_history FOR INSERT WITH CHECK (true);


--
-- Name: discussion_action_items Users can create action items in their project discussions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create action items in their project discussions" ON public.discussion_action_items FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: task_backlog Users can create backlog items in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create backlog items in their projects" ON public.task_backlog FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = task_backlog.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: project_budgets Users can create budgets in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create budgets in their projects" ON public.project_budgets FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_budgets.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: team_capacity_iterations Users can create capacity iterations in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create capacity iterations in their projects" ON public.team_capacity_iterations FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_iterations.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: team_capacity_members Users can create capacity members in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create capacity members in their projects" ON public.team_capacity_members FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.team_capacity_iterations tci
     JOIN public.projects p ON ((p.id = tci.project_id)))
  WHERE ((tci.id = team_capacity_members.iteration_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: team_capacity_settings Users can create capacity settings in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create capacity settings in their projects" ON public.team_capacity_settings FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_settings.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: retrospective_cards Users can create cards in accessible retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create cards in accessible retrospectives" ON public.retrospective_cards FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM ((public.retrospective_columns rc
     JOIN public.retrospectives r ON ((r.id = rc.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_cards.column_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: discussion_change_log Users can create change log entries in their project discussion; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create change log entries in their project discussion" ON public.discussion_change_log FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_change_log.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (changed_by = auth.uid())));


--
-- Name: project_discussions Users can create discussions in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create discussions in their projects" ON public.project_discussions FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: milestones Users can create milestones in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create milestones in their projects" ON public.milestones FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = milestones.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: retrospectives Users can create retrospectives in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create retrospectives in their projects" ON public.retrospectives FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = retrospectives.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: risk_register Users can create risks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create risks in their projects" ON public.risk_register FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = risk_register.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: stakeholders Users can create stakeholders in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create stakeholders in their projects" ON public.stakeholders FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = stakeholders.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: task_status_history Users can create status history for tasks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create status history for tasks in their projects" ON public.task_status_history FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.tasks t
     JOIN public.projects p ON ((t.project_id = p.id)))
  WHERE ((t.id = task_status_history.task_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (changed_by = auth.uid())));


--
-- Name: tasks Users can create tasks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create tasks in their projects" ON public.tasks FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = tasks.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: teams Users can create teams in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create teams in their projects" ON public.teams FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = teams.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: discussion_action_items Users can delete action items in their project discussions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete action items in their project discussions" ON public.discussion_action_items FOR DELETE USING ((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: task_backlog Users can delete backlog items in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete backlog items in their projects" ON public.task_backlog FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = task_backlog.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_budgets Users can delete budgets in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete budgets in their projects" ON public.project_budgets FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_budgets.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role))))));


--
-- Name: team_capacity_iterations Users can delete capacity iterations in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete capacity iterations in their projects" ON public.team_capacity_iterations FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_iterations.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_members Users can delete capacity members in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete capacity members in their projects" ON public.team_capacity_members FOR DELETE USING ((EXISTS ( SELECT 1
   FROM (public.team_capacity_iterations tci
     JOIN public.projects p ON ((p.id = tci.project_id)))
  WHERE ((tci.id = team_capacity_members.iteration_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_settings Users can delete capacity settings in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete capacity settings in their projects" ON public.team_capacity_settings FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_settings.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_discussions Users can delete discussions in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete discussions in their projects" ON public.project_discussions FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: milestones Users can delete milestones in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete milestones in their projects" ON public.milestones FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = milestones.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: retrospectives Users can delete retrospectives in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete retrospectives in their projects" ON public.retrospectives FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = retrospectives.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: risk_register Users can delete risks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete risks in their projects" ON public.risk_register FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = risk_register.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: stakeholders Users can delete stakeholders in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete stakeholders in their projects" ON public.stakeholders FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = stakeholders.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: tasks Users can delete tasks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete tasks in their projects" ON public.tasks FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = tasks.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: teams Users can delete teams in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete teams in their projects" ON public.teams FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = teams.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role))))));


--
-- Name: retrospective_cards Users can delete their own cards or project owners can delete a; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete their own cards or project owners can delete a" ON public.retrospective_cards FOR DELETE USING (((created_by = auth.uid()) OR (EXISTS ( SELECT 1
   FROM ((public.retrospective_columns rc
     JOIN public.retrospectives r ON ((r.id = rc.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_cards.column_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role)))))));


--
-- Name: retrospective_action_items Users can manage action items in their retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage action items in their retrospectives" ON public.retrospective_action_items USING ((EXISTS ( SELECT 1
   FROM (public.retrospectives r
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((r.id = retrospective_action_items.retrospective_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.retrospectives r
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((r.id = retrospective_action_items.retrospective_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: member_weekly_availability Users can manage availability; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage availability" ON public.member_weekly_availability USING ((EXISTS ( SELECT 1
   FROM ((public.iteration_weeks iw
     JOIN public.iterations i ON ((i.id = iw.iteration_id)))
     JOIN public.projects p ON ((p.id = i.project_id)))
  WHERE ((iw.id = member_weekly_availability.iteration_week_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_alert_rules Users can manage budget alert rules in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage budget alert rules in their projects" ON public.budget_alert_rules USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_alert_rules.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK ((created_by = auth.uid()));


--
-- Name: budget_categories Users can manage budget categories in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage budget categories in their projects" ON public.budget_categories USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_categories.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK (((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_categories.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))) AND (created_by = auth.uid())));


--
-- Name: budget_comments Users can manage budget comments in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage budget comments in their projects" ON public.budget_comments USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_comments.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK ((author = auth.uid()));


--
-- Name: budget_receipts Users can manage budget receipts in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage budget receipts in their projects" ON public.budget_receipts USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_receipts.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK ((created_by = auth.uid()));


--
-- Name: budget_spending Users can manage budget spending in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage budget spending in their projects" ON public.budget_spending USING ((EXISTS ( SELECT 1
   FROM ((public.budget_categories bc
     JOIN public.project_budgets pb ON ((pb.id = bc.project_budget_id)))
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((bc.id = budget_spending.budget_category_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK ((created_by = auth.uid()));


--
-- Name: retrospective_columns Users can manage columns in their retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage columns in their retrospectives" ON public.retrospective_columns USING ((EXISTS ( SELECT 1
   FROM (public.retrospectives r
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((r.id = retrospective_columns.retrospective_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: iteration_weeks Users can manage iteration weeks; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage iteration weeks" ON public.iteration_weeks USING ((EXISTS ( SELECT 1
   FROM (public.iterations i
     JOIN public.projects p ON ((p.id = i.project_id)))
  WHERE ((i.id = iteration_weeks.iteration_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: iterations Users can manage iterations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage iterations" ON public.iterations USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = iterations.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_members Users can manage team members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage team members" ON public.team_members USING ((EXISTS ( SELECT 1
   FROM (public.teams t
     JOIN public.projects p ON ((p.id = t.project_id)))
  WHERE ((t.id = team_members.team_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: discussion_action_items Users can update action items in their project discussions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update action items in their project discussions" ON public.discussion_action_items FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: task_backlog Users can update backlog items in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update backlog items in their projects" ON public.task_backlog FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = task_backlog.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_budgets Users can update budgets in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update budgets in their projects" ON public.project_budgets FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_budgets.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_iterations Users can update capacity iterations in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update capacity iterations in their projects" ON public.team_capacity_iterations FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_iterations.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_members Users can update capacity members in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update capacity members in their projects" ON public.team_capacity_members FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM (public.team_capacity_iterations tci
     JOIN public.projects p ON ((p.id = tci.project_id)))
  WHERE ((tci.id = team_capacity_members.iteration_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_settings Users can update capacity settings in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update capacity settings in their projects" ON public.team_capacity_settings FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_settings.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: retrospective_cards Users can update cards in accessible retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update cards in accessible retrospectives" ON public.retrospective_cards FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM ((public.retrospective_columns rc
     JOIN public.retrospectives r ON ((r.id = rc.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_cards.column_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM ((public.retrospective_columns rc
     JOIN public.retrospectives r ON ((r.id = rc.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_cards.column_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_discussions Users can update discussions in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update discussions in their projects" ON public.project_discussions FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: milestones Users can update milestones in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update milestones in their projects" ON public.milestones FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = milestones.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: retrospectives Users can update retrospectives in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update retrospectives in their projects" ON public.retrospectives FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = retrospectives.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: risk_register Users can update risks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update risks in their projects" ON public.risk_register FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = risk_register.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: stakeholders Users can update stakeholders in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update stakeholders in their projects" ON public.stakeholders FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = stakeholders.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: tasks Users can update tasks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update tasks in their projects" ON public.tasks FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = tasks.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: teams Users can update teams in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update teams in their projects" ON public.teams FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = teams.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: profiles Users can update their own profile; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update their own profile" ON public.profiles FOR UPDATE USING ((auth.uid() = id));


--
-- Name: discussion_action_items Users can view action items in their project discussions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view action items in their project discussions" ON public.discussion_action_items FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_action_items.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: audit_log Users can view audit log for their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view audit log for their projects" ON public.audit_log FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = audit_log.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: task_backlog Users can view backlog items in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view backlog items in their projects" ON public.task_backlog FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = task_backlog.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_alert_rules Users can view budget alert rules in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budget alert rules in their projects" ON public.budget_alert_rules FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_alert_rules.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_categories Users can view budget categories in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budget categories in their projects" ON public.budget_categories FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_categories.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_comments Users can view budget comments in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budget comments in their projects" ON public.budget_comments FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_comments.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_receipts Users can view budget receipts in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budget receipts in their projects" ON public.budget_receipts FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_budgets pb
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((pb.id = budget_receipts.project_budget_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: budget_spending Users can view budget spending in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budget spending in their projects" ON public.budget_spending FOR SELECT USING ((EXISTS ( SELECT 1
   FROM ((public.budget_categories bc
     JOIN public.project_budgets pb ON ((pb.id = bc.project_budget_id)))
     JOIN public.projects p ON ((p.id = pb.project_id)))
  WHERE ((bc.id = budget_spending.budget_category_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_budgets Users can view budgets in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view budgets in their projects" ON public.project_budgets FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_budgets.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_iterations Users can view capacity iterations in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view capacity iterations in their projects" ON public.team_capacity_iterations FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_iterations.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_members Users can view capacity members in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view capacity members in their projects" ON public.team_capacity_members FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.team_capacity_iterations tci
     JOIN public.projects p ON ((p.id = tci.project_id)))
  WHERE ((tci.id = team_capacity_members.iteration_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: team_capacity_settings Users can view capacity settings in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view capacity settings in their projects" ON public.team_capacity_settings FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = team_capacity_settings.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: retrospective_cards Users can view cards in accessible retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view cards in accessible retrospectives" ON public.retrospective_cards FOR SELECT USING ((EXISTS ( SELECT 1
   FROM ((public.retrospective_columns rc
     JOIN public.retrospectives r ON ((r.id = rc.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_cards.column_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: discussion_change_log Users can view change log in their project discussions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view change log in their project discussions" ON public.discussion_change_log FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.project_discussions pd
     JOIN public.projects p ON ((p.id = pd.project_id)))
  WHERE ((pd.id = discussion_change_log.discussion_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_discussions Users can view discussions in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view discussions in their projects" ON public.project_discussions FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = project_discussions.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: milestones Users can view milestones in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view milestones in their projects" ON public.milestones FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = milestones.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: project_members Users can view project memberships; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view project memberships" ON public.project_members FOR SELECT TO authenticated USING (true);


--
-- Name: retrospectives Users can view retrospectives in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view retrospectives in their projects" ON public.retrospectives FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = retrospectives.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: risk_register Users can view risks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view risks in their projects" ON public.risk_register FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = risk_register.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: stakeholders Users can view stakeholders in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view stakeholders in their projects" ON public.stakeholders FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = stakeholders.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: task_status_history Users can view task status history in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view task status history in their projects" ON public.task_status_history FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.tasks t
     JOIN public.projects p ON ((p.id = t.project_id)))
  WHERE ((t.id = task_status_history.task_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: tasks Users can view tasks in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view tasks in their projects" ON public.tasks FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = tasks.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: teams Users can view teams in their projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view teams in their projects" ON public.teams FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.projects p
  WHERE ((p.id = teams.project_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: projects Users can view their accessible projects; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view their accessible projects" ON public.projects FOR SELECT TO authenticated USING (((created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR public.is_project_member(auth.uid(), id) OR public.has_project_module_permission(auth.uid(), id)));


--
-- Name: module_permissions Users can view their own module permissions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view their own module permissions" ON public.module_permissions FOR SELECT USING ((user_id = auth.uid()));


--
-- Name: profiles Users can view their own profile; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view their own profile" ON public.profiles FOR SELECT USING ((auth.uid() = id));


--
-- Name: user_roles Users can view their own roles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view their own roles" ON public.user_roles FOR SELECT USING ((auth.uid() = user_id));


--
-- Name: retrospective_card_votes Users can view votes in their retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view votes in their retrospectives" ON public.retrospective_card_votes FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (((public.retrospective_cards rc
     JOIN public.retrospective_columns rcol ON ((rcol.id = rc.column_id)))
     JOIN public.retrospectives r ON ((r.id = rcol.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_card_votes.card_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid())))))))));


--
-- Name: retrospective_card_votes Users can vote in their retrospectives; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can vote in their retrospectives" ON public.retrospective_card_votes FOR INSERT WITH CHECK (((user_id = auth.uid()) AND (EXISTS ( SELECT 1
   FROM (((public.retrospective_cards rc
     JOIN public.retrospective_columns rcol ON ((rcol.id = rc.column_id)))
     JOIN public.retrospectives r ON ((r.id = rcol.retrospective_id)))
     JOIN public.projects p ON ((p.id = r.project_id)))
  WHERE ((rc.id = retrospective_card_votes.card_id) AND ((p.created_by = auth.uid()) OR public.has_role(auth.uid(), 'admin'::public.app_role) OR (EXISTS ( SELECT 1
           FROM public.project_members pm
          WHERE ((pm.project_id = p.id) AND (pm.user_id = auth.uid()))))))))));


--
-- Name: audit_log; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.audit_log ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_alert_rules; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_alert_rules ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_categories; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_categories ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_comments; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_comments ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_receipts; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_receipts ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_spending; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_spending ENABLE ROW LEVEL SECURITY;

--
-- Name: budget_type_config; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.budget_type_config ENABLE ROW LEVEL SECURITY;

--
-- Name: departments; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.departments ENABLE ROW LEVEL SECURITY;

--
-- Name: discussion_action_items; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.discussion_action_items ENABLE ROW LEVEL SECURITY;

--
-- Name: discussion_change_log; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.discussion_change_log ENABLE ROW LEVEL SECURITY;

--
-- Name: iteration_weeks; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.iteration_weeks ENABLE ROW LEVEL SECURITY;

--
-- Name: iterations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.iterations ENABLE ROW LEVEL SECURITY;

--
-- Name: member_weekly_availability; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.member_weekly_availability ENABLE ROW LEVEL SECURITY;

--
-- Name: milestones; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.milestones ENABLE ROW LEVEL SECURITY;

--
-- Name: module_access_audit; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.module_access_audit ENABLE ROW LEVEL SECURITY;

--
-- Name: module_permissions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.module_permissions ENABLE ROW LEVEL SECURITY;

--
-- Name: profiles; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

--
-- Name: project_budgets; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.project_budgets ENABLE ROW LEVEL SECURITY;

--
-- Name: project_discussions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.project_discussions ENABLE ROW LEVEL SECURITY;

--
-- Name: project_members; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.project_members ENABLE ROW LEVEL SECURITY;

--
-- Name: projects; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.projects ENABLE ROW LEVEL SECURITY;

--
-- Name: retrospective_action_items; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.retrospective_action_items ENABLE ROW LEVEL SECURITY;

--
-- Name: retrospective_card_votes; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.retrospective_card_votes ENABLE ROW LEVEL SECURITY;

--
-- Name: retrospective_cards; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.retrospective_cards ENABLE ROW LEVEL SECURITY;

--
-- Name: retrospective_columns; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.retrospective_columns ENABLE ROW LEVEL SECURITY;

--
-- Name: retrospectives; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.retrospectives ENABLE ROW LEVEL SECURITY;

--
-- Name: risk_register; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.risk_register ENABLE ROW LEVEL SECURITY;

--
-- Name: stakeholders; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.stakeholders ENABLE ROW LEVEL SECURITY;

--
-- Name: task_backlog; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.task_backlog ENABLE ROW LEVEL SECURITY;

--
-- Name: task_status_history; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.task_status_history ENABLE ROW LEVEL SECURITY;

--
-- Name: tasks; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.tasks ENABLE ROW LEVEL SECURITY;

--
-- Name: team_capacity_iterations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_capacity_iterations ENABLE ROW LEVEL SECURITY;

--
-- Name: team_capacity_members; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_capacity_members ENABLE ROW LEVEL SECURITY;

--
-- Name: team_capacity_settings; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_capacity_settings ENABLE ROW LEVEL SECURITY;

--
-- Name: team_definitions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_definitions ENABLE ROW LEVEL SECURITY;

--
-- Name: team_members; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;

--
-- Name: teams; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.teams ENABLE ROW LEVEL SECURITY;

--
-- Name: user_roles; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.user_roles ENABLE ROW LEVEL SECURITY;

--
-- Name: weekly_availability; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.weekly_availability ENABLE ROW LEVEL SECURITY;

--
-- Name: weekly_member_availability; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.weekly_member_availability ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE realtime.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets_analytics; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets_analytics ENABLE ROW LEVEL SECURITY;

--
-- Name: migrations; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: objects; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

--
-- Name: prefixes; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.prefixes ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads_parts; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads_parts ENABLE ROW LEVEL SECURITY;

--
-- Name: supabase_realtime; Type: PUBLICATION; Schema: -; Owner: postgres
--

CREATE PUBLICATION supabase_realtime WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime OWNER TO postgres;

--
-- Name: SCHEMA auth; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA auth TO anon;
GRANT USAGE ON SCHEMA auth TO authenticated;
GRANT USAGE ON SCHEMA auth TO service_role;
GRANT ALL ON SCHEMA auth TO supabase_auth_admin;
GRANT ALL ON SCHEMA auth TO dashboard_user;
GRANT USAGE ON SCHEMA auth TO postgres;


--
-- Name: SCHEMA extensions; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA extensions TO anon;
GRANT USAGE ON SCHEMA extensions TO authenticated;
GRANT USAGE ON SCHEMA extensions TO service_role;
GRANT ALL ON SCHEMA extensions TO dashboard_user;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;


--
-- Name: SCHEMA realtime; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA realtime TO postgres;
GRANT USAGE ON SCHEMA realtime TO anon;
GRANT USAGE ON SCHEMA realtime TO authenticated;
GRANT USAGE ON SCHEMA realtime TO service_role;
GRANT ALL ON SCHEMA realtime TO supabase_realtime_admin;


--
-- Name: SCHEMA storage; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA storage TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA storage TO anon;
GRANT USAGE ON SCHEMA storage TO authenticated;
GRANT USAGE ON SCHEMA storage TO service_role;
GRANT ALL ON SCHEMA storage TO supabase_storage_admin;
GRANT ALL ON SCHEMA storage TO dashboard_user;


--
-- Name: SCHEMA vault; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA vault TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA vault TO service_role;


--
-- Name: FUNCTION email(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.email() TO dashboard_user;


--
-- Name: FUNCTION jwt(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.jwt() TO postgres;
GRANT ALL ON FUNCTION auth.jwt() TO dashboard_user;


--
-- Name: FUNCTION role(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.role() TO dashboard_user;


--
-- Name: FUNCTION uid(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.uid() TO dashboard_user;


--
-- Name: FUNCTION armor(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO dashboard_user;


--
-- Name: FUNCTION armor(bytea, text[], text[]); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea, text[], text[]) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO dashboard_user;


--
-- Name: FUNCTION crypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.crypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION dearmor(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.dearmor(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO dashboard_user;


--
-- Name: FUNCTION decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION decrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION gen_random_bytes(integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_bytes(integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO dashboard_user;


--
-- Name: FUNCTION gen_random_uuid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_uuid() FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text, integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text, integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO dashboard_user;


--
-- Name: FUNCTION grant_pg_cron_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_cron_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO dashboard_user;


--
-- Name: FUNCTION grant_pg_graphql_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.grant_pg_graphql_access() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION grant_pg_net_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_net_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO dashboard_user;


--
-- Name: FUNCTION hmac(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION hmac(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO dashboard_user;


--
-- Name: FUNCTION pgp_armor_headers(text, OUT key text, OUT value text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO dashboard_user;


--
-- Name: FUNCTION pgp_key_id(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_key_id(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgrst_ddl_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_ddl_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION pgrst_drop_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_drop_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION set_graphql_placeholder(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.set_graphql_placeholder() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION uuid_generate_v1(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v1mc(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1mc() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v3(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v4(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v4() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v5(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_nil(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_nil() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_dns(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_dns() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_oid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_oid() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_url(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_url() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_x500(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_x500() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO dashboard_user;


--
-- Name: FUNCTION graphql("operationName" text, query text, variables jsonb, extensions jsonb); Type: ACL; Schema: graphql_public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO postgres;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO anon;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO authenticated;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO service_role;


--
-- Name: FUNCTION get_auth(p_usename text); Type: ACL; Schema: pgbouncer; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION pgbouncer.get_auth(p_usename text) FROM PUBLIC;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO pgbouncer;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO postgres;


--
-- Name: FUNCTION calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric, wfh_weight numeric, hybrid_weight numeric); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric, wfh_weight numeric, hybrid_weight numeric) TO anon;
GRANT ALL ON FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric, wfh_weight numeric, hybrid_weight numeric) TO authenticated;
GRANT ALL ON FUNCTION public.calculate_effective_capacity(working_days integer, leaves integer, availability_percent integer, work_mode text, office_weight numeric, wfh_weight numeric, hybrid_weight numeric) TO service_role;


--
-- Name: FUNCTION calculate_weekly_effective_capacity(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.calculate_weekly_effective_capacity() TO anon;
GRANT ALL ON FUNCTION public.calculate_weekly_effective_capacity() TO authenticated;
GRANT ALL ON FUNCTION public.calculate_weekly_effective_capacity() TO service_role;


--
-- Name: FUNCTION find_user_by_email(_email text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.find_user_by_email(_email text) TO anon;
GRANT ALL ON FUNCTION public.find_user_by_email(_email text) TO authenticated;
GRANT ALL ON FUNCTION public.find_user_by_email(_email text) TO service_role;


--
-- Name: FUNCTION get_user_department(_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_department(_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_department(_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_department(_user_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_email_by_id(_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_email_by_id(_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_email_by_id(_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_email_by_id(_user_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_emails_by_ids(_user_ids uuid[]); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_emails_by_ids(_user_ids uuid[]) TO anon;
GRANT ALL ON FUNCTION public.get_user_emails_by_ids(_user_ids uuid[]) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_emails_by_ids(_user_ids uuid[]) TO service_role;


--
-- Name: FUNCTION handle_new_user(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_new_user() TO anon;
GRANT ALL ON FUNCTION public.handle_new_user() TO authenticated;
GRANT ALL ON FUNCTION public.handle_new_user() TO service_role;


--
-- Name: FUNCTION has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO anon;
GRANT ALL ON FUNCTION public.has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO authenticated;
GRANT ALL ON FUNCTION public.has_module_permission(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO service_role;


--
-- Name: FUNCTION has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO anon;
GRANT ALL ON FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO authenticated;
GRANT ALL ON FUNCTION public.has_module_permission_with_admin(_user_id uuid, _project_id uuid, _module public.module_name, _required_access public.access_level) TO service_role;


--
-- Name: FUNCTION has_project_module_permission(_user_id uuid, _project_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid) TO anon;
GRANT ALL ON FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.has_project_module_permission(_user_id uuid, _project_id uuid) TO service_role;


--
-- Name: FUNCTION has_role(_user_id uuid, _role public.app_role); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.has_role(_user_id uuid, _role public.app_role) TO anon;
GRANT ALL ON FUNCTION public.has_role(_user_id uuid, _role public.app_role) TO authenticated;
GRANT ALL ON FUNCTION public.has_role(_user_id uuid, _role public.app_role) TO service_role;


--
-- Name: FUNCTION is_project_member(_user_id uuid, _project_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_project_member(_user_id uuid, _project_id uuid) TO anon;
GRANT ALL ON FUNCTION public.is_project_member(_user_id uuid, _project_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.is_project_member(_user_id uuid, _project_id uuid) TO service_role;


--
-- Name: FUNCTION log_audit_changes(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_audit_changes() TO anon;
GRANT ALL ON FUNCTION public.log_audit_changes() TO authenticated;
GRANT ALL ON FUNCTION public.log_audit_changes() TO service_role;


--
-- Name: FUNCTION log_discussion_changes(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_discussion_changes() TO anon;
GRANT ALL ON FUNCTION public.log_discussion_changes() TO authenticated;
GRANT ALL ON FUNCTION public.log_discussion_changes() TO service_role;


--
-- Name: FUNCTION log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level, _granted_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level, _granted_by uuid) TO anon;
GRANT ALL ON FUNCTION public.log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level, _granted_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.log_module_access(_user_id uuid, _project_id uuid, _module public.module_name, _access_type text, _access_level public.access_level, _granted_by uuid) TO service_role;


--
-- Name: FUNCTION log_task_status_change(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_task_status_change() TO anon;
GRANT ALL ON FUNCTION public.log_task_status_change() TO authenticated;
GRANT ALL ON FUNCTION public.log_task_status_change() TO service_role;


--
-- Name: FUNCTION set_current_user_id(_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_current_user_id(_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.set_current_user_id(_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.set_current_user_id(_user_id uuid) TO service_role;


--
-- Name: FUNCTION trg_milestones_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_milestones_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_milestones_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_milestones_set_department() TO service_role;


--
-- Name: FUNCTION trg_project_members_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_project_members_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_project_members_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_project_members_set_department() TO service_role;


--
-- Name: FUNCTION trg_projects_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_projects_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_projects_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_projects_set_department() TO service_role;


--
-- Name: FUNCTION trg_retrospectives_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_retrospectives_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_retrospectives_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_retrospectives_set_department() TO service_role;


--
-- Name: FUNCTION trg_risk_register_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_risk_register_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_risk_register_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_risk_register_set_department() TO service_role;


--
-- Name: FUNCTION trg_task_backlog_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_task_backlog_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_task_backlog_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_task_backlog_set_department() TO service_role;


--
-- Name: FUNCTION trg_tasks_set_department(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trg_tasks_set_department() TO anon;
GRANT ALL ON FUNCTION public.trg_tasks_set_department() TO authenticated;
GRANT ALL ON FUNCTION public.trg_tasks_set_department() TO service_role;


--
-- Name: FUNCTION trigger_log_module_permission_changes(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.trigger_log_module_permission_changes() TO anon;
GRANT ALL ON FUNCTION public.trigger_log_module_permission_changes() TO authenticated;
GRANT ALL ON FUNCTION public.trigger_log_module_permission_changes() TO service_role;


--
-- Name: FUNCTION update_updated_at_column(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_updated_at_column() TO anon;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO authenticated;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO service_role;


--
-- Name: FUNCTION apply_rls(wal jsonb, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO postgres;
GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO dashboard_user;


--
-- Name: FUNCTION build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO postgres;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO anon;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO service_role;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION "cast"(val text, type_ regtype); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO postgres;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO dashboard_user;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO anon;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO authenticated;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO service_role;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO supabase_realtime_admin;


--
-- Name: FUNCTION check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO postgres;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO anon;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO authenticated;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO service_role;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO supabase_realtime_admin;


--
-- Name: FUNCTION is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO postgres;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO anon;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO service_role;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION quote_wal2json(entity regclass); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO postgres;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO anon;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO authenticated;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO service_role;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO supabase_realtime_admin;


--
-- Name: FUNCTION send(payload jsonb, event text, topic text, private boolean); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO postgres;
GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO dashboard_user;


--
-- Name: FUNCTION subscription_check_filters(); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO postgres;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO dashboard_user;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO anon;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO authenticated;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO service_role;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO supabase_realtime_admin;


--
-- Name: FUNCTION to_regrole(role_name text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO postgres;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO anon;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO authenticated;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO service_role;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO supabase_realtime_admin;


--
-- Name: FUNCTION topic(); Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON FUNCTION realtime.topic() TO postgres;
GRANT ALL ON FUNCTION realtime.topic() TO dashboard_user;


--
-- Name: FUNCTION _crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO service_role;


--
-- Name: FUNCTION create_secret(new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: FUNCTION update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: TABLE audit_log_entries; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.audit_log_entries TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.audit_log_entries TO postgres;
GRANT SELECT ON TABLE auth.audit_log_entries TO postgres WITH GRANT OPTION;


--
-- Name: TABLE flow_state; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.flow_state TO postgres;
GRANT SELECT ON TABLE auth.flow_state TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.flow_state TO dashboard_user;


--
-- Name: TABLE identities; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.identities TO postgres;
GRANT SELECT ON TABLE auth.identities TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.identities TO dashboard_user;


--
-- Name: TABLE instances; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.instances TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.instances TO postgres;
GRANT SELECT ON TABLE auth.instances TO postgres WITH GRANT OPTION;


--
-- Name: TABLE mfa_amr_claims; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_amr_claims TO postgres;
GRANT SELECT ON TABLE auth.mfa_amr_claims TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_amr_claims TO dashboard_user;


--
-- Name: TABLE mfa_challenges; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_challenges TO postgres;
GRANT SELECT ON TABLE auth.mfa_challenges TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_challenges TO dashboard_user;


--
-- Name: TABLE mfa_factors; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_factors TO postgres;
GRANT SELECT ON TABLE auth.mfa_factors TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_factors TO dashboard_user;


--
-- Name: TABLE oauth_clients; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.oauth_clients TO postgres;
GRANT ALL ON TABLE auth.oauth_clients TO dashboard_user;


--
-- Name: TABLE one_time_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.one_time_tokens TO postgres;
GRANT SELECT ON TABLE auth.one_time_tokens TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.one_time_tokens TO dashboard_user;


--
-- Name: TABLE refresh_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.refresh_tokens TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.refresh_tokens TO postgres;
GRANT SELECT ON TABLE auth.refresh_tokens TO postgres WITH GRANT OPTION;


--
-- Name: SEQUENCE refresh_tokens_id_seq; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO dashboard_user;
GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO postgres;


--
-- Name: TABLE saml_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_providers TO postgres;
GRANT SELECT ON TABLE auth.saml_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_providers TO dashboard_user;


--
-- Name: TABLE saml_relay_states; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_relay_states TO postgres;
GRANT SELECT ON TABLE auth.saml_relay_states TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_relay_states TO dashboard_user;


--
-- Name: TABLE sessions; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sessions TO postgres;
GRANT SELECT ON TABLE auth.sessions TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sessions TO dashboard_user;


--
-- Name: TABLE sso_domains; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_domains TO postgres;
GRANT SELECT ON TABLE auth.sso_domains TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_domains TO dashboard_user;


--
-- Name: TABLE sso_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_providers TO postgres;
GRANT SELECT ON TABLE auth.sso_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_providers TO dashboard_user;


--
-- Name: TABLE users; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.users TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.users TO postgres;
GRANT SELECT ON TABLE auth.users TO postgres WITH GRANT OPTION;


--
-- Name: TABLE pg_stat_statements; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements TO dashboard_user;


--
-- Name: TABLE pg_stat_statements_info; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements_info FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO dashboard_user;


--
-- Name: TABLE audit_log; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.audit_log TO anon;
GRANT ALL ON TABLE public.audit_log TO authenticated;
GRANT ALL ON TABLE public.audit_log TO service_role;


--
-- Name: TABLE budget_alert_rules; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_alert_rules TO anon;
GRANT ALL ON TABLE public.budget_alert_rules TO authenticated;
GRANT ALL ON TABLE public.budget_alert_rules TO service_role;


--
-- Name: TABLE budget_categories; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_categories TO anon;
GRANT ALL ON TABLE public.budget_categories TO authenticated;
GRANT ALL ON TABLE public.budget_categories TO service_role;


--
-- Name: TABLE budget_comments; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_comments TO anon;
GRANT ALL ON TABLE public.budget_comments TO authenticated;
GRANT ALL ON TABLE public.budget_comments TO service_role;


--
-- Name: TABLE budget_receipts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_receipts TO anon;
GRANT ALL ON TABLE public.budget_receipts TO authenticated;
GRANT ALL ON TABLE public.budget_receipts TO service_role;


--
-- Name: TABLE budget_spending; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_spending TO anon;
GRANT ALL ON TABLE public.budget_spending TO authenticated;
GRANT ALL ON TABLE public.budget_spending TO service_role;


--
-- Name: TABLE budget_type_config; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.budget_type_config TO anon;
GRANT ALL ON TABLE public.budget_type_config TO authenticated;
GRANT ALL ON TABLE public.budget_type_config TO service_role;


--
-- Name: TABLE departments; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.departments TO anon;
GRANT ALL ON TABLE public.departments TO authenticated;
GRANT ALL ON TABLE public.departments TO service_role;


--
-- Name: TABLE discussion_action_items; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.discussion_action_items TO anon;
GRANT ALL ON TABLE public.discussion_action_items TO authenticated;
GRANT ALL ON TABLE public.discussion_action_items TO service_role;


--
-- Name: TABLE discussion_change_log; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.discussion_change_log TO anon;
GRANT ALL ON TABLE public.discussion_change_log TO authenticated;
GRANT ALL ON TABLE public.discussion_change_log TO service_role;


--
-- Name: TABLE iteration_weeks; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.iteration_weeks TO anon;
GRANT ALL ON TABLE public.iteration_weeks TO authenticated;
GRANT ALL ON TABLE public.iteration_weeks TO service_role;


--
-- Name: TABLE iterations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.iterations TO anon;
GRANT ALL ON TABLE public.iterations TO authenticated;
GRANT ALL ON TABLE public.iterations TO service_role;


--
-- Name: TABLE member_weekly_availability; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.member_weekly_availability TO anon;
GRANT ALL ON TABLE public.member_weekly_availability TO authenticated;
GRANT ALL ON TABLE public.member_weekly_availability TO service_role;


--
-- Name: TABLE milestones; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.milestones TO anon;
GRANT ALL ON TABLE public.milestones TO authenticated;
GRANT ALL ON TABLE public.milestones TO service_role;


--
-- Name: TABLE module_access_audit; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.module_access_audit TO anon;
GRANT ALL ON TABLE public.module_access_audit TO authenticated;
GRANT ALL ON TABLE public.module_access_audit TO service_role;


--
-- Name: TABLE module_permissions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.module_permissions TO anon;
GRANT ALL ON TABLE public.module_permissions TO authenticated;
GRANT ALL ON TABLE public.module_permissions TO service_role;


--
-- Name: TABLE profiles; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.profiles TO anon;
GRANT ALL ON TABLE public.profiles TO authenticated;
GRANT ALL ON TABLE public.profiles TO service_role;


--
-- Name: TABLE project_budgets; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.project_budgets TO anon;
GRANT ALL ON TABLE public.project_budgets TO authenticated;
GRANT ALL ON TABLE public.project_budgets TO service_role;


--
-- Name: TABLE project_discussions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.project_discussions TO anon;
GRANT ALL ON TABLE public.project_discussions TO authenticated;
GRANT ALL ON TABLE public.project_discussions TO service_role;


--
-- Name: TABLE project_members; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.project_members TO anon;
GRANT ALL ON TABLE public.project_members TO authenticated;
GRANT ALL ON TABLE public.project_members TO service_role;


--
-- Name: TABLE projects; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.projects TO anon;
GRANT ALL ON TABLE public.projects TO authenticated;
GRANT ALL ON TABLE public.projects TO service_role;


--
-- Name: TABLE retrospective_action_items; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospective_action_items TO anon;
GRANT ALL ON TABLE public.retrospective_action_items TO authenticated;
GRANT ALL ON TABLE public.retrospective_action_items TO service_role;


--
-- Name: TABLE retrospective_card_votes; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospective_card_votes TO anon;
GRANT ALL ON TABLE public.retrospective_card_votes TO authenticated;
GRANT ALL ON TABLE public.retrospective_card_votes TO service_role;


--
-- Name: TABLE retrospective_cards; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospective_cards TO anon;
GRANT ALL ON TABLE public.retrospective_cards TO authenticated;
GRANT ALL ON TABLE public.retrospective_cards TO service_role;


--
-- Name: TABLE retrospective_columns; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospective_columns TO anon;
GRANT ALL ON TABLE public.retrospective_columns TO authenticated;
GRANT ALL ON TABLE public.retrospective_columns TO service_role;


--
-- Name: TABLE retrospectives; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospectives TO anon;
GRANT ALL ON TABLE public.retrospectives TO authenticated;
GRANT ALL ON TABLE public.retrospectives TO service_role;


--
-- Name: TABLE retrospective_analytics; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.retrospective_analytics TO anon;
GRANT ALL ON TABLE public.retrospective_analytics TO authenticated;
GRANT ALL ON TABLE public.retrospective_analytics TO service_role;


--
-- Name: TABLE risk_register; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.risk_register TO anon;
GRANT ALL ON TABLE public.risk_register TO authenticated;
GRANT ALL ON TABLE public.risk_register TO service_role;


--
-- Name: TABLE stakeholders; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.stakeholders TO anon;
GRANT ALL ON TABLE public.stakeholders TO authenticated;
GRANT ALL ON TABLE public.stakeholders TO service_role;


--
-- Name: TABLE task_backlog; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.task_backlog TO anon;
GRANT ALL ON TABLE public.task_backlog TO authenticated;
GRANT ALL ON TABLE public.task_backlog TO service_role;


--
-- Name: TABLE task_status_history; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.task_status_history TO anon;
GRANT ALL ON TABLE public.task_status_history TO authenticated;
GRANT ALL ON TABLE public.task_status_history TO service_role;


--
-- Name: TABLE tasks; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.tasks TO anon;
GRANT ALL ON TABLE public.tasks TO authenticated;
GRANT ALL ON TABLE public.tasks TO service_role;


--
-- Name: TABLE team_capacity_iterations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_capacity_iterations TO anon;
GRANT ALL ON TABLE public.team_capacity_iterations TO authenticated;
GRANT ALL ON TABLE public.team_capacity_iterations TO service_role;


--
-- Name: TABLE team_capacity_members; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_capacity_members TO anon;
GRANT ALL ON TABLE public.team_capacity_members TO authenticated;
GRANT ALL ON TABLE public.team_capacity_members TO service_role;


--
-- Name: TABLE team_capacity_settings; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_capacity_settings TO anon;
GRANT ALL ON TABLE public.team_capacity_settings TO authenticated;
GRANT ALL ON TABLE public.team_capacity_settings TO service_role;


--
-- Name: TABLE team_definitions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_definitions TO anon;
GRANT ALL ON TABLE public.team_definitions TO authenticated;
GRANT ALL ON TABLE public.team_definitions TO service_role;


--
-- Name: TABLE team_members; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_members TO anon;
GRANT ALL ON TABLE public.team_members TO authenticated;
GRANT ALL ON TABLE public.team_members TO service_role;


--
-- Name: TABLE teams; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.teams TO anon;
GRANT ALL ON TABLE public.teams TO authenticated;
GRANT ALL ON TABLE public.teams TO service_role;


--
-- Name: TABLE user_roles; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.user_roles TO anon;
GRANT ALL ON TABLE public.user_roles TO authenticated;
GRANT ALL ON TABLE public.user_roles TO service_role;


--
-- Name: TABLE weekly_availability; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.weekly_availability TO anon;
GRANT ALL ON TABLE public.weekly_availability TO authenticated;
GRANT ALL ON TABLE public.weekly_availability TO service_role;


--
-- Name: TABLE weekly_member_availability; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.weekly_member_availability TO anon;
GRANT ALL ON TABLE public.weekly_member_availability TO authenticated;
GRANT ALL ON TABLE public.weekly_member_availability TO service_role;


--
-- Name: TABLE messages; Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON TABLE realtime.messages TO postgres;
GRANT ALL ON TABLE realtime.messages TO dashboard_user;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO anon;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO authenticated;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO service_role;


--
-- Name: TABLE schema_migrations; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.schema_migrations TO postgres;
GRANT ALL ON TABLE realtime.schema_migrations TO dashboard_user;
GRANT SELECT ON TABLE realtime.schema_migrations TO anon;
GRANT SELECT ON TABLE realtime.schema_migrations TO authenticated;
GRANT SELECT ON TABLE realtime.schema_migrations TO service_role;
GRANT ALL ON TABLE realtime.schema_migrations TO supabase_realtime_admin;


--
-- Name: TABLE subscription; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.subscription TO postgres;
GRANT ALL ON TABLE realtime.subscription TO dashboard_user;
GRANT SELECT ON TABLE realtime.subscription TO anon;
GRANT SELECT ON TABLE realtime.subscription TO authenticated;
GRANT SELECT ON TABLE realtime.subscription TO service_role;
GRANT ALL ON TABLE realtime.subscription TO supabase_realtime_admin;


--
-- Name: SEQUENCE subscription_id_seq; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO postgres;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO dashboard_user;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO anon;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO authenticated;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO service_role;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO supabase_realtime_admin;


--
-- Name: TABLE buckets; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets TO anon;
GRANT ALL ON TABLE storage.buckets TO authenticated;
GRANT ALL ON TABLE storage.buckets TO service_role;
GRANT ALL ON TABLE storage.buckets TO postgres WITH GRANT OPTION;


--
-- Name: TABLE buckets_analytics; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets_analytics TO service_role;
GRANT ALL ON TABLE storage.buckets_analytics TO authenticated;
GRANT ALL ON TABLE storage.buckets_analytics TO anon;


--
-- Name: TABLE objects; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.objects TO anon;
GRANT ALL ON TABLE storage.objects TO authenticated;
GRANT ALL ON TABLE storage.objects TO service_role;
GRANT ALL ON TABLE storage.objects TO postgres WITH GRANT OPTION;


--
-- Name: TABLE prefixes; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.prefixes TO service_role;
GRANT ALL ON TABLE storage.prefixes TO authenticated;
GRANT ALL ON TABLE storage.prefixes TO anon;


--
-- Name: TABLE s3_multipart_uploads; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO anon;


--
-- Name: TABLE s3_multipart_uploads_parts; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads_parts TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO anon;


--
-- Name: TABLE secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.secrets TO service_role;


--
-- Name: TABLE decrypted_secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.decrypted_secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.decrypted_secrets TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON SEQUENCES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON FUNCTIONS TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON TABLES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO service_role;


--
-- Name: issue_graphql_placeholder; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_graphql_placeholder ON sql_drop
         WHEN TAG IN ('DROP EXTENSION')
   EXECUTE FUNCTION extensions.set_graphql_placeholder();


ALTER EVENT TRIGGER issue_graphql_placeholder OWNER TO supabase_admin;

--
-- Name: issue_pg_cron_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_cron_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_cron_access();


ALTER EVENT TRIGGER issue_pg_cron_access OWNER TO supabase_admin;

--
-- Name: issue_pg_graphql_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_graphql_access ON ddl_command_end
         WHEN TAG IN ('CREATE FUNCTION')
   EXECUTE FUNCTION extensions.grant_pg_graphql_access();


ALTER EVENT TRIGGER issue_pg_graphql_access OWNER TO supabase_admin;

--
-- Name: issue_pg_net_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_net_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_net_access();


ALTER EVENT TRIGGER issue_pg_net_access OWNER TO supabase_admin;

--
-- Name: pgrst_ddl_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_ddl_watch ON ddl_command_end
   EXECUTE FUNCTION extensions.pgrst_ddl_watch();


ALTER EVENT TRIGGER pgrst_ddl_watch OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_drop_watch ON sql_drop
   EXECUTE FUNCTION extensions.pgrst_drop_watch();


ALTER EVENT TRIGGER pgrst_drop_watch OWNER TO supabase_admin;

--
-- PostgreSQL database dump complete
--

\unrestrict je1BWMIK3zEzxviXixXVgo0uS8iaGmGyXtaqnqPsmA1weB9KFSx2CVShQMczk53

--
-- PostgreSQL database cluster dump complete
--

